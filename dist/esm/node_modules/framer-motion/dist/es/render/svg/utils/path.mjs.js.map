{"version":3,"file":"path.mjs.js","sources":["../../../../../../../../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs"],"sourcesContent":["import { px } from 'style-value-types';\n\nvar dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nvar camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing, offset, useDashCase) {\n    if (spacing === void 0) { spacing = 1; }\n    if (offset === void 0) { offset = 0; }\n    if (useDashCase === void 0) { useDashCase = true; }\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    var keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    var pathLength = px.transform(length);\n    var pathSpacing = px.transform(spacing);\n    attrs[keys.array] = \"\".concat(pathLength, \" \").concat(pathSpacing);\n}\n\nexport { buildSVGPath };\n"],"names":["dashKeys","offset","array","camelKeys","buildSVGPath","attrs","length","spacing","useDashCase","pathLength","keys","px","transform","pathSpacing","concat"],"mappings":"sFAEA,IAAIA,EAAW,CACXC,OAAQ,oBACRC,MAAO,oBAEPC,EAAY,CACZF,OAAQ,mBACRC,MAAO,mBASX,SAASE,EAAaC,EAAOC,EAAQC,EAASN,EAAQO,QAClC,IAAZD,IAAsBA,EAAU,QACrB,IAAXN,IAAqBA,EAAS,QACd,IAAhBO,IAA0BA,GAAc,GAE5CH,EAAMI,WAAa,EAGnB,IAAIC,EAAOF,EAAcR,EAAWG,EAEpCE,EAAMK,EAAKT,QAAUU,EAAGC,WAAWX,GAEnC,IAAIQ,EAAaE,EAAGC,UAAUN,GAC1BO,EAAcF,EAAGC,UAAUL,GAC/BF,EAAMK,EAAKR,OAAS,GAAGY,OAAOL,EAAY,KAAKK,OAAOD,EAC1D"}