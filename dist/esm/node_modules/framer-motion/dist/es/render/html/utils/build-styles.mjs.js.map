{"version":3,"file":"build-styles.mjs.js","sources":["../../../../../../../../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs"],"sourcesContent":["import { buildTransform, buildTransformOrigin } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { isTransformProp, isTransformOriginProp } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    var _a;\n    var style = state.style, vars = state.vars, transform = state.transform, transformKeys = state.transformKeys, transformOrigin = state.transformOrigin;\n    // Empty the transformKeys array. As we're throwing out refs to its items\n    // this might not be as cheap as suspected. Maybe using the array as a buffer\n    // with a manual incrementation would be better.\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    var hasTransform = false;\n    var hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    var transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (var key in latestValues) {\n        var value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        var valueType = numberValueTypes[key];\n        var valueAsType = getValueAsType(value, valueType);\n        if (isTransformProp(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0))\n                transformIsNone = false;\n        }\n        else if (isTransformOriginProp(key)) {\n            transformOrigin[key] = valueAsType;\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (hasTransform) {\n        style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n    }\n    else if (transformTemplate) {\n        style.transform = transformTemplate({}, \"\");\n    }\n    else if (!latestValues.transform && style.transform) {\n        style.transform = \"none\";\n    }\n    if (hasTransformOrigin) {\n        style.transformOrigin = buildTransformOrigin(transformOrigin);\n    }\n}\n\nexport { buildHTMLStyles };\n"],"names":["buildHTMLStyles","state","latestValues","options","transformTemplate","_a","style","vars","transform","transformKeys","transformOrigin","length","hasTransform","hasTransformOrigin","transformIsNone","key","value","isCSSVariable","valueType","numberValueTypes","valueAsType","getValueAsType","isTransformProp","push","default","isTransformOriginProp","buildTransform","buildTransformOrigin"],"mappings":"4XAMA,SAASA,EAAgBC,EAAOC,EAAcC,EAASC,GACnD,IAAIC,EACAC,EAAQL,EAAMK,MAAOC,EAAON,EAAMM,KAAMC,EAAYP,EAAMO,UAAWC,EAAgBR,EAAMQ,cAAeC,EAAkBT,EAAMS,gBAItID,EAAcE,OAAS,EAEvB,IAAIC,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,IAAIC,KAAOb,EAAc,CAC1B,IAAIc,EAAQd,EAAaa,GAIzB,GAAIE,EAAcF,GACdR,EAAKQ,GAAOC,MADhB,CAKA,IAAIE,EAAYC,EAAiBJ,GAC7BK,EAAcC,EAAeL,EAAOE,GACxC,GAAII,EAAgBP,GAAM,CAMtB,GAJAH,GAAe,EACfJ,EAAUO,GAAOK,EACjBX,EAAcc,KAAKR,IAEdD,EACD,SAEAE,KAAwC,QAA5BX,EAAKa,EAAUM,eAA4B,IAAPnB,EAAgBA,EAAK,KACrES,GAAkB,EACzB,MACQW,EAAsBV,IAC3BL,EAAgBK,GAAOK,EAEvBP,GAAqB,GAGrBP,EAAMS,GAAOK,CAtBhB,CAwBJ,CACGR,EACAN,EAAME,UAAYkB,EAAezB,EAAOE,EAASW,EAAiBV,GAE7DA,EACLE,EAAME,UAAYJ,EAAkB,CAAE,EAAE,KAElCF,EAAaM,WAAaF,EAAME,YACtCF,EAAME,UAAY,QAElBK,IACAP,EAAMI,gBAAkBiB,EAAqBjB,GAErD"}