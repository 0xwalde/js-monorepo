{"version":3,"file":"setters.mjs.js","sources":["../../../../../../../../node_modules/framer-motion/dist/es/render/utils/setters.mjs"],"sourcesContent":["import { __rest, __assign, __spreadArray, __read } from 'tslib';\nimport { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    var resolved = resolveVariant(visualElement, definition);\n    var _a = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {}, _b = _a.transitionEnd, transitionEnd = _b === void 0 ? {} : _b; _a.transition; var target = __rest(_a, [\"transitionEnd\", \"transition\"]);\n    target = __assign(__assign({}, target), transitionEnd);\n    for (var key in target) {\n        var value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    var reversedLabels = __spreadArray([], __read(variantLabels), false).reverse();\n    reversedLabels.forEach(function (key) {\n        var _a;\n        var variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b, _c;\n    var _d;\n    var newValueKeys = Object.keys(target).filter(function (key) { return !visualElement.hasValue(key); });\n    var numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (var i = 0; i < numNewValues; i++) {\n        var key = newValueKeys[i];\n        var targetValue = target[key];\n        var value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : (_d[key] = value);\n        visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    var valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a, _b;\n    var origin = {};\n    for (var key in target) {\n        origin[key] =\n            (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n"],"names":["setMotionValue","visualElement","key","value","hasValue","getValue","set","addValue","motionValue","setTarget","definition","resolved","resolveVariant","_a","makeTargetAnimatable","_b","transitionEnd","transition","target","__rest","__assign","resolveFinalValueInKeyframes","checkTargetForNewValues","origin","_c","_d","newValueKeys","Object","keys","filter","numNewValues","length","i","targetValue","Array","isArray","readValue","isNumericalString","isZeroValueString","parseFloat","findValueType","complex","test","getAnimatableNone","setBaseTarget","getOriginFromTransition","from","getOrigin","get"],"mappings":"+nBAcA,SAASA,EAAeC,EAAeC,EAAKC,GACpCF,EAAcG,SAASF,GACvBD,EAAcI,SAASH,GAAKI,IAAIH,GAGhCF,EAAcM,SAASL,EAAKM,EAAYL,GAEhD,CACA,SAASM,EAAUR,EAAeS,GAC9B,IAAIC,EAAWC,EAAeX,EAAeS,GACzCG,EAAKF,EAAWV,EAAca,qBAAqBH,GAAU,GAAS,CAAA,EAAII,EAAKF,EAAGG,cAAeA,OAAuB,IAAPD,EAAgB,CAAE,EAAGA,EAAIF,EAAGI,WAAY,IAAIC,EAASC,EAAON,EAAI,CAAC,gBAAiB,eAEvM,IAAK,IAAIX,KADTgB,EAASE,EAASA,EAAS,CAAE,EAAEF,GAASF,GAChB,CAEpBhB,EAAeC,EAAeC,EADlBmB,EAA6BH,EAAOhB,IAEnD,CACL,CAuBA,SAASoB,EAAwBrB,EAAeiB,EAAQK,GACpD,IAAIV,EAAIE,EAAIS,EACRC,EACAC,EAAeC,OAAOC,KAAKV,GAAQW,QAAO,SAAU3B,GAAO,OAAQD,EAAcG,SAASF,EAAO,IACjG4B,EAAeJ,EAAaK,OAChC,GAAKD,EAEL,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAcE,IAAK,CACnC,IAAI9B,EAAMwB,EAAaM,GACnBC,EAAcf,EAAOhB,GACrBC,EAAQ,KAKR+B,MAAMC,QAAQF,KACd9B,EAAQ8B,EAAY,IAOV,OAAV9B,IACAA,EAAoG,QAA3FY,EAA4B,QAAtBF,EAAKU,EAAOrB,UAAyB,IAAPW,EAAgBA,EAAKZ,EAAcmC,UAAUlC,UAAyB,IAAPa,EAAgBA,EAAKG,EAAOhB,IAMxIC,UAEiB,iBAAVA,IACNkC,EAAkBlC,IAAUmC,EAAkBnC,IAE/CA,EAAQoC,WAAWpC,IAEbqC,EAAcrC,IAAUsC,EAAQC,KAAKT,KAC3C9B,EAAQwC,EAAkBzC,EAAK+B,IAEnChC,EAAcM,SAASL,EAAKM,EAAYL,IACV,QAA7BqB,GAAMC,EAAKF,GAAQrB,UAAyB,IAAPsB,IAAsBC,EAAGvB,GAAOC,GACtEF,EAAc2C,cAAc1C,EAAKC,GACpC,CACL,CACA,SAAS0C,EAAwB3C,EAAKe,GAClC,GAAKA,EAGL,OADsBA,EAAWf,IAAQe,EAAoB,SAAKA,GAC3C6B,IAC3B,CACA,SAASC,EAAU7B,EAAQD,EAAYhB,GACnC,IAAIY,EAAIE,EACJQ,EAAS,CAAA,EACb,IAAK,IAAIrB,KAAOgB,EACZK,EAAOrB,GACiD,QAAnDW,EAAKgC,EAAwB3C,EAAKe,UAAgC,IAAPJ,EAAgBA,EAA4C,QAAtCE,EAAKd,EAAcI,SAASH,UAAyB,IAAPa,OAAgB,EAASA,EAAGiC,MAEpK,OAAOzB,CACX"}