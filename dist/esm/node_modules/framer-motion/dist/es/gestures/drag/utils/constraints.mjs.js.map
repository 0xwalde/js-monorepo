{"version":3,"file":"constraints.mjs.js","sources":["../../../../../../../../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs"],"sourcesContent":["import { __read } from 'tslib';\nimport { clamp, mix, progress } from 'popmotion';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, _a, elastic) {\n    var min = _a.min, max = _a.max;\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, _a) {\n    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    var _a;\n    var min = constraintsAxis.min - layoutAxis.min;\n    var max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        _a = __read([max, min], 2), min = _a[0], max = _a[1];\n    }\n    return { min: min, max: max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    var origin = 0.5;\n    var sourceLength = calcLength(source);\n    var targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    var relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nvar defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic) {\n    if (dragElastic === void 0) { dragElastic = defaultElastic; }\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n"],"names":["applyConstraints","point","_a","elastic","min","max","undefined","mix","Math","calcRelativeAxisConstraints","axis","calcRelativeConstraints","layoutBox","top","left","bottom","right","x","y","calcViewportAxisConstraints","layoutAxis","constraintsAxis","__read","calcViewportConstraints","constraintsBox","calcOrigin","source","target","origin","sourceLength","calcLength","targetLength","progress","clamp","rebaseAxisConstraints","layout","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label"],"mappings":"yXASA,SAASA,EAAiBC,EAAOC,EAAIC,GACjC,IAAIC,EAAMF,EAAGE,IAAKC,EAAMH,EAAGG,IAS3B,YARYC,IAARF,GAAqBH,EAAQG,EAE7BH,EAAQE,EAAUI,EAAIH,EAAKH,EAAOE,EAAQC,KAAOI,KAAKH,IAAIJ,EAAOG,QAEpDE,IAARD,GAAqBJ,EAAQI,IAElCJ,EAAQE,EAAUI,EAAIF,EAAKJ,EAAOE,EAAQE,KAAOG,KAAKJ,IAAIH,EAAOI,IAE9DJ,CACX,CAMA,SAASQ,EAA4BC,EAAMN,EAAKC,GAC5C,MAAO,CACHD,SAAaE,IAARF,EAAoBM,EAAKN,IAAMA,OAAME,EAC1CD,SAAaC,IAARD,EACCK,EAAKL,IAAMA,GAAOK,EAAKL,IAAMK,EAAKN,UAClCE,EAEd,CAKA,SAASK,EAAwBC,EAAWV,GACxC,IAAIW,EAAMX,EAAGW,IAAKC,EAAOZ,EAAGY,KAAMC,EAASb,EAAGa,OAAQC,EAAQd,EAAGc,MACjE,MAAO,CACHC,EAAGR,EAA4BG,EAAUK,EAAGH,EAAME,GAClDE,EAAGT,EAA4BG,EAAUM,EAAGL,EAAKE,GAEzD,CAIA,SAASI,EAA4BC,EAAYC,GAC7C,IAAInB,EACAE,EAAMiB,EAAgBjB,IAAMgB,EAAWhB,IACvCC,EAAMgB,EAAgBhB,IAAMe,EAAWf,IAO3C,OAJIgB,EAAgBhB,IAAMgB,EAAgBjB,IACtCgB,EAAWf,IAAMe,EAAWhB,MACAA,GAA5BF,EAAKoB,EAAO,CAACjB,EAAKD,GAAM,IAAa,GAAIC,EAAMH,EAAG,IAE/C,CAAEE,IAAKA,EAAKC,IAAKA,EAC5B,CAIA,SAASkB,EAAwBX,EAAWY,GACxC,MAAO,CACHP,EAAGE,EAA4BP,EAAUK,EAAGO,EAAeP,GAC3DC,EAAGC,EAA4BP,EAAUM,EAAGM,EAAeN,GAEnE,CAKA,SAASO,EAAWC,EAAQC,GACxB,IAAIC,EAAS,GACTC,EAAeC,EAAWJ,GAC1BK,EAAeD,EAAWH,GAO9B,OANII,EAAeF,EACfD,EAASI,EAASL,EAAOvB,IAAKuB,EAAOtB,IAAMwB,EAAcH,EAAOtB,KAE3DyB,EAAeE,IACpBH,EAASI,EAASN,EAAOtB,IAAKsB,EAAOrB,IAAM0B,EAAcJ,EAAOvB,MAE7D6B,EAAM,EAAG,EAAGL,EACvB,CAIA,SAASM,EAAsBC,EAAQC,GACnC,IAAIC,EAAsB,CAAA,EAO1B,YANwB/B,IAApB8B,EAAYhC,MACZiC,EAAoBjC,IAAMgC,EAAYhC,IAAM+B,EAAO/B,UAE/BE,IAApB8B,EAAY/B,MACZgC,EAAoBhC,IAAM+B,EAAY/B,IAAM8B,EAAO/B,KAEhDiC,CACX,CACG,IAACC,EAAiB,IAIrB,SAASC,EAAmBC,GAQxB,YAPoB,IAAhBA,IAA0BA,EALb,MAMG,IAAhBA,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAVa,KAYV,CACHvB,EAAGwB,EAAmBD,EAAa,OAAQ,SAC3CtB,EAAGuB,EAAmBD,EAAa,MAAO,UAElD,CACA,SAASC,EAAmBD,EAAaE,EAAUC,GAC/C,MAAO,CACHvC,IAAKwC,EAAoBJ,EAAaE,GACtCrC,IAAKuC,EAAoBJ,EAAaG,GAE9C,CACA,SAASC,EAAoBJ,EAAaK,GACtC,IAAI3C,EACJ,MAA8B,iBAAhBsC,EACRA,EAC8B,QAA7BtC,EAAKsC,EAAYK,UAA2B,IAAP3C,EAAgBA,EAAK,CACrE"}