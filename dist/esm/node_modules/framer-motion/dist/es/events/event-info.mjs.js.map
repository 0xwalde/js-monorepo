{"version":3,"file":"event-info.mjs.js","sources":["../../../../../../../node_modules/framer-motion/dist/es/events/event-info.mjs"],"sourcesContent":["import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return function (event) {\n        var isMouseEvent = event instanceof MouseEvent;\n        var isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nvar defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    var primaryTouch = e.touches[0] || e.changedTouches[0];\n    var point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nvar wrapHandler = function (handler, shouldFilterPrimaryPointer) {\n    if (shouldFilterPrimaryPointer === void 0) { shouldFilterPrimaryPointer = false; }\n    var listener = function (event) {\n        return handler(event, extractEventInfo(event));\n    };\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n"],"names":["defaultPagePoint","pageX","pageY","pointFromTouch","e","pointType","point","touches","changedTouches","x","y","pointFromMouse","extractEventInfo","event","isTouchEvent","wrapHandler","handler","shouldFilterPrimaryPointer","eventHandler","listener","isMouseEvent","MouseEvent","button"],"mappings":"mEAgBA,IAAIA,EAAmB,CAAEC,MAAO,EAAGC,MAAO,GAC1C,SAASC,EAAeC,EAAGC,QACL,IAAdA,IAAwBA,EAAY,QACxC,IACIC,EADeF,EAAEG,QAAQ,IAAMH,EAAEI,eAAe,IACxBR,EAC5B,MAAO,CACHS,EAAGH,EAAMD,EAAY,KACrBK,EAAGJ,EAAMD,EAAY,KAE7B,CACA,SAASM,EAAeL,EAAOD,GAE3B,YADkB,IAAdA,IAAwBA,EAAY,QACjC,CACHI,EAAGH,EAAMD,EAAY,KACrBK,EAAGJ,EAAMD,EAAY,KAE7B,CACA,SAASO,EAAiBC,EAAOR,GAE7B,YADkB,IAAdA,IAAwBA,EAAY,QACjC,CACHC,MAAOQ,EAAaD,GACdV,EAAeU,EAAOR,GACtBM,EAAeE,EAAOR,GAEpC,CACG,IAACU,EAAc,SAAUC,EAASC,QACE,IAA/BA,IAAyCA,GAA6B,GAC1E,IArC0BC,EAqCtBC,EAAW,SAAUN,GACrB,OAAOG,EAAQH,EAAOD,EAAiBC,GAC/C,EACI,OAAOI,GAxCmBC,EAyCCC,EAxCpB,SAAUN,GACb,IAAIO,EAAeP,aAAiBQ,aACZD,GACnBA,GAAiC,IAAjBP,EAAMS,SAEvBJ,EAAaL,EAEzB,GAkCUM,CACV"}