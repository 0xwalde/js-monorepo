{"version":3,"file":"animate.mjs.js","sources":["../../../../../../../node_modules/framer-motion/dist/es/animation/animate.mjs"],"sourcesContent":["import { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { startAnimation } from './utils/transitions.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition) {\n    if (transition === void 0) { transition = {}; }\n    var value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: function () { return value.stop(); },\n        isAnimating: function () { return value.isAnimating(); },\n    };\n}\n\nexport { animate };\n"],"names":["animate","from","to","transition","value","isMotionValue","motionValue","startAnimation","stop","isAnimating"],"mappings":"sLA+BA,SAASA,EAAQC,EAAMC,EAAIC,QACJ,IAAfA,IAAyBA,EAAa,CAAE,GAC5C,IAAIC,EAAQC,EAAcJ,GAAQA,EAAOK,EAAYL,GAErD,OADAM,EAAe,GAAIH,EAAOF,EAAIC,GACvB,CACHK,KAAM,WAAc,OAAOJ,EAAMI,MAAS,EAC1CC,YAAa,WAAc,OAAOL,EAAMK,aAAgB,EAEhE"}