{"version":3,"file":"delta-calc.mjs.js","sources":["../../../../../../../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs"],"sourcesContent":["import { mix, distance } from 'popmotion';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    if (target === void 0) { target = 0; }\n    if (maxDistance === void 0) { maxDistance = 0.01; }\n    return distance(value, target) < maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin) {\n    if (origin === void 0) { origin = 0.5; }\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n"],"names":["calcLength","axis","max","min","isNear","value","target","maxDistance","distance","calcAxisDelta","delta","source","origin","originPoint","mix","scale","isNaN","translate","calcBoxDelta","x","originX","y","originY","calcRelativeAxis","relative","parent","calcRelativeBox","calcRelativeAxisPosition","layout","calcRelativePosition"],"mappings":"0JAEA,SAASA,EAAWC,GAChB,OAAOA,EAAKC,IAAMD,EAAKE,GAC3B,CACA,SAASC,EAAOC,EAAOC,EAAQC,GAG3B,YAFe,IAAXD,IAAqBA,EAAS,QACd,IAAhBC,IAA0BA,EAAc,KACrCC,EAASH,EAAOC,GAAUC,CACrC,CACA,SAASE,EAAcC,EAAOC,EAAQL,EAAQM,QAC3B,IAAXA,IAAqBA,EAAS,IAClCF,EAAME,OAASA,EACfF,EAAMG,YAAcC,EAAIH,EAAOR,IAAKQ,EAAOT,IAAKQ,EAAME,QACtDF,EAAMK,MAAQf,EAAWM,GAAUN,EAAWW,IAC1CP,EAAOM,EAAMK,MAAO,EAAG,OAAWC,MAAMN,EAAMK,UAC9CL,EAAMK,MAAQ,GAClBL,EAAMO,UACFH,EAAIR,EAAOH,IAAKG,EAAOJ,IAAKQ,EAAME,QAAUF,EAAMG,aAClDT,EAAOM,EAAMO,YAAcD,MAAMN,EAAMO,cACvCP,EAAMO,UAAY,EAC1B,CACA,SAASC,EAAaR,EAAOC,EAAQL,EAAQM,GACzCH,EAAcC,EAAMS,EAAGR,EAAOQ,EAAGb,EAAOa,EAAGP,aAAuC,EAASA,EAAOQ,SAClGX,EAAcC,EAAMW,EAAGV,EAAOU,EAAGf,EAAOe,EAAGT,aAAuC,EAASA,EAAOU,QACtG,CACA,SAASC,EAAiBjB,EAAQkB,EAAUC,GACxCnB,EAAOH,IAAMsB,EAAOtB,IAAMqB,EAASrB,IACnCG,EAAOJ,IAAMI,EAAOH,IAAMH,EAAWwB,EACzC,CACA,SAASE,EAAgBpB,EAAQkB,EAAUC,GACvCF,EAAiBjB,EAAOa,EAAGK,EAASL,EAAGM,EAAON,GAC9CI,EAAiBjB,EAAOe,EAAGG,EAASH,EAAGI,EAAOJ,EAClD,CACA,SAASM,EAAyBrB,EAAQsB,EAAQH,GAC9CnB,EAAOH,IAAMyB,EAAOzB,IAAMsB,EAAOtB,IACjCG,EAAOJ,IAAMI,EAAOH,IAAMH,EAAW4B,EACzC,CACA,SAASC,EAAqBvB,EAAQsB,EAAQH,GAC1CE,EAAyBrB,EAAOa,EAAGS,EAAOT,EAAGM,EAAON,GACpDQ,EAAyBrB,EAAOe,EAAGO,EAAOP,EAAGI,EAAOJ,EACxD"}