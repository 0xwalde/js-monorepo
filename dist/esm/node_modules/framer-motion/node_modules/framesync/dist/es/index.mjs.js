import{onNextFrame as e,defaultTimestep as r}from"./on-next-frame.mjs.js";import{createRenderStep as t}from"./create-render-step.mjs.js";let s=!0,a=!1,m=!1;const d={delta:0,timestamp:0},c=["read","update","preRender","render","postRender"],o=c.reduce(((e,r)=>(e[r]=t((()=>a=!0)),e)),{}),p=c.reduce(((e,r)=>{const t=o[r];return e[r]=(e,r=!1,s=!1)=>(a||f(),t.schedule(e,r,s)),e}),{}),n=c.reduce(((e,r)=>(e[r]=o[r].cancel,e)),{}),u=c.reduce(((e,r)=>(e[r]=()=>o[r].process(d),e)),{}),i=e=>o[e].process(d),l=t=>{a=!1,d.delta=s?r:Math.max(Math.min(t-d.timestamp,40),1),d.timestamp=t,m=!0,c.forEach(i),m=!1,a&&(s=!1,e(l))},f=()=>{a=!0,s=!0,m||e(l)},h=()=>d;export{n as cancelSync,p as default,u as flushSync,h as getFrameData};
//# sourceMappingURL=index.mjs.js.map
