{"version":3,"file":"index.mjs.js","sources":["../../../../../../../../node_modules/framer-motion/node_modules/framesync/dist/es/index.mjs"],"sourcesContent":["import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst frame = {\n    delta: 0,\n    timestamp: 0,\n};\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frame);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frame);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frame.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\nconst getFrameData = () => frame;\n\nexport default sync;\nexport { cancelSync, flushSync, getFrameData };\n"],"names":["useDefaultElapsed","runNextFrame","isProcessing","frame","delta","timestamp","stepsOrder","steps","reduce","acc","key","createRenderStep","sync","step","process","keepAlive","immediate","startLoop","schedule","cancelSync","cancel","flushSync","processStep","stepId","processFrame","defaultTimestep","Math","max","min","forEach","onNextFrame","getFrameData"],"mappings":"yIAIA,IAAIA,GAAoB,EACpBC,GAAe,EACfC,GAAe,EACnB,MAAMC,EAAQ,CACVC,MAAO,EACPC,UAAW,GAETC,EAAa,CACf,OACA,SACA,YACA,SACA,cAEEC,EAAQD,EAAWE,QAAO,CAACC,EAAKC,KAClCD,EAAIC,GAAOC,GAAiB,IAAOV,GAAe,IAC3CQ,IACR,CAAE,GACCG,EAAON,EAAWE,QAAO,CAACC,EAAKC,KACjC,MAAMG,EAAON,EAAMG,GAMnB,OALAD,EAAIC,GAAO,CAACI,EAASC,GAAY,EAAOC,GAAY,KAC3Cf,GACDgB,IACGJ,EAAKK,SAASJ,EAASC,EAAWC,IAEtCP,CAAG,GACX,IACGU,EAAab,EAAWE,QAAO,CAACC,EAAKC,KACvCD,EAAIC,GAAOH,EAAMG,GAAKU,OACfX,IACR,IACGY,EAAYf,EAAWE,QAAO,CAACC,EAAKC,KACtCD,EAAIC,GAAO,IAAMH,EAAMG,GAAKI,QAAQX,GAC7BM,IACR,IACGa,EAAeC,GAAWhB,EAAMgB,GAAQT,QAAQX,GAChDqB,EAAgBnB,IAClBJ,GAAe,EACfE,EAAMC,MAAQJ,EACRyB,EACAC,KAAKC,IAAID,KAAKE,IAAIvB,EAAYF,EAAME,UAzC3B,IAyCmD,GAClEF,EAAME,UAAYA,EAClBH,GAAe,EACfI,EAAWuB,QAAQP,GACnBpB,GAAe,EACXD,IACAD,GAAoB,EACpB8B,EAAYN,GACf,EAECP,EAAY,KACdhB,GAAe,EACfD,GAAoB,EACfE,GACD4B,EAAYN,EAAa,EAE3BO,EAAe,IAAM5B"}