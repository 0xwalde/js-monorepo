import{forwardRef as t,chakra as e}from"../../system/dist/chakra-ui-system.esm.js";import{__DEV__ as r,cx as i}from"../../utils/dist/chakra-ui-utils.esm.js";import{createContext as n,mergeRefs as s}from"../../react-utils/dist/chakra-ui-react-utils.esm.js";import"../../../react/index.js";import{createDescendantContext as a}from"../../descendant/dist/chakra-ui-descendant.esm.js";import{r as o}from"../../../../_virtual/index.js";function u(){return u=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(t[i]=r[i])}return t},u.apply(this,arguments)}var p=a()[3],m=n({name:"PinInputContext",errorMessage:"usePinInputContext: `context` is undefined. Seems you forgot to all pin input fields within `<PinInput />`"})[1];function c(t,e){void 0===t&&(t={}),void 0===e&&(e=null);var r=m().getInputProps,i=p(),n=i.index,a=i.register;return r(u({},t,{ref:s(a,e),index:n}))}var d=t((function(t,r){var n=c(t,r);return o.exports.createElement(e.input,u({},n,{className:i("chakra-pin-input",t.className)}))}));r&&(d.displayName="PinInputField");export{d as PinInputField,m as usePinInputContext,p as usePinInputDescendant,c as usePinInputField};
//# sourceMappingURL=chakra-ui-pin-input.esm.js.map
