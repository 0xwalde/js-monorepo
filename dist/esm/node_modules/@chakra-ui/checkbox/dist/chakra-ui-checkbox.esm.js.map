{"version":3,"file":"chakra-ui-checkbox.esm.js","sources":["../../../../../../node_modules/@chakra-ui/checkbox/dist/chakra-ui-checkbox.esm.js"],"sourcesContent":["import { isInputEvent, addItem, __DEV__, omit, dataAttr, callAllHandlers, focus, callAll, cx } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport { useCallback, useState, useEffect, useRef } from 'react';\nimport { useCallbackRef, useControllableState, useBoolean, useControllableProp, useSafeLayoutEffect, useUpdateEffect } from '@chakra-ui/hooks';\nimport { chakra, forwardRef, useMultiStyleConfig, omitThemingProps } from '@chakra-ui/system';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { useFormControlProps } from '@chakra-ui/form-control';\nimport { visuallyHiddenStyle } from '@chakra-ui/visually-hidden';\nimport { trackFocusVisible } from '@zag-js/focus-visible';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * React hook that provides all the state management logic\n * for a group of checkboxes.\n *\n * It is consumed by the `CheckboxGroup` component\n */\nfunction useCheckboxGroup(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      defaultValue = _props.defaultValue,\n      valueProp = _props.value,\n      onChange = _props.onChange,\n      isDisabled = _props.isDisabled,\n      isNative = _props.isNative;\n  var onChangeProp = useCallbackRef(onChange);\n\n  var _useControllableState = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  }),\n      value = _useControllableState[0],\n      setValue = _useControllableState[1];\n\n  var handleChange = useCallback(function (eventOrValue) {\n    if (!value) return;\n    var isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    var selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    var nextValue = isChecked ? addItem(value, selectedValue) : value.filter(function (v) {\n      return String(v) !== String(selectedValue);\n    });\n    setValue(nextValue);\n  }, [setValue, value]);\n  var getCheckboxProps = useCallback(function (props) {\n    var _extends2;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    var checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return _extends({}, props, (_extends2 = {}, _extends2[checkedKey] = value.some(function (val) {\n      return String(props.value) === String(val);\n    }), _extends2.onChange = handleChange, _extends2));\n  }, [handleChange, isNative, value]);\n  return {\n    value: value,\n    isDisabled: isDisabled,\n    onChange: handleChange,\n    setValue: setValue,\n    getCheckboxProps: getCheckboxProps\n  };\n}\n\nvar _createContext = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n}),\n    CheckboxGroupProvider = _createContext[0],\n    useCheckboxGroupContext = _createContext[1];\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\n\nvar CheckboxGroup = function CheckboxGroup(props) {\n  var colorScheme = props.colorScheme,\n      size = props.size,\n      variant = props.variant,\n      children = props.children,\n      isDisabled = props.isDisabled;\n\n  var _useCheckboxGroup = useCheckboxGroup(props),\n      value = _useCheckboxGroup.value,\n      onChange = _useCheckboxGroup.onChange;\n\n  var group = React.useMemo(function () {\n    return {\n      size: size,\n      onChange: onChange,\n      colorScheme: colorScheme,\n      value: value,\n      variant: variant,\n      isDisabled: isDisabled\n    };\n  }, [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /*#__PURE__*/React.createElement(CheckboxGroupProvider, {\n    value: group\n  }, children);\n};\n\nif (__DEV__) {\n  CheckboxGroup.displayName = \"CheckboxGroup\";\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"isIndeterminate\", \"isChecked\"];\n\nfunction __motion(el) {\n  var m = motion;\n\n  if (\"custom\" in m && typeof m.custom === \"function\") {\n    return m.custom(el);\n  }\n\n  return m(el);\n} // @future: only call `motion(chakra.svg)` when we drop framer-motion v3 support\n\n\nvar MotionSvg = __motion(chakra.svg);\n\nvar CheckIcon = function CheckIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 12 10\",\n    variants: {\n      unchecked: {\n        opacity: 0,\n        strokeDashoffset: 16\n      },\n      checked: {\n        opacity: 1,\n        strokeDashoffset: 0,\n        transition: {\n          duration: 0.2\n        }\n      }\n    },\n    style: {\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: \"currentColor\",\n      strokeDasharray: 16\n    }\n  }, props), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"1.5 6 4.5 9 10.5 1\"\n  }));\n};\n\nvar IndeterminateIcon = function IndeterminateIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    variants: {\n      unchecked: {\n        scaleX: 0.65,\n        opacity: 0\n      },\n      checked: {\n        scaleX: 1,\n        opacity: 1,\n        transition: {\n          scaleX: {\n            duration: 0\n          },\n          opacity: {\n            duration: 0.02\n          }\n        }\n      }\n    },\n    style: {\n      stroke: \"currentColor\",\n      strokeWidth: 4\n    }\n  }, props), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    x2: \"3\",\n    y1: \"12\",\n    y2: \"12\"\n  }));\n};\n\nvar CheckboxTransition = function CheckboxTransition(_ref) {\n  var open = _ref.open,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    initial: false\n  }, open && /*#__PURE__*/React.createElement(motion.div, {\n    variants: {\n      unchecked: {\n        scale: 0.5\n      },\n      checked: {\n        scale: 1\n      }\n    },\n    initial: \"unchecked\",\n    animate: \"checked\",\n    exit: \"unchecked\",\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    }\n  }, children));\n};\n\n/**\n * CheckboxIcon is used to visually indicate the checked or indeterminate\n * state of a checkbox.\n *\n * @todo allow users pass their own icon svgs\n */\nvar CheckboxIcon = function CheckboxIcon(props) {\n  var isIndeterminate = props.isIndeterminate,\n      isChecked = props.isChecked,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$2);\n\n  var IconEl = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return /*#__PURE__*/React.createElement(CheckboxTransition, {\n    open: isChecked || isIndeterminate\n  }, /*#__PURE__*/React.createElement(IconEl, rest));\n};\n\nvar _excluded$1 = [\"defaultChecked\", \"isChecked\", \"isFocusable\", \"onChange\", \"isIndeterminate\", \"name\", \"value\", \"tabIndex\", \"aria-label\", \"aria-labelledby\", \"aria-invalid\"];\n\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/checkbox#hooks\n */\nfunction useCheckbox(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var formControlProps = useFormControlProps(props);\n  var isDisabled = formControlProps.isDisabled,\n      isReadOnly = formControlProps.isReadOnly,\n      isRequired = formControlProps.isRequired,\n      isInvalid = formControlProps.isInvalid,\n      id = formControlProps.id,\n      onBlur = formControlProps.onBlur,\n      onFocus = formControlProps.onFocus,\n      ariaDescribedBy = formControlProps[\"aria-describedby\"];\n\n  var _props = props,\n      defaultChecked = _props.defaultChecked,\n      checkedProp = _props.isChecked,\n      isFocusable = _props.isFocusable,\n      onChange = _props.onChange,\n      isIndeterminate = _props.isIndeterminate,\n      name = _props.name,\n      value = _props.value,\n      _props$tabIndex = _props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? undefined : _props$tabIndex,\n      ariaLabel = _props[\"aria-label\"],\n      ariaLabelledBy = _props[\"aria-labelledby\"],\n      ariaInvalid = _props[\"aria-invalid\"],\n      rest = _objectWithoutPropertiesLoose(_props, _excluded$1);\n\n  var htmlProps = omit(rest, [\"isDisabled\", \"isReadOnly\", \"isRequired\", \"isInvalid\", \"id\", \"onBlur\", \"onFocus\", \"aria-describedby\"]);\n  var onChangeProp = useCallbackRef(onChange);\n  var onBlurProp = useCallbackRef(onBlur);\n  var onFocusProp = useCallbackRef(onFocus);\n\n  var _useState = useState(false),\n      isFocusVisible = _useState[0],\n      setIsFocusVisible = _useState[1];\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocused = _useBoolean[1];\n\n  var _useBoolean2 = useBoolean(),\n      isHovered = _useBoolean2[0],\n      setHovered = _useBoolean2[1];\n\n  var _useBoolean3 = useBoolean(),\n      isActive = _useBoolean3[0],\n      setActive = _useBoolean3[1];\n\n  useEffect(function () {\n    return trackFocusVisible(setIsFocusVisible);\n  }, []);\n  var inputRef = useRef(null);\n\n  var _useState2 = useState(true),\n      rootIsLabelElement = _useState2[0],\n      setRootIsLabelElement = _useState2[1];\n\n  var _useState3 = useState(!!defaultChecked),\n      checkedState = _useState3[0],\n      setCheckedState = _useState3[1];\n\n  var _useControllableProp = useControllableProp(checkedProp, checkedState),\n      isControlled = _useControllableProp[0],\n      isChecked = _useControllableProp[1];\n\n  var handleChange = useCallback(function (event) {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [isReadOnly, isDisabled, isChecked, isControlled, isIndeterminate, onChangeProp]);\n  useSafeLayoutEffect(function () {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  useUpdateEffect(function () {\n    if (isDisabled) {\n      setFocused.off();\n    }\n  }, [isDisabled, setFocused]);\n  /**\n   * HTMLFormElement.reset() should reset the checkbox state\n   */\n\n  useSafeLayoutEffect(function () {\n    var el = inputRef.current;\n    if (!(el != null && el.form)) return;\n\n    el.form.onreset = function () {\n      setCheckedState(!!defaultChecked);\n    };\n  }, []);\n  var trulyDisabled = isDisabled && !isFocusable;\n  var onKeyDown = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.on();\n    }\n  }, [setActive]);\n  var onKeyUp = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.off();\n    }\n  }, [setActive]);\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n\n  useSafeLayoutEffect(function () {\n    if (!inputRef.current) return;\n    var notInSync = inputRef.current.checked !== isChecked;\n\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  var getCheckboxProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    var onPressDown = function onPressDown(event) {\n      // On mousedown, the input blurs and returns focus to the `body`,\n      // we need to prevent this. Native checkboxes keeps focus on `input`\n      if (isFocused) {\n        event.preventDefault();\n      }\n\n      setActive.on();\n    };\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props.onMouseUp, setActive.off),\n      onMouseEnter: callAllHandlers(props.onMouseEnter, setHovered.on),\n      onMouseLeave: callAllHandlers(props.onMouseLeave, setHovered.off)\n    });\n  }, [isActive, isChecked, isDisabled, isFocused, isFocusVisible, isHovered, isIndeterminate, isInvalid, isReadOnly, setActive, setHovered.off, setHovered.on]);\n  var getRootProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, htmlProps, props, {\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setRootIsLabelElement(node.tagName === \"LABEL\");\n      }),\n      onClick: callAllHandlers(props.onClick, function () {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          var _inputRef$current;\n\n          (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.click();\n          focus(inputRef.current, {\n            nextTick: true\n          });\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);\n  var getInputProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name: name,\n      value: value,\n      id: id,\n      tabIndex: tabIndex,\n      onChange: callAllHandlers(props.onChange, handleChange),\n      onBlur: callAllHandlers(props.onBlur, onBlurProp, setFocused.off),\n      onFocus: callAllHandlers(props.onFocus, onFocusProp, setFocused.on),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    });\n  }, [name, value, id, handleChange, setFocused.off, setFocused.on, onBlurProp, onFocusProp, onKeyDown, onKeyUp, isRequired, isChecked, trulyDisabled, isReadOnly, ariaLabel, ariaLabelledBy, ariaInvalid, isInvalid, ariaDescribedBy, isDisabled, tabIndex]);\n  var getLabelProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      onTouchStart: callAllHandlers(props.onTouchStart, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [isChecked, isDisabled, isInvalid]);\n  var state = {\n    isInvalid: isInvalid,\n    isFocused: isFocused,\n    isChecked: isChecked,\n    isActive: isActive,\n    isHovered: isHovered,\n    isIndeterminate: isIndeterminate,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isRequired: isRequired\n  };\n  return {\n    state: state,\n    getRootProps: getRootProps,\n    getCheckboxProps: getCheckboxProps,\n    getInputProps: getInputProps,\n    getLabelProps: getLabelProps,\n    htmlProps: htmlProps\n  };\n}\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nvar _excluded = [\"spacing\", \"className\", \"children\", \"iconColor\", \"iconSize\", \"icon\", \"isChecked\", \"isDisabled\", \"onChange\", \"inputProps\"];\nvar CheckboxControl = chakra(\"span\", {\n  baseStyle: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    verticalAlign: \"top\",\n    userSelect: \"none\",\n    flexShrink: 0\n  }\n});\nvar Label = chakra(\"label\", {\n  baseStyle: {\n    cursor: \"pointer\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    verticalAlign: \"top\",\n    position: \"relative\"\n  }\n});\n\n/**\n * Checkbox\n *\n * React component used in forms when a user needs to select\n * multiple values from several options.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\nvar Checkbox = /*#__PURE__*/forwardRef(function (props, ref) {\n  var group = useCheckboxGroupContext();\n\n  var mergedProps = _extends({}, group, props);\n\n  var styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  var ownProps = omitThemingProps(props);\n\n  var _ownProps$spacing = ownProps.spacing,\n      spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n      className = ownProps.className,\n      children = ownProps.children,\n      iconColor = ownProps.iconColor,\n      iconSize = ownProps.iconSize,\n      _ownProps$icon = ownProps.icon,\n      icon = _ownProps$icon === void 0 ? /*#__PURE__*/React.createElement(CheckboxIcon, null) : _ownProps$icon,\n      isCheckedProp = ownProps.isChecked,\n      _ownProps$isDisabled = ownProps.isDisabled,\n      isDisabled = _ownProps$isDisabled === void 0 ? group == null ? void 0 : group.isDisabled : _ownProps$isDisabled,\n      onChangeProp = ownProps.onChange,\n      inputProps = ownProps.inputProps,\n      rest = _objectWithoutPropertiesLoose(ownProps, _excluded);\n\n  var isChecked = isCheckedProp;\n\n  if (group != null && group.value && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n\n  var onChange = onChangeProp;\n\n  if (group != null && group.onChange && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n\n  var _useCheckbox = useCheckbox(_extends({}, rest, {\n    isDisabled: isDisabled,\n    isChecked: isChecked,\n    onChange: onChange\n  })),\n      state = _useCheckbox.state,\n      getInputProps = _useCheckbox.getInputProps,\n      getCheckboxProps = _useCheckbox.getCheckboxProps,\n      getLabelProps = _useCheckbox.getLabelProps,\n      getRootProps = _useCheckbox.getRootProps;\n\n  var iconStyles = React.useMemo(function () {\n    return _extends({\n      opacity: state.isChecked || state.isIndeterminate ? 1 : 0,\n      transform: state.isChecked || state.isIndeterminate ? \"scale(1)\" : \"scale(0.95)\",\n      fontSize: iconSize,\n      color: iconColor\n    }, styles.icon);\n  }, [iconColor, iconSize, state.isChecked, state.isIndeterminate, styles.icon]);\n  var clonedIcon = /*#__PURE__*/React.cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /*#__PURE__*/React.createElement(Label, _extends({\n    __css: styles.container,\n    className: cx(\"chakra-checkbox\", className)\n  }, getRootProps()), /*#__PURE__*/React.createElement(\"input\", _extends({\n    className: \"chakra-checkbox__input\"\n  }, getInputProps(inputProps, ref))), /*#__PURE__*/React.createElement(CheckboxControl, _extends({\n    __css: styles.control,\n    className: \"chakra-checkbox__control\"\n  }, getCheckboxProps()), clonedIcon), children && /*#__PURE__*/React.createElement(chakra.span, _extends({\n    className: \"chakra-checkbox__label\"\n  }, getLabelProps(), {\n    __css: _extends({\n      marginStart: spacing\n    }, styles.label)\n  }), children));\n});\n\nif (__DEV__) {\n  Checkbox.displayName = \"Checkbox\";\n}\n\nexport { Checkbox, CheckboxGroup, useCheckbox, useCheckboxGroup, useCheckboxGroupContext };\n"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","useCheckboxGroupContext","createContext","name","strict","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded$2","el","m","MotionSvg","chakra","svg","motion","custom","CheckIcon","props","React.createElement","exports","createElement","width","viewBox","variants","unchecked","opacity","strokeDashoffset","checked","transition","duration","style","fill","strokeWidth","stroke","strokeDasharray","points","IndeterminateIcon","scaleX","x1","x2","y1","y2","CheckboxTransition","_ref","open","children","AnimatePresence","initial","div","scale","animate","exit","display","alignItems","justifyContent","height","CheckboxIcon","isIndeterminate","isChecked","rest","IconEl","_excluded$1","useCheckbox","formControlProps","useFormControlProps","isDisabled","isReadOnly","isRequired","isInvalid","id","onBlur","onFocus","ariaDescribedBy","_props","defaultChecked","checkedProp","isFocusable","onChange","value","_props$tabIndex","tabIndex","undefined","ariaLabel","ariaLabelledBy","ariaInvalid","htmlProps","omit","onChangeProp","useCallbackRef","onBlurProp","onFocusProp","_useState","useState","isFocusVisible","setIsFocusVisible","_useBoolean","useBoolean","isFocused","setFocused","_useBoolean2","isHovered","setHovered","_useBoolean3","isActive","setActive","useEffect","trackFocusVisible","inputRef","useRef","_useState2","rootIsLabelElement","setRootIsLabelElement","_useState3","checkedState","setCheckedState","_useControllableProp","useControllableProp","isControlled","handleChange","useCallback","event","preventDefault","useSafeLayoutEffect","current","indeterminate","Boolean","useUpdateEffect","off","form","onreset","trulyDisabled","onKeyDown","on","onKeyUp","getCheckboxProps","forwardedRef","ref","dataAttr","onMouseDown","callAllHandlers","onMouseUp","onMouseEnter","onMouseLeave","getRootProps","mergeRefs","node","tagName","onClick","_inputRef$current","click","focus","nextTick","getInputProps","type","required","disabled","readOnly","visuallyHiddenStyle","getLabelProps","stopEvent","onTouchStart","state","stopPropagation","_excluded","CheckboxControl","baseStyle","verticalAlign","userSelect","flexShrink","Label","cursor","position","Checkbox","forwardRef","group","mergedProps","styles","useMultiStyleConfig","ownProps","omitThemingProps","_ownProps$spacing","spacing","className","iconColor","iconSize","_ownProps$icon","icon","isCheckedProp","_ownProps$isDisabled","inputProps","includes","callAll","_useCheckbox","iconStyles","React.useMemo","transform","fontSize","color","clonedIcon","React.cloneElement","cloneElement","__css","container","cx","control","span","marginStart","label","__DEV__","displayName"],"mappings":"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"}