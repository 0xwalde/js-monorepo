{"version":3,"file":"chakra-ui-tabs.esm.js","sources":["../../../../../../node_modules/@chakra-ui/tabs/dist/chakra-ui-tabs.esm.js"],"sourcesContent":["import { createStylesContext, forwardRef, useMultiStyleConfig, omitThemingProps, chakra } from '@chakra-ui/system';\nimport { normalizeEventKey, callAllHandlers, determineLazyBehavior, isUndefined, focus, omit, cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useClickable } from '@chakra-ui/clickable';\nimport { createDescendantContext } from '@chakra-ui/descendant';\nimport { useControllableState, useId, useSafeLayoutEffect } from '@chakra-ui/hooks';\nimport { createContext, mergeRefs, getValidChildren } from '@chakra-ui/react-utils';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$1 = [\"defaultIndex\", \"onChange\", \"index\", \"isManual\", \"isLazy\", \"lazyBehavior\", \"orientation\", \"direction\"],\n    _excluded2$1 = [\"isDisabled\", \"isFocusable\"],\n    _excluded3 = [\"isSelected\", \"id\", \"children\"];\n/* -------------------------------------------------------------------------------------------------\n * Create context to track descendants and their indices\n * -----------------------------------------------------------------------------------------------*/\n\nvar _createDescendantCont = createDescendantContext(),\n    TabsDescendantsProvider = _createDescendantCont[0],\n    useTabsDescendantsContext = _createDescendantCont[1],\n    useTabsDescendants = _createDescendantCont[2],\n    useTabsDescendant = _createDescendantCont[3];\n\n/**\n * Tabs hook that provides all the states, and accessibility\n * helpers to keep all things working properly.\n *\n * Its returned object will be passed unto a Context Provider\n * so all child components can read from it.\n * There is no document link yet\n * @see Docs https://chakra-ui.com/docs/components/useTabs\n */\nfunction useTabs(props) {\n  var defaultIndex = props.defaultIndex,\n      onChange = props.onChange,\n      index = props.index,\n      isManual = props.isManual,\n      isLazy = props.isLazy,\n      _props$lazyBehavior = props.lazyBehavior,\n      lazyBehavior = _props$lazyBehavior === void 0 ? \"unmount\" : _props$lazyBehavior,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? \"horizontal\" : _props$orientation,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? \"ltr\" : _props$direction,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded$1);\n  /**\n   * We use this to keep track of the index of the focused tab.\n   *\n   * Tabs can be automatically activated, this means selection follows focus.\n   * When we navigate with the arrow keys, we move focus and selection to next/prev tab\n   *\n   * Tabs can also be manually activated, this means selection does not follow focus.\n   * When we navigate with the arrow keys, we only move focus NOT selection. The user\n   * will need not manually activate the tab using `Enter` or `Space`.\n   *\n   * This is why we need to keep track of the `focusedIndex` and `selectedIndex`\n   */\n\n\n  var _React$useState = React.useState(defaultIndex != null ? defaultIndex : 0),\n      focusedIndex = _React$useState[0],\n      setFocusedIndex = _React$useState[1];\n\n  var _useControllableState = useControllableState({\n    defaultValue: defaultIndex != null ? defaultIndex : 0,\n    value: index,\n    onChange: onChange\n  }),\n      selectedIndex = _useControllableState[0],\n      setSelectedIndex = _useControllableState[1];\n  /**\n   * Sync focused `index` with controlled `selectedIndex` (which is the `props.index`)\n   */\n\n\n  React.useEffect(function () {\n    if (index != null) {\n      setFocusedIndex(index);\n    }\n  }, [index]);\n  /**\n   * Think of `useDescendants` as a register for the tab nodes.\n   */\n\n  var descendants = useTabsDescendants();\n  /**\n   * Generate a unique id or use user-provided id for the tabs widget\n   */\n\n  var id = useId(props.id, \"tabs\");\n  return {\n    id: id,\n    selectedIndex: selectedIndex,\n    focusedIndex: focusedIndex,\n    setSelectedIndex: setSelectedIndex,\n    setFocusedIndex: setFocusedIndex,\n    isManual: isManual,\n    isLazy: isLazy,\n    lazyBehavior: lazyBehavior,\n    orientation: orientation,\n    descendants: descendants,\n    direction: direction,\n    htmlProps: htmlProps\n  };\n}\n\nvar _createContext = createContext({\n  name: \"TabsContext\",\n  errorMessage: \"useTabsContext: `context` is undefined. Seems you forgot to wrap all tabs components within <Tabs />\"\n}),\n    TabsProvider = _createContext[0],\n    useTabsContext = _createContext[1];\n\n/**\n * Tabs hook to manage multiple tab buttons,\n * and ensures only one tab is selected per time.\n *\n * @param props props object for the tablist\n */\nfunction useTabList(props) {\n  var _useTabsContext = useTabsContext(),\n      focusedIndex = _useTabsContext.focusedIndex,\n      orientation = _useTabsContext.orientation,\n      direction = _useTabsContext.direction;\n\n  var descendants = useTabsDescendantsContext();\n  var onKeyDown = React.useCallback(function (event) {\n    var _keyMap;\n\n    var nextTab = function nextTab() {\n      var next = descendants.nextEnabled(focusedIndex);\n      if (next) focus(next.node);\n    };\n\n    var prevTab = function prevTab() {\n      var prev = descendants.prevEnabled(focusedIndex);\n      if (prev) focus(prev.node);\n    };\n\n    var firstTab = function firstTab() {\n      var first = descendants.firstEnabled();\n      if (first) focus(first.node);\n    };\n\n    var lastTab = function lastTab() {\n      var last = descendants.lastEnabled();\n      if (last) focus(last.node);\n    };\n\n    var isHorizontal = orientation === \"horizontal\";\n    var isVertical = orientation === \"vertical\";\n    var eventKey = normalizeEventKey(event);\n    var ArrowStart = direction === \"ltr\" ? \"ArrowLeft\" : \"ArrowRight\";\n    var ArrowEnd = direction === \"ltr\" ? \"ArrowRight\" : \"ArrowLeft\";\n    var keyMap = (_keyMap = {}, _keyMap[ArrowStart] = function () {\n      return isHorizontal && prevTab();\n    }, _keyMap[ArrowEnd] = function () {\n      return isHorizontal && nextTab();\n    }, _keyMap.ArrowDown = function ArrowDown() {\n      return isVertical && nextTab();\n    }, _keyMap.ArrowUp = function ArrowUp() {\n      return isVertical && prevTab();\n    }, _keyMap.Home = firstTab, _keyMap.End = lastTab, _keyMap);\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [descendants, focusedIndex, orientation, direction]);\n  return _extends({}, props, {\n    role: \"tablist\",\n    \"aria-orientation\": orientation,\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  });\n}\n\n/**\n * Tabs hook to manage each tab button.\n *\n * A tab can be disabled and focusable, or both,\n * hence the use of `useClickable` to handle this scenario\n */\nfunction useTab(props) {\n  var isDisabled = props.isDisabled,\n      isFocusable = props.isFocusable,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded2$1);\n\n  var _useTabsContext2 = useTabsContext(),\n      setSelectedIndex = _useTabsContext2.setSelectedIndex,\n      isManual = _useTabsContext2.isManual,\n      id = _useTabsContext2.id,\n      setFocusedIndex = _useTabsContext2.setFocusedIndex,\n      selectedIndex = _useTabsContext2.selectedIndex;\n\n  var _useTabsDescendant = useTabsDescendant({\n    disabled: isDisabled && !isFocusable\n  }),\n      index = _useTabsDescendant.index,\n      register = _useTabsDescendant.register;\n\n  var isSelected = index === selectedIndex;\n\n  var onClick = function onClick() {\n    setSelectedIndex(index);\n  };\n\n  var onFocus = function onFocus() {\n    setFocusedIndex(index);\n    var isDisabledButFocusable = isDisabled && isFocusable;\n    var shouldSelect = !isManual && !isDisabledButFocusable;\n\n    if (shouldSelect) {\n      setSelectedIndex(index);\n    }\n  };\n\n  var clickableProps = useClickable(_extends({}, htmlProps, {\n    ref: mergeRefs(register, props.ref),\n    isDisabled: isDisabled,\n    isFocusable: isFocusable,\n    onClick: callAllHandlers(props.onClick, onClick)\n  }));\n  var type = \"button\";\n  return _extends({}, clickableProps, {\n    id: makeTabId(id, index),\n    role: \"tab\",\n    tabIndex: isSelected ? 0 : -1,\n    type: type,\n    \"aria-selected\": isSelected,\n    \"aria-controls\": makeTabPanelId(id, index),\n    onFocus: isDisabled ? undefined : callAllHandlers(props.onFocus, onFocus)\n  });\n}\n\n/**\n * Tabs hook for managing the visibility of multiple tab panels.\n *\n * Since only one panel can be show at a time, we use `cloneElement`\n * to inject `selected` panel to each TabPanel.\n *\n * It returns a cloned version of its children with\n * all functionality included.\n */\nfunction useTabPanels(props) {\n  var context = useTabsContext();\n  var id = context.id,\n      selectedIndex = context.selectedIndex;\n  var validChildren = getValidChildren(props.children);\n  var children = validChildren.map(function (child, index) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      isSelected: index === selectedIndex,\n      id: makeTabPanelId(id, index),\n      // Refers to the associated tab element, and also provides an accessible name to the tab panel.\n      \"aria-labelledby\": makeTabId(id, index)\n    });\n  });\n  return _extends({}, props, {\n    children: children\n  });\n}\n/**\n * Tabs hook for managing the visible/hidden states\n * of the tab panel.\n *\n * @param props props object for the tab panel\n */\n\nfunction useTabPanel(props) {\n  var isSelected = props.isSelected,\n      id = props.id,\n      children = props.children,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  var _useTabsContext3 = useTabsContext(),\n      isLazy = _useTabsContext3.isLazy,\n      lazyBehavior = _useTabsContext3.lazyBehavior;\n\n  var hasBeenSelected = React.useRef(false);\n\n  if (isSelected) {\n    hasBeenSelected.current = true;\n  }\n\n  var shouldRenderChildren = determineLazyBehavior({\n    hasBeenSelected: hasBeenSelected.current,\n    isSelected: isSelected,\n    isLazy: isLazy,\n    lazyBehavior: lazyBehavior\n  });\n  return _extends({\n    // Puts the tabpanel in the page `Tab` sequence.\n    tabIndex: 0\n  }, htmlProps, {\n    children: shouldRenderChildren ? children : null,\n    role: \"tabpanel\",\n    hidden: !isSelected,\n    id: id\n  });\n}\n/**\n * Tabs hook to show an animated indicators that\n * follows the active tab.\n *\n * The way we do it is by measuring the DOM Rect (or dimensions)\n * of the active tab, and return that as CSS style for\n * the indicator.\n */\n\nfunction useTabIndicator() {\n  var context = useTabsContext();\n  var descendants = useTabsDescendantsContext();\n  var selectedIndex = context.selectedIndex,\n      orientation = context.orientation;\n  var isHorizontal = orientation === \"horizontal\";\n  var isVertical = orientation === \"vertical\"; // Get the clientRect of the selected tab\n\n  var _React$useState2 = React.useState(function () {\n    if (isHorizontal) return {\n      left: 0,\n      width: 0\n    };\n    if (isVertical) return {\n      top: 0,\n      height: 0\n    };\n    return undefined;\n  }),\n      rect = _React$useState2[0],\n      setRect = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      hasMeasured = _React$useState3[0],\n      setHasMeasured = _React$useState3[1]; // Update the selected tab rect when the selectedIndex changes\n\n\n  useSafeLayoutEffect(function () {\n    if (isUndefined(selectedIndex)) return undefined;\n    var tab = descendants.item(selectedIndex);\n    if (isUndefined(tab)) return undefined; // Horizontal Tab: Calculate width and left distance\n\n    if (isHorizontal) {\n      setRect({\n        left: tab.node.offsetLeft,\n        width: tab.node.offsetWidth\n      });\n    } // Vertical Tab: Calculate height and top distance\n\n\n    if (isVertical) {\n      setRect({\n        top: tab.node.offsetTop,\n        height: tab.node.offsetHeight\n      });\n    } // Prevent unwanted transition from 0 to measured rect\n    // by setting the measured state in the next tick\n\n\n    var id = requestAnimationFrame(function () {\n      setHasMeasured(true);\n    });\n    return function () {\n      if (id) {\n        cancelAnimationFrame(id);\n      }\n    };\n  }, [selectedIndex, isHorizontal, isVertical, descendants]);\n  return _extends({\n    position: \"absolute\",\n    transitionProperty: \"left, right, top, bottom, height, width\",\n    transitionDuration: hasMeasured ? \"200ms\" : \"0ms\",\n    transitionTimingFunction: \"cubic-bezier(0, 0, 0.2, 1)\"\n  }, rect);\n}\n\nfunction makeTabId(id, index) {\n  return id + \"--tab-\" + index;\n}\n\nfunction makeTabPanelId(id, index) {\n  return id + \"--tabpanel-\" + index;\n}\n\nvar _excluded = [\"children\", \"className\"],\n    _excluded2 = [\"htmlProps\", \"descendants\"];\n\nvar _createStylesContext = createStylesContext(\"Tabs\"),\n    StylesProvider = _createStylesContext[0],\n    useStyles = _createStylesContext[1];\n\nvar useTabsStyles = useStyles;\n\n/**\n * Tabs\n *\n * Provides context and logic for all tabs components.\n */\nvar Tabs = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Tabs\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      children = _omitThemingProps.children,\n      className = _omitThemingProps.className,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var _useTabs = useTabs(rest),\n      htmlProps = _useTabs.htmlProps,\n      descendants = _useTabs.descendants,\n      ctx = _objectWithoutPropertiesLoose(_useTabs, _excluded2);\n\n  var context = React.useMemo(function () {\n    return ctx;\n  }, [ctx]);\n  var rootProps = omit(htmlProps, [\"isFitted\"]);\n  return /*#__PURE__*/React.createElement(TabsDescendantsProvider, {\n    value: descendants\n  }, /*#__PURE__*/React.createElement(TabsProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: cx(\"chakra-tabs\", className),\n    ref: ref\n  }, rootProps, {\n    __css: styles.root\n  }), children))));\n});\n\nif (__DEV__) {\n  Tabs.displayName = \"Tabs\";\n}\n\n/**\n * Tab button used to activate a specific tab panel. It renders a `button`,\n * and is responsible for automatic and manual selection modes.\n */\nvar Tab = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  var tabProps = useTab(_extends({}, props, {\n    ref: ref\n  }));\n\n  var tabStyles = _extends({\n    outline: \"0\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }, styles.tab);\n\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({}, tabProps, {\n    className: cx(\"chakra-tabs__tab\", props.className),\n    __css: tabStyles\n  }));\n});\n\nif (__DEV__) {\n  Tab.displayName = \"Tab\";\n}\n\n/**\n * TabList is used to manage a list of tab buttons. It renders a `div` by default,\n * and is responsible the keyboard interaction between tabs.\n */\nvar TabList = /*#__PURE__*/forwardRef(function (props, ref) {\n  var tablistProps = useTabList(_extends({}, props, {\n    ref: ref\n  }));\n  var styles = useStyles();\n\n  var tablistStyles = _extends({\n    display: \"flex\"\n  }, styles.tablist);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, tablistProps, {\n    className: cx(\"chakra-tabs__tablist\", props.className),\n    __css: tablistStyles\n  }));\n});\n\nif (__DEV__) {\n  TabList.displayName = \"TabList\";\n}\n\n/**\n * TabPanel\n * Used to render the content for a specific tab.\n */\nvar TabPanel = /*#__PURE__*/forwardRef(function (props, ref) {\n  var panelProps = useTabPanel(_extends({}, props, {\n    ref: ref\n  }));\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    outline: \"0\"\n  }, panelProps, {\n    className: cx(\"chakra-tabs__tab-panel\", props.className),\n    __css: styles.tabpanel\n  }));\n});\n\nif (__DEV__) {\n  TabPanel.displayName = \"TabPanel\";\n}\n\n/**\n * TabPanel\n *\n * Used to manage the rendering of multiple tab panels. It uses\n * `cloneElement` to hide/show tab panels.\n *\n * It renders a `div` by default.\n */\nvar TabPanels = /*#__PURE__*/forwardRef(function (props, ref) {\n  var panelsProps = useTabPanels(props);\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, panelsProps, {\n    width: \"100%\",\n    ref: ref,\n    className: cx(\"chakra-tabs__tab-panels\", props.className),\n    __css: styles.tabpanels\n  }));\n});\n\nif (__DEV__) {\n  TabPanels.displayName = \"TabPanels\";\n}\n\n/**\n * TabIndicator\n *\n * Used to render an active tab indicator that animates between\n * selected tabs.\n */\nvar TabIndicator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var indicatorStyle = useTabIndicator();\n\n  var style = _extends({}, props.style, indicatorStyle);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-tabs__tab-indicator\", props.className),\n    style: style,\n    __css: styles.indicator\n  }));\n});\n\nif (__DEV__) {\n  TabIndicator.displayName = \"TabIndicator\";\n}\n\nexport { Tab, TabIndicator, TabList, TabPanel, TabPanels, Tabs, TabsDescendantsProvider, TabsProvider, useTab, useTabIndicator, useTabList, useTabPanel, useTabPanels, useTabs, useTabsContext, useTabsDescendant, useTabsDescendants, useTabsDescendantsContext, useTabsStyles };\n"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded$1","_excluded2$1","_excluded3","_createDescendantCont","createDescendantContext","TabsDescendantsProvider","useTabsDescendantsContext","useTabsDescendants","useTabsDescendant","useTabs","props","defaultIndex","onChange","index","isManual","isLazy","_props$lazyBehavior","lazyBehavior","_props$orientation","orientation","_props$direction","direction","htmlProps","_React$useState","React.useState","focusedIndex","setFocusedIndex","_useControllableState","useControllableState","defaultValue","value","selectedIndex","setSelectedIndex","React.useEffect","descendants","id","useId","_createContext","createContext","name","errorMessage","TabsProvider","useTabsContext","useTabList","_useTabsContext","onKeyDown","React.useCallback","event","_keyMap","nextTab","next","nextEnabled","focus","node","prevTab","prev","prevEnabled","isHorizontal","isVertical","eventKey","normalizeEventKey","ArrowEnd","action","ArrowDown","ArrowUp","Home","first","firstEnabled","End","last","lastEnabled","preventDefault","role","callAllHandlers","useTab","isDisabled","isFocusable","_useTabsContext2","_useTabsDescendant","disabled","register","isSelected","clickableProps","useClickable","ref","mergeRefs","onClick","makeTabId","tabIndex","type","makeTabPanelId","onFocus","undefined","useTabPanels","context","children","getValidChildren","map","child","React.cloneElement","useTabPanel","_useTabsContext3","hasBeenSelected","React.useRef","current","determineLazyBehavior","hidden","useTabIndicator","_React$useState2","left","width","top","height","rect","setRect","_React$useState3","exports","useState","hasMeasured","setHasMeasured","useSafeLayoutEffect","isUndefined","tab","item","offsetLeft","offsetWidth","offsetTop","offsetHeight","requestAnimationFrame","cancelAnimationFrame","position","transitionProperty","transitionDuration","transitionTimingFunction","_excluded","_excluded2","_createStylesContext","createStylesContext","StylesProvider","useStyles","Tabs","forwardRef","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","className","_useTabs","ctx","React.useMemo","rootProps","omit","React.createElement","chakra","div","cx","__css","root","__DEV__","displayName","Tab","tabProps","tabStyles","outline","display","alignItems","justifyContent","button","TabList","tablistProps","tablistStyles","tablist","TabPanel","panelProps","tabpanel","TabPanels","panelsProps","tabpanels","TabIndicator","indicatorStyle","style","indicator"],"mappings":"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"}