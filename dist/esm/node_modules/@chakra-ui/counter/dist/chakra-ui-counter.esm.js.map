{"version":3,"file":"chakra-ui-counter.esm.js","sources":["../../../../../../node_modules/@chakra-ui/counter/dist/chakra-ui-counter.esm.js"],"sourcesContent":["import { useCallbackRef, useControllableProp } from '@chakra-ui/hooks';\nimport { countDecimalPlaces, clampValue, toPrecision, minSafeInteger, maxSafeInteger } from '@chakra-ui/utils';\nimport { useState, useCallback } from 'react';\n\nfunction useCounter(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      onChange = _props.onChange,\n      precisionProp = _props.precision,\n      defaultValue = _props.defaultValue,\n      valueProp = _props.value,\n      _props$step = _props.step,\n      stepProp = _props$step === void 0 ? 1 : _props$step,\n      _props$min = _props.min,\n      min = _props$min === void 0 ? minSafeInteger : _props$min,\n      _props$max = _props.max,\n      max = _props$max === void 0 ? maxSafeInteger : _props$max,\n      _props$keepWithinRang = _props.keepWithinRange,\n      keepWithinRange = _props$keepWithinRang === void 0 ? true : _props$keepWithinRang;\n  var onChangeProp = useCallbackRef(onChange);\n\n  var _useState = useState(function () {\n    var _cast;\n\n    if (defaultValue == null) return \"\";\n    return (_cast = cast(defaultValue, stepProp, precisionProp)) != null ? _cast : \"\";\n  }),\n      valueState = _useState[0],\n      setValue = _useState[1];\n  /**\n   * Because the component that consumes this hook can be controlled or uncontrolled\n   * we'll keep track of that\n   */\n\n\n  var _useControllableProp = useControllableProp(valueProp, valueState),\n      isControlled = _useControllableProp[0],\n      value = _useControllableProp[1];\n\n  var decimalPlaces = getDecimalPlaces(parse(value), stepProp);\n  var precision = precisionProp != null ? precisionProp : decimalPlaces;\n  var update = useCallback(function (next) {\n    if (next === value) return;\n\n    if (!isControlled) {\n      setValue(next.toString());\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(next.toString(), parse(next));\n  }, [onChangeProp, isControlled, value]); // Function to clamp the value and round it to the precision\n\n  var clamp = useCallback(function (value) {\n    var nextValue = value;\n\n    if (keepWithinRange) {\n      nextValue = clampValue(nextValue, min, max);\n    }\n\n    return toPrecision(nextValue, precision);\n  }, [precision, keepWithinRange, max, min]);\n  var increment = useCallback(function (step) {\n    if (step === void 0) {\n      step = stepProp;\n    }\n\n    var next;\n    /**\n     * Let's follow the native browser behavior for\n     * scenarios where the input starts empty (\"\")\n     */\n\n    if (value === \"\") {\n      /**\n       * If `min` is set, native input, starts at the `min`.\n       * Else, it starts at `step`\n       */\n      next = parse(step);\n    } else {\n      next = parse(value) + step;\n    }\n\n    next = clamp(next);\n    update(next);\n  }, [clamp, stepProp, update, value]);\n  var decrement = useCallback(function (step) {\n    if (step === void 0) {\n      step = stepProp;\n    }\n\n    var next; // Same thing here. We'll follow native implementation\n\n    if (value === \"\") {\n      next = parse(-step);\n    } else {\n      next = parse(value) - step;\n    }\n\n    next = clamp(next);\n    update(next);\n  }, [clamp, stepProp, update, value]);\n  var reset = useCallback(function () {\n    var next;\n\n    if (defaultValue == null) {\n      next = \"\";\n    } else {\n      var _cast2;\n\n      next = (_cast2 = cast(defaultValue, stepProp, precisionProp)) != null ? _cast2 : min;\n    }\n\n    update(next);\n  }, [defaultValue, precisionProp, stepProp, update, min]);\n  var castValue = useCallback(function (value) {\n    var _cast3;\n\n    var nextValue = (_cast3 = cast(value, stepProp, precision)) != null ? _cast3 : min;\n    update(nextValue);\n  }, [precision, stepProp, update, min]);\n  var valueAsNumber = parse(value);\n  /**\n   * Common range checks\n   */\n\n  var isOutOfRange = valueAsNumber > max || valueAsNumber < min;\n  var isAtMax = valueAsNumber === max;\n  var isAtMin = valueAsNumber === min;\n  return {\n    isOutOfRange: isOutOfRange,\n    isAtMax: isAtMax,\n    isAtMin: isAtMin,\n    precision: precision,\n    value: value,\n    valueAsNumber: valueAsNumber,\n    update: update,\n    reset: reset,\n    increment: increment,\n    decrement: decrement,\n    clamp: clamp,\n    cast: castValue,\n    setValue: setValue\n  };\n}\n\nfunction parse(value) {\n  return parseFloat(value.toString().replace(/[^\\w.-]+/g, \"\"));\n}\n\nfunction getDecimalPlaces(value, step) {\n  return Math.max(countDecimalPlaces(step), countDecimalPlaces(value));\n}\n\nfunction cast(value, step, precision) {\n  var parsedValue = parse(value);\n  if (Number.isNaN(parsedValue)) return undefined;\n  var decimalPlaces = getDecimalPlaces(parsedValue, step);\n  return toPrecision(parsedValue, precision != null ? precision : decimalPlaces);\n}\n\nexport { useCounter };\n"],"names":["useCounter","props","_props","onChange","precisionProp","precision","defaultValue","valueProp","value","_props$step","step","stepProp","_props$min","min","minSafeInteger","_props$max","max","maxSafeInteger","_props$keepWithinRang","keepWithinRange","onChangeProp","useCallbackRef","_useState","useState","_cast","cast","valueState","setValue","_useControllableProp","useControllableProp","isControlled","decimalPlaces","getDecimalPlaces","parse","update","useCallback","next","toString","clamp","nextValue","clampValue","toPrecision","increment","decrement","reset","_cast2","castValue","_cast3","valueAsNumber","isOutOfRange","isAtMax","isAtMin","parseFloat","replace","Math","countDecimalPlaces","parsedValue","Number","isNaN"],"mappings":"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"}