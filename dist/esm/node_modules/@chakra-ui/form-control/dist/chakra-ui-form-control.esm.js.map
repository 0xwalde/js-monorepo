{"version":3,"file":"chakra-ui-form-control.esm.js","sources":["../../../../../../node_modules/@chakra-ui/form-control/dist/chakra-ui-form-control.esm.js"],"sourcesContent":["import { useId, useBoolean } from '@chakra-ui/hooks';\nimport { createStylesContext, forwardRef, useMultiStyleConfig, omitThemingProps, chakra, useStyleConfig } from '@chakra-ui/system';\nimport { cx, __DEV__, dataAttr, callAllHandlers, ariaAttr } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport Icon from '@chakra-ui/icon';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"id\", \"isRequired\", \"isInvalid\", \"isDisabled\", \"isReadOnly\"],\n    _excluded2$1 = [\"getRootProps\", \"htmlProps\"];\n\nvar _createStylesContext$1 = createStylesContext(\"FormControl\"),\n    StylesProvider$1 = _createStylesContext$1[0],\n    useStyles$1 = _createStylesContext$1[1];\n\nvar useFormControlStyles = useStyles$1;\n\nvar _createContext = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n}),\n    FormControlProvider = _createContext[0],\n    useFormControlContext = _createContext[1];\n\nfunction useFormControlProvider(props) {\n  var idProp = props.id,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isDisabled = props.isDisabled,\n      isReadOnly = props.isReadOnly,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded$2); // Generate all the required ids\n\n\n  var uuid = useId();\n  var id = idProp || \"field-\" + uuid;\n  var labelId = id + \"-label\";\n  var feedbackId = id + \"-feedback\";\n  var helpTextId = id + \"-helptext\";\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n\n  var _React$useState = React.useState(false),\n      hasFeedbackText = _React$useState[0],\n      setHasFeedbackText = _React$useState[1];\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n\n\n  var _React$useState2 = React.useState(false),\n      hasHelpText = _React$useState2[0],\n      setHasHelpText = _React$useState2[1]; // Track whether the form element (e.g, `input`) has focus.\n\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocus = _useBoolean[1];\n\n  var getHelpTextProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({\n      id: helpTextId\n    }, props, {\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setHasHelpText(true);\n      })\n    });\n  }, [helpTextId]);\n  var getLabelProps = React.useCallback(function (props, forwardedRef) {\n    var _props$id, _props$htmlFor;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: (_props$id = props.id) != null ? _props$id : labelId,\n      htmlFor: (_props$htmlFor = props.htmlFor) != null ? _props$htmlFor : id\n    });\n  }, [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]);\n  var getErrorMessageProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({\n      id: feedbackId\n    }, props, {\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    });\n  }, [feedbackId]);\n  var getRootProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, htmlProps, {\n      ref: forwardedRef,\n      role: \"group\"\n    });\n  }, [htmlProps]);\n  var getRequiredIndicatorProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props.children || \"*\"\n    });\n  }, []);\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: setFocus.on,\n    onBlur: setFocus.off,\n    hasFeedbackText: hasFeedbackText,\n    setHasFeedbackText: setHasFeedbackText,\n    hasHelpText: hasHelpText,\n    setHasHelpText: setHasHelpText,\n    id: id,\n    labelId: labelId,\n    feedbackId: feedbackId,\n    helpTextId: helpTextId,\n    htmlProps: htmlProps,\n    getHelpTextProps: getHelpTextProps,\n    getErrorMessageProps: getErrorMessageProps,\n    getRootProps: getRootProps,\n    getLabelProps: getLabelProps,\n    getRequiredIndicatorProps: getRequiredIndicatorProps\n  };\n}\n\n/**\n * FormControl provides context such as\n * `isInvalid`, `isDisabled`, and `isRequired` to form elements.\n *\n * This is commonly used in form elements such as `input`,\n * `select`, `textarea`, etc.\n */\nvar FormControl = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Form\", props);\n  var ownProps = omitThemingProps(props);\n\n  var _useFormControlProvid = useFormControlProvider(ownProps),\n      getRootProps = _useFormControlProvid.getRootProps;\n      _useFormControlProvid.htmlProps;\n      var context = _objectWithoutPropertiesLoose(_useFormControlProvid, _excluded2$1);\n\n  var className = cx(\"chakra-form-control\", props.className);\n  return /*#__PURE__*/React.createElement(FormControlProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider$1, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, getRootProps({}, ref), {\n    className: className,\n    __css: styles[\"container\"]\n  }))));\n});\n\nif (__DEV__) {\n  FormControl.displayName = \"FormControl\";\n}\n\n/**\n * FormHelperText\n *\n * Assistive component that conveys additional guidance\n * about the field, such as how it will be used and what\n * types in values should be provided.\n */\nvar FormHelperText = /*#__PURE__*/forwardRef(function (props, ref) {\n  var field = useFormControlContext();\n  var styles = useStyles$1();\n  var className = cx(\"chakra-form__helper-text\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, field == null ? void 0 : field.getHelpTextProps(props, ref), {\n    __css: styles.helperText,\n    className: className\n  }));\n});\n\nif (__DEV__) {\n  FormHelperText.displayName = \"FormHelperText\";\n}\n\nvar _excluded$1 = [\"isDisabled\", \"isInvalid\", \"isReadOnly\", \"isRequired\"],\n    _excluded2 = [\"id\", \"disabled\", \"readOnly\", \"required\", \"isRequired\", \"isInvalid\", \"isReadOnly\", \"isDisabled\", \"onFocus\", \"onBlur\"];\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n *\n * @internal\n */\nfunction useFormControl(props) {\n  var _useFormControlProps = useFormControlProps(props),\n      isDisabled = _useFormControlProps.isDisabled,\n      isInvalid = _useFormControlProps.isInvalid,\n      isReadOnly = _useFormControlProps.isReadOnly,\n      isRequired = _useFormControlProps.isRequired,\n      rest = _objectWithoutPropertiesLoose(_useFormControlProps, _excluded$1);\n\n  return _extends({}, rest, {\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  });\n}\n/**\n * @internal\n */\n\nfunction useFormControlProps(props) {\n  var _ref, _ref2, _ref3;\n\n  var field = useFormControlContext();\n\n  var id = props.id,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      required = props.required,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isReadOnly = props.isReadOnly,\n      isDisabled = props.isDisabled,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : []; // Error message must be described first in all scenarios.\n\n  if (field != null && field.hasFeedbackText && field != null && field.isInvalid) {\n    labelIds.push(field.feedbackId);\n  }\n\n  if (field != null && field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n\n  return _extends({}, rest, {\n    \"aria-describedby\": labelIds.join(\" \") || undefined,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_ref = disabled != null ? disabled : isDisabled) != null ? _ref : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_ref2 = readOnly != null ? readOnly : isReadOnly) != null ? _ref2 : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_ref3 = required != null ? required : isRequired) != null ? _ref3 : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  });\n}\n\nvar _createStylesContext = createStylesContext(\"FormError\"),\n    StylesProvider = _createStylesContext[0],\n    useStyles = _createStylesContext[1];\n\nvar useFormErrorStyles = useStyles;\n\n/**\n * Used to provide feedback about an invalid input,\n * and suggest clear instructions on how to fix it.\n */\nvar FormErrorMessage = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"FormError\", props);\n  var ownProps = omitThemingProps(props);\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, field == null ? void 0 : field.getErrorMessageProps(ownProps, ref), {\n    className: cx(\"chakra-form__error-message\", props.className),\n    __css: _extends({\n      display: \"flex\",\n      alignItems: \"center\"\n    }, styles.text)\n  })));\n});\n\nif (__DEV__) {\n  FormErrorMessage.displayName = \"FormErrorMessage\";\n}\n/**\n * Used as the visual indicator that a field is invalid or\n * a field has incorrect values.\n */\n\n\nvar FormErrorIcon = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n\n  var _className = cx(\"chakra-form__error-icon\", props.className);\n\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    \"aria-hidden\": true\n  }, props, {\n    __css: styles.icon,\n    className: _className\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n  }));\n});\n\nif (__DEV__) {\n  FormErrorIcon.displayName = \"FormErrorIcon\";\n}\n\nvar _excluded = [\"className\", \"children\", \"requiredIndicator\", \"optionalIndicator\"];\n\n/**\n * Used to enhance the usability of form controls.\n *\n * It is used to inform users as to what information\n * is requested for a form field.\n *\n * ♿️ Accessibility: Every form field should have a form label.\n */\nvar FormLabel = /*#__PURE__*/forwardRef(function (passedProps, ref) {\n  var _field$getLabelProps;\n\n  var styles = useStyleConfig(\"FormLabel\", passedProps);\n  var props = omitThemingProps(passedProps);\n\n  props.className;\n      var children = props.children,\n      _props$requiredIndica = props.requiredIndicator,\n      requiredIndicator = _props$requiredIndica === void 0 ? /*#__PURE__*/React.createElement(RequiredIndicator, null) : _props$requiredIndica,\n      _props$optionalIndica = props.optionalIndicator,\n      optionalIndicator = _props$optionalIndica === void 0 ? null : _props$optionalIndica,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var field = useFormControlContext();\n  var ownProps = (_field$getLabelProps = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _field$getLabelProps : _extends({\n    ref: ref\n  }, rest);\n  return /*#__PURE__*/React.createElement(chakra.label, _extends({}, ownProps, {\n    className: cx(\"chakra-form__label\", props.className),\n    __css: _extends({\n      display: \"block\",\n      textAlign: \"start\"\n    }, styles)\n  }), children, field != null && field.isRequired ? requiredIndicator : optionalIndicator);\n});\n\nif (__DEV__) {\n  FormLabel.displayName = \"FormLabel\";\n}\n\n/**\n * Used to show a \"required\" text or an asterisks (*) to indicate that\n * a field is required.\n */\nvar RequiredIndicator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var field = useFormControlContext();\n  var styles = useFormControlStyles();\n  if (!(field != null && field.isRequired)) return null;\n  var className = cx(\"chakra-form__required-indicator\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({}, field == null ? void 0 : field.getRequiredIndicatorProps(props, ref), {\n    __css: styles.requiredIndicator,\n    className: className\n  }));\n});\n\nif (__DEV__) {\n  RequiredIndicator.displayName = \"RequiredIndicator\";\n}\n\nexport { FormControl, FormErrorIcon, FormErrorMessage, FormHelperText, FormLabel, RequiredIndicator, useFormControl, useFormControlContext, useFormControlProps, useFormControlStyles, useFormErrorStyles };\n"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded$2","_excluded2$1","_createStylesContext$1","createStylesContext","StylesProvider$1","useStyles$1","useFormControlStyles","_createContext","createContext","strict","name","FormControlProvider","useFormControlContext","FormControl","forwardRef","props","ref","styles","useMultiStyleConfig","_useFormControlProvid","idProp","id","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","_React$useState","React.useState","exports","useState","hasFeedbackText","setHasFeedbackText","_React$useState2","hasHelpText","setHasHelpText","_useBoolean","useBoolean","isFocused","setFocus","getHelpTextProps","React.useCallback","forwardedRef","mergeRefs","node","getLabelProps","_props$id","_props$htmlFor","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","on","onBlur","off","useFormControlProvider","omitThemingProps","context","className","cx","React.createElement","value","createElement","chakra","div","__css","__DEV__","displayName","FormHelperText","field","helperText","_excluded$1","_excluded2","useFormControl","_useFormControlProps","useFormControlProps","disabled","readOnly","required","ariaAttr","_ref","_ref2","_ref3","rest","labelIds","push","join","undefined","callAllHandlers","_createStylesContext","StylesProvider","useStyles","FormErrorMessage","ownProps","display","alignItems","text","FormErrorIcon","_className","Icon","icon","fill","d","_excluded","FormLabel","passedProps","_field$getLabelProps","useStyleConfig","_props$requiredIndica","requiredIndicator","RequiredIndicator","_props$optionalIndica","optionalIndicator","label","textAlign","span"],"mappings":"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"}