{"version":3,"file":"index.mjs.js","sources":["../../../../../../../node_modules/style-value-types/dist/es/complex/index.mjs"],"sourcesContent":["import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = '${c}';\nconst numberToken = '${n}';\nfunction test(v) {\n    var _a, _b, _c, _d;\n    return (isNaN(v) &&\n        isString(v) &&\n        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);\n}\nfunction analyse(v) {\n    if (typeof v === 'number')\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, tokenised: v };\n}\nfunction parse(v) {\n    return analyse(v).values;\n}\nfunction createTransformer(v) {\n    const { values, numColors, tokenised } = analyse(v);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === 'number' ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { complex };\n"],"names":["analyse","v","values","numColors","colors","match","colorRegex","length","replace","push","map","color","parse","numbers","floatRegex","number","tokenised","createTransformer","numValues","output","i","transform","sanitize","convertNumbersToZero","complex","test","_a","_b","_c","_d","isNaN","isString","getAnimatableNone","parsed","transformer"],"mappings":"wLAYA,SAASA,EAAQC,GACI,iBAANA,IACPA,EAAI,GAAGA,KACX,MAAMC,EAAS,GACf,IAAIC,EAAY,EAChB,MAAMC,EAASH,EAAEI,MAAMC,GACnBF,IACAD,EAAYC,EAAOG,OACnBN,EAAIA,EAAEO,QAAQF,EAhBH,QAiBXJ,EAAOO,QAAQL,EAAOM,IAAIC,EAAMC,SAEpC,MAAMC,EAAUZ,EAAEI,MAAMS,GAKxB,OAJID,IACAZ,EAAIA,EAAEO,QAAQM,EApBF,QAqBZZ,EAAOO,QAAQI,EAAQH,IAAIK,EAAOH,SAE/B,CAAEV,SAAQC,YAAWa,UAAWf,EAC3C,CACA,SAASW,EAAMX,GACX,OAAOD,EAAQC,GAAGC,MACtB,CACA,SAASe,EAAkBhB,GACvB,MAAMC,OAAEA,EAAMC,UAAEA,EAASa,UAAEA,GAAchB,EAAQC,GAC3CiB,EAAYhB,EAAOK,OACzB,OAAQN,IACJ,IAAIkB,EAASH,EACb,IAAK,IAAII,EAAI,EAAGA,EAAIF,EAAWE,IAC3BD,EAASA,EAAOX,QAAQY,EAAIjB,EAnCrB,OACC,OAkC0DiB,EAAIjB,EAAYQ,EAAMU,UAAUpB,EAAEmB,IAAME,EAASrB,EAAEmB,KAEzH,OAAOD,CAAM,CAErB,CACA,MAAMI,EAAwBtB,GAAmB,iBAANA,EAAiB,EAAIA,EAM3D,MAACuB,EAAU,CAAEC,KA5ClB,SAAcxB,GACV,IAAIyB,EAAIC,EAAIC,EAAIC,EAChB,OAAQC,MAAM7B,IACV8B,EAAS9B,KAC6E,QAApF0B,EAAoC,QAA9BD,EAAKzB,EAAEI,MAAMS,UAAgC,IAAPY,OAAgB,EAASA,EAAGnB,cAA2B,IAAPoB,EAAgBA,EAAK,IAA2F,QAApFE,EAAoC,QAA9BD,EAAK3B,EAAEI,MAAMC,UAAgC,IAAPsB,OAAgB,EAASA,EAAGrB,cAA2B,IAAPsB,EAAgBA,EAAK,GAAK,CACxP,EAuCwBjB,QAAOK,oBAAmBe,kBALlD,SAA2B/B,GACvB,MAAMgC,EAASrB,EAAMX,GAErB,OADoBgB,EAAkBhB,EAC/BiC,CAAYD,EAAOvB,IAAIa,GAClC"}