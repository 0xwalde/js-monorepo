import{color as n}from"../color/index.mjs.js";import{number as e}from"../numbers/index.mjs.js";import{isString as t,floatRegex as o,colorRegex as r,sanitize as s}from"../utils.mjs.js";function l(t){"number"==typeof t&&(t=`${t}`);const s=[];let l=0;const u=t.match(r);u&&(l=u.length,t=t.replace(r,"${c}"),s.push(...u.map(n.parse)));const m=t.match(o);return m&&(t=t.replace(o,"${n}"),s.push(...m.map(e.parse))),{values:s,numColors:l,tokenised:t}}function u(n){return l(n).values}function m(e){const{values:t,numColors:o,tokenised:r}=l(e),u=t.length;return e=>{let t=r;for(let r=0;r<u;r++)t=t.replace(r<o?"${c}":"${n}",r<o?n.transform(e[r]):s(e[r]));return t}}const a=n=>"number"==typeof n?0:n;const c={test:function(n){var e,s,l,u;return isNaN(n)&&t(n)&&(null!==(s=null===(e=n.match(o))||void 0===e?void 0:e.length)&&void 0!==s?s:0)+(null!==(u=null===(l=n.match(r))||void 0===l?void 0:l.length)&&void 0!==u?u:0)>0},parse:u,createTransformer:m,getAnimatableNone:function(n){const e=u(n);return m(n)(e.map(a))}};export{c as complex};
//# sourceMappingURL=index.mjs.js.map
