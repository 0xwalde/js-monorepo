{"version":3,"file":"computeAutoPlacement.js","sources":["../../../../../../../node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js"],"sourcesContent":["import getVariation from \"./getVariation.js\";\nimport { variationPlacements, basePlacements, placements as allPlacements } from \"../enums.js\";\nimport detectOverflow from \"./detectOverflow.js\";\nimport getBasePlacement from \"./getBasePlacement.js\";\nexport default function computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? allPlacements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, \"auto\" cannot be used to allow \"bottom-start\".', 'Use \"auto-start\" instead.'].join(' '));\n    }\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}"],"names":["computeAutoPlacement","state","options","_options","placement","boundary","rootBoundary","padding","flipVariations","_options$allowedAutoP","allowedAutoPlacements","allPlacements","variation","getVariation","placements","variationPlacements","filter","basePlacements","allowedPlacements","indexOf","length","process","env","NODE_ENV","console","error","join","overflows","reduce","acc","detectOverflow","getBasePlacement","Object","keys","sort","a","b"],"mappings":"+LAIe,SAASA,EAAqBC,EAAOC,QAClC,IAAZA,IACFA,EAAU,CAAA,GAGZ,IAAIC,EAAWD,EACXE,EAAYD,EAASC,UACrBC,EAAWF,EAASE,SACpBC,EAAeH,EAASG,aACxBC,EAAUJ,EAASI,QACnBC,EAAiBL,EAASK,eAC1BC,EAAwBN,EAASO,sBACjCA,OAAkD,IAA1BD,EAAmCE,EAAgBF,EAC3EG,EAAYC,EAAaT,GACzBU,EAAaF,EAAYJ,EAAiBO,EAAsBA,EAAoBC,QAAO,SAAUZ,GACvG,OAAOS,EAAaT,KAAeQ,CACpC,IAAIK,EACDC,EAAoBJ,EAAWE,QAAO,SAAUZ,GAClD,OAAOM,EAAsBS,QAAQf,IAAc,CACvD,IAEmC,IAA7Bc,EAAkBE,SACpBF,EAAoBJ,EAES,eAAzBO,QAAQC,IAAIC,UACdC,QAAQC,MAAM,CAAC,+DAAgE,kEAAmE,6BAA8B,8DAA+D,6BAA6BC,KAAK,OAKrR,IAAIC,EAAYT,EAAkBU,QAAO,SAAUC,EAAKzB,GAOtD,OANAyB,EAAIzB,GAAa0B,EAAe7B,EAAO,CACrCG,UAAWA,EACXC,SAAUA,EACVC,aAAcA,EACdC,QAASA,IACRwB,EAAiB3B,IACbyB,CACR,GAAE,CAAE,GACL,OAAOG,OAAOC,KAAKN,GAAWO,MAAK,SAAUC,EAAGC,GAC9C,OAAOT,EAAUQ,GAAKR,EAAUS,EACpC,GACA"}