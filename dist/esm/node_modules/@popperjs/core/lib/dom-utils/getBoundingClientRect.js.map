{"version":3,"file":"getBoundingClientRect.js","sources":["../../../../../../../node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js"],"sourcesContent":["import { isHTMLElement } from \"./instanceOf.js\";\nimport { round } from \"../utils/math.js\";\nexport default function getBoundingClientRect(element, includeScale) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  var rect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n\n  if (isHTMLElement(element) && includeScale) {\n    var offsetHeight = element.offsetHeight;\n    var offsetWidth = element.offsetWidth; // Do not attempt to divide by 0, otherwise we get `Infinity` as scale\n    // Fallback to 1 in case both values are `0`\n\n    if (offsetWidth > 0) {\n      scaleX = round(rect.width) / offsetWidth || 1;\n    }\n\n    if (offsetHeight > 0) {\n      scaleY = round(rect.height) / offsetHeight || 1;\n    }\n  }\n\n  return {\n    width: rect.width / scaleX,\n    height: rect.height / scaleY,\n    top: rect.top / scaleY,\n    right: rect.right / scaleX,\n    bottom: rect.bottom / scaleY,\n    left: rect.left / scaleX,\n    x: rect.left / scaleX,\n    y: rect.top / scaleY\n  };\n}"],"names":["getBoundingClientRect","element","includeScale","rect","scaleX","scaleY","isHTMLElement","offsetHeight","offsetWidth","round","width","height","top","right","bottom","left","x","y"],"mappings":"yFAEe,SAASA,EAAsBC,EAASC,QAChC,IAAjBA,IACFA,GAAe,GAGjB,IAAIC,EAAOF,EAAQD,wBACfI,EAAS,EACTC,EAAS,EAEb,GAAIC,EAAcL,IAAYC,EAAc,CAC1C,IAAIK,EAAeN,EAAQM,aACvBC,EAAcP,EAAQO,YAGtBA,EAAc,IAChBJ,EAASK,EAAMN,EAAKO,OAASF,GAAe,GAG1CD,EAAe,IACjBF,EAASI,EAAMN,EAAKQ,QAAUJ,GAAgB,EAEjD,CAED,MAAO,CACLG,MAAOP,EAAKO,MAAQN,EACpBO,OAAQR,EAAKQ,OAASN,EACtBO,IAAKT,EAAKS,IAAMP,EAChBQ,MAAOV,EAAKU,MAAQT,EACpBU,OAAQX,EAAKW,OAAST,EACtBU,KAAMZ,EAAKY,KAAOX,EAClBY,EAAGb,EAAKY,KAAOX,EACfa,EAAGd,EAAKS,IAAMP,EAElB"}