import t from"../../tiny-invariant/dist/tiny-invariant.esm.js";var o=function(t){var o=t.top,r=t.right,i=t.bottom,n=t.left;return{top:o,right:r,bottom:i,left:n,width:r-n,height:i-o,x:n,y:o,center:{x:(r+n)/2,y:(i+o)/2}}},r=function(t,o){return{top:t.top-o.top,left:t.left-o.left,bottom:t.bottom+o.bottom,right:t.right+o.right}},i=function(t,o){return{top:t.top+o.top,left:t.left+o.left,bottom:t.bottom-o.bottom,right:t.right-o.right}},n={top:0,right:0,bottom:0,left:0},e=function(t){var e=t.borderBox,d=t.margin,g=void 0===d?n:d,a=t.border,p=void 0===a?n:a,m=t.padding,f=void 0===m?n:m,b=o(r(e,g)),h=o(i(e,p)),u=o(i(h,f));return{marginBox:b,borderBox:o(e),paddingBox:h,contentBox:u,margin:g,border:p,padding:f}},d=function(o){var r=o.slice(0,-2);if("px"!==o.slice(-2))return 0;var i=Number(r);return isNaN(i)&&("production"!==process.env.NODE_ENV?t(!1,"Could not parse value [raw: "+o+", without suffix: "+r+"]"):t(!1)),i},g=function(t,o){var r={top:d(o.marginTop),right:d(o.marginRight),bottom:d(o.marginBottom),left:d(o.marginLeft)},i={top:d(o.paddingTop),right:d(o.paddingRight),bottom:d(o.paddingBottom),left:d(o.paddingLeft)},n={top:d(o.borderTopWidth),right:d(o.borderRightWidth),bottom:d(o.borderBottomWidth),left:d(o.borderLeftWidth)};return e({borderBox:t,margin:r,padding:i,border:n})},a=function(t){var o=t.getBoundingClientRect(),r=window.getComputedStyle(t);return g(o,r)};export{g as calculateBox,e as createBox,r as expand,a as getBox,o as getRect,i as shrink};
//# sourceMappingURL=css-box-model.esm.js.map
