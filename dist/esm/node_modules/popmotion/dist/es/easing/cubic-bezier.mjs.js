import{linear as t}from"./index.mjs.js";const n=(t,n)=>1-3*n+3*t,r=(t,n)=>3*n-6*t,o=t=>3*t,e=(t,e,f)=>((n(e,f)*t+r(e,f))*t+o(e))*t,f=(t,e,f)=>3*n(e,f)*t*t+2*r(e,f)*t+o(e);function u(n,r,o,u){if(n===r&&o===u)return t;const i=new Float32Array(11);for(let t=0;t<11;++t)i[t]=e(.1*t,n,o);function c(t){let r=0,u=1;for(;10!==u&&i[u]<=t;++u)r+=.1;--u;const c=r+.1*((t-i[u])/(i[u+1]-i[u])),s=f(c,n,o);return s>=.001?function(t,n,r,o){for(let u=0;u<8;++u){const u=f(n,r,o);if(0===u)return n;n-=(e(n,r,o)-t)/u}return n}(t,c,n,o):0===s?c:function(t,n,r,o,f){let u,i,c=0;do{i=n+(r-n)/2,u=e(i,o,f)-t,u>0?r=i:n=i}while(Math.abs(u)>1e-7&&++c<10);return i}(t,r,r+.1,n,o)}return t=>0===t||1===t?t:e(c(t),r,u)}export{u as cubicBezier};
//# sourceMappingURL=cubic-bezier.mjs.js.map
