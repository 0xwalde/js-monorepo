import{progress as t}from"./progress.mjs.js";import{mix as e}from"./mix.mjs.js";import{mixColor as r}from"./mix-color.mjs.js";import{mixComplex as s,mixArray as o,mixObject as n}from"./mix-complex.mjs.js";import{clamp as i}from"./clamp.mjs.js";import{pipe as m}from"./pipe.mjs.js";import{invariant as p}from"../../../../hey-listen/dist/hey-listen.es.js";import{color as c}from"../../../../style-value-types/dist/es/color/index.mjs.js";const f=(t,r)=>s=>e(t,r,s);function l(t,e,i){const p=[],l=i||("number"==typeof(a=t[0])?f:"string"==typeof a?c.test(a)?r:s:Array.isArray(a)?o:"object"==typeof a?n:void 0);var a;const u=t.length-1;for(let r=0;r<u;r++){let s=l(t[r],t[r+1]);if(e){const t=Array.isArray(e)?e[r]:e;s=m(t,s)}p.push(s)}return p}function a(e,r,{clamp:s=!0,ease:o,mixer:n}={}){const m=e.length;p(m===r.length,"Both input and output ranges must be the same length"),p(!o||!Array.isArray(o)||o.length===m-1,"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values."),e[0]>e[m-1]&&(e=[].concat(e),r=[].concat(r),e.reverse(),r.reverse());const c=l(r,o,n),f=2===m?function([e,r],[s]){return o=>s(t(e,r,o))}(e,c):function(e,r){const s=e.length,o=s-1;return n=>{let i=0,m=!1;if(n<=e[0]?m=!0:n>=e[o]&&(i=o-1,m=!0),!m){let t=1;for(;t<s&&!(e[t]>n||t===o);t++);i=t-1}const p=t(e[i],e[i+1],n);return r[i](p)}}(e,c);return s?t=>f(i(e[0],e[m-1],t)):f}export{a as interpolate};
//# sourceMappingURL=interpolate.mjs.js.map
