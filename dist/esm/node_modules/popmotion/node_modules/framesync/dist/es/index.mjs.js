import{onNextFrame as e,defaultTimestep as r}from"./on-next-frame.mjs.js";import{createRenderStep as t}from"./create-render-step.mjs.js";let s=!0,a=!1,m=!1;const c={delta:0,timestamp:0},d=["read","update","preRender","render","postRender"],o=d.reduce(((e,r)=>(e[r]=t((()=>a=!0)),e)),{}),n=d.reduce(((e,r)=>{const t=o[r];return e[r]=(e,r=!1,s=!1)=>(a||l(),t.schedule(e,r,s)),e}),{}),p=d.reduce(((e,r)=>(e[r]=o[r].cancel,e)),{});d.reduce(((e,r)=>(e[r]=()=>o[r].process(c),e)),{});const u=e=>o[e].process(c),i=t=>{a=!1,c.delta=s?r:Math.max(Math.min(t-c.timestamp,40),1),c.timestamp=t,m=!0,d.forEach(u),m=!1,a&&(s=!1,e(i))},l=()=>{a=!0,s=!0,m||e(i)},f=()=>c;export{p as cancelSync,n as default,f as getFrameData};
//# sourceMappingURL=index.mjs.js.map
