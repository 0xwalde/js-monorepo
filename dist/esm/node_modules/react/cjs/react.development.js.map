{"version":3,"file":"react.development.js","sources":["../../../../../node_modules/react/cjs/react.development.js"],"sourcesContent":["/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var ReactVersion = '18.1.0';\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\n// ATTENTION\n\nvar REACT_ELEMENT_TYPE =  Symbol.for('react.element');\nvar REACT_PORTAL_TYPE =  Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE =  Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE =  Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE =  Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE =  Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE =  Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE =  Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE =  Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE =  Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE =  Symbol.for('react.memo');\nvar REACT_LAZY_TYPE =  Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE =  Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL =  Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  transition: null\n};\n\nvar ReactCurrentActQueue = {\n  current: null,\n  // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n  isBatchingLegacy: false,\n  didScheduleLegacyUpdate: false\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar ReactDebugCurrentFrame = {};\nvar currentExtraStackFrame = null;\nfunction setExtraStackFrame(stack) {\n  {\n    currentExtraStackFrame = stack;\n  }\n}\n\n{\n  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {\n    {\n      currentExtraStackFrame = stack;\n    }\n  }; // Stack implementation injected by the current renderer.\n\n\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentExtraStackFrame) {\n      stack += currentExtraStackFrame;\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner\n};\n\n{\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning('warn', format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar assign = Object.assign;\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {\n    throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (element === null || element === undefined) {\n    throw new Error(\"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\");\n  }\n\n  var propName; // Original props are copied\n\n  var props = assign({}, element.props); // Reserved names are extracted\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = key.replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getElementKey(element, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    {\n      checkKeyStringCoercion(element.key);\n    }\n\n    return escape('' + element.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    var _child = children;\n    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n\n    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n\n    if (isArray(mappedChild)) {\n      var escapedChildKey = '';\n\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n\n      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n        return c;\n      });\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        {\n          // The `if` statement here prevents auto-disabling of the safe\n          // coercion ESLint rule, so we must manually disable it below.\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n          if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n            checkKeyStringCoercion(mappedChild.key);\n          }\n        }\n\n        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n        // traverseAllChildren used to do for objects as children\n        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n        // eslint-disable-next-line react-internal/safe-string-coercion\n        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);\n      }\n\n      array.push(mappedChild);\n    }\n\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n      var iterableChildren = children;\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(iterableChildren);\n      var step;\n      var ii = 0;\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n      }\n    } else if (type === 'object') {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      var childrenString = String(children);\n      throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  var count = 0;\n  mapIntoArray(children, result, '', '', function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  var n = 0;\n  mapChildren(children, function () {\n    n++; // Don't return anything\n  });\n  return n;\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  mapChildren(children, function () {\n    forEachFunc.apply(this, arguments); // Don't return anything.\n  }, forEachContext);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  return mapChildren(children, function (child) {\n    return child;\n  }) || [];\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    throw new Error('React.Children.only expected to receive a single React element child.');\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue) {\n  // TODO: Second argument used to be an optional `calculateChangedBits`\n  // function. Warn to reserve for future use?\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null,\n    // Add these to use same hidden class in VM as ServerContext\n    _defaultValue: null,\n    _globalName: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n  var hasWarnedAboutDisplayNameOnConsumer = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      },\n      displayName: {\n        get: function () {\n          return context.displayName;\n        },\n        set: function (displayName) {\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\n            warn('Setting `displayName` on Context.Consumer has no effect. ' + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n\n            hasWarnedAboutDisplayNameOnConsumer = true;\n          }\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nvar Uninitialized = -1;\nvar Pending = 0;\nvar Resolved = 1;\nvar Rejected = 2;\n\nfunction lazyInitializer(payload) {\n  if (payload._status === Uninitialized) {\n    var ctor = payload._result;\n    var thenable = ctor(); // Transition to the next state.\n    // This might throw either because it's missing or throws. If so, we treat it\n    // as still uninitialized and try again next time. Which is the same as what\n    // happens if the ctor or any wrappers processing the ctor throws. This might\n    // end up fixing it if the resolution was a concurrency bug.\n\n    thenable.then(function (moduleObject) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var resolved = payload;\n        resolved._status = Resolved;\n        resolved._result = moduleObject;\n      }\n    }, function (error) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var rejected = payload;\n        rejected._status = Rejected;\n        rejected._result = error;\n      }\n    });\n\n    if (payload._status === Uninitialized) {\n      // In case, we're still uninitialized, then we're waiting for the thenable\n      // to resolve. Set it as pending in the meantime.\n      var pending = payload;\n      pending._status = Pending;\n      pending._result = thenable;\n    }\n  }\n\n  if (payload._status === Resolved) {\n    var moduleObject = payload._result;\n\n    {\n      if (moduleObject === undefined) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\\n\\n\" + 'Did you accidentally put curly braces around the import?', moduleObject);\n      }\n    }\n\n    {\n      if (!('default' in moduleObject)) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n      }\n    }\n\n    return moduleObject.default;\n  } else {\n    throw payload._result;\n  }\n}\n\nfunction lazy(ctor) {\n  var payload = {\n    // We use these fields to store the result.\n    _status: Uninitialized,\n    _result: ctor\n  };\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes; // $FlowFixMe\n\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.forwardRef((props, ref) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!render.name && !render.displayName) {\n          render.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.memo((props) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!type.name && !type.displayName) {\n          type.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  {\n    if (dispatcher === null) {\n      error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\n    }\n  } // Will result in a null access error if accessed outside render phase. We\n  // intentionally don't throw our own error because this is in a hot path.\n  // Also helps ensure this is inlined.\n\n\n  return dispatcher;\n}\nfunction useContext(Context) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    // TODO: add a more generic warning for invalid values.\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useInsertionEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useInsertionEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\nfunction useTransition() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useTransition();\n}\nfunction useDeferredValue(value) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value);\n}\nfunction useId() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useId();\n}\nfunction useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher$1.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher$1.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      setExtraStackFrame(stack);\n    } else {\n      setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n  }\n\n  {\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\nfunction startTransition(scope, options) {\n  var prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = {};\n  var currentTransition = ReactCurrentBatchConfig.transition;\n\n  {\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n  }\n\n  try {\n    scope();\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        var updatedFibersCount = currentTransition._updatedFibers.size;\n\n        if (updatedFibersCount > 10) {\n          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n        }\n\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nvar didWarnAboutMessageChannel = false;\nvar enqueueTaskImpl = null;\nfunction enqueueTask(task) {\n  if (enqueueTaskImpl === null) {\n    try {\n      // read require off the module object to get around the bundlers.\n      // we don't want them to detect a require and bundle a Node polyfill.\n      var requireString = ('require' + Math.random()).slice(0, 7);\n      var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n      // version of setImmediate, bypassing fake timers if any.\n\n      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n    } catch (_err) {\n      // we're in a browser\n      // we can't use regular timers because they may still be faked\n      // so we try MessageChannel+postMessage instead\n      enqueueTaskImpl = function (callback) {\n        {\n          if (didWarnAboutMessageChannel === false) {\n            didWarnAboutMessageChannel = true;\n\n            if (typeof MessageChannel === 'undefined') {\n              error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');\n            }\n          }\n        }\n\n        var channel = new MessageChannel();\n        channel.port1.onmessage = callback;\n        channel.port2.postMessage(undefined);\n      };\n    }\n  }\n\n  return enqueueTaskImpl(task);\n}\n\nvar actScopeDepth = 0;\nvar didWarnNoAwaitAct = false;\nfunction act(callback) {\n  {\n    // `act` calls can be nested, so we track the depth. This represents the\n    // number of `act` scopes on the stack.\n    var prevActScopeDepth = actScopeDepth;\n    actScopeDepth++;\n\n    if (ReactCurrentActQueue.current === null) {\n      // This is the outermost `act` scope. Initialize the queue. The reconciler\n      // will detect the queue and use it instead of Scheduler.\n      ReactCurrentActQueue.current = [];\n    }\n\n    var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n    var result;\n\n    try {\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n      // set to `true` while the given callback is executed, not for updates\n      // triggered during an async event, because this is how the legacy\n      // implementation of `act` behaved.\n      ReactCurrentActQueue.isBatchingLegacy = true;\n      result = callback(); // Replicate behavior of original `act` implementation in legacy mode,\n      // which flushed updates immediately after the scope function exits, even\n      // if it's an async function.\n\n      if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {\n        var queue = ReactCurrentActQueue.current;\n\n        if (queue !== null) {\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n          flushActQueue(queue);\n        }\n      }\n    } catch (error) {\n      popActScope(prevActScopeDepth);\n      throw error;\n    } finally {\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n    }\n\n    if (result !== null && typeof result === 'object' && typeof result.then === 'function') {\n      var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait\n      // for it to resolve before exiting the current scope.\n\n      var wasAwaited = false;\n      var thenable = {\n        then: function (resolve, reject) {\n          wasAwaited = true;\n          thenableResult.then(function (returnValue) {\n            popActScope(prevActScopeDepth);\n\n            if (actScopeDepth === 0) {\n              // We've exited the outermost act scope. Recursively flush the\n              // queue until there's no remaining work.\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }, function (error) {\n            // The callback threw an error.\n            popActScope(prevActScopeDepth);\n            reject(error);\n          });\n        }\n      };\n\n      {\n        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\n          // eslint-disable-next-line no-undef\n          Promise.resolve().then(function () {}).then(function () {\n            if (!wasAwaited) {\n              didWarnNoAwaitAct = true;\n\n              error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');\n            }\n          });\n        }\n      }\n\n      return thenable;\n    } else {\n      var returnValue = result; // The callback is not an async function. Exit the current scope\n      // immediately, without awaiting.\n\n      popActScope(prevActScopeDepth);\n\n      if (actScopeDepth === 0) {\n        // Exiting the outermost act scope. Flush the queue.\n        var _queue = ReactCurrentActQueue.current;\n\n        if (_queue !== null) {\n          flushActQueue(_queue);\n          ReactCurrentActQueue.current = null;\n        } // Return a thenable. If the user awaits it, we'll flush again in\n        // case additional work was scheduled by a microtask.\n\n\n        var _thenable = {\n          then: function (resolve, reject) {\n            // Confirm we haven't re-entered another `act` scope, in case\n            // the user does something weird like await the thenable\n            // multiple times.\n            if (ReactCurrentActQueue.current === null) {\n              // Recursively flush the queue until there's no remaining work.\n              ReactCurrentActQueue.current = [];\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }\n        };\n        return _thenable;\n      } else {\n        // Since we're inside a nested `act` scope, the returned thenable\n        // immediately resolves. The outer scope will flush the queue.\n        var _thenable2 = {\n          then: function (resolve, reject) {\n            resolve(returnValue);\n          }\n        };\n        return _thenable2;\n      }\n    }\n  }\n}\n\nfunction popActScope(prevActScopeDepth) {\n  {\n    if (prevActScopeDepth !== actScopeDepth - 1) {\n      error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');\n    }\n\n    actScopeDepth = prevActScopeDepth;\n  }\n}\n\nfunction recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n  {\n    var queue = ReactCurrentActQueue.current;\n\n    if (queue !== null) {\n      try {\n        flushActQueue(queue);\n        enqueueTask(function () {\n          if (queue.length === 0) {\n            // No additional work was scheduled. Finish.\n            ReactCurrentActQueue.current = null;\n            resolve(returnValue);\n          } else {\n            // Keep flushing work until there's none left.\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n          }\n        });\n      } catch (error) {\n        reject(error);\n      }\n    } else {\n      resolve(returnValue);\n    }\n  }\n}\n\nvar isFlushing = false;\n\nfunction flushActQueue(queue) {\n  {\n    if (!isFlushing) {\n      // Prevent re-entrance.\n      isFlushing = true;\n      var i = 0;\n\n      try {\n        for (; i < queue.length; i++) {\n          var callback = queue[i];\n\n          do {\n            callback = callback(true);\n          } while (callback !== null);\n        }\n\n        queue.length = 0;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        queue = queue.slice(i + 1);\n        throw error;\n      } finally {\n        isFlushing = false;\n      }\n    }\n  }\n}\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.startTransition = startTransition;\nexports.unstable_act = act;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useDeferredValue = useDeferredValue;\nexports.useEffect = useEffect;\nexports.useId = useId;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useInsertionEffect = useInsertionEffect;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.useSyncExternalStore = useSyncExternalStore;\nexports.useTransition = useTransition;\nexports.version = ReactVersion;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n"],"names":["process","env","NODE_ENV","__REACT_DEVTOOLS_GLOBAL_HOOK__","registerInternalModuleStart","Error","REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_OFFSCREEN_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","getIteratorFn","maybeIterable","maybeIterator","ReactCurrentDispatcher","current","ReactCurrentBatchConfig","transition","ReactCurrentActQueue","isBatchingLegacy","didScheduleLegacyUpdate","ReactCurrentOwner","ReactDebugCurrentFrame","currentExtraStackFrame","setExtraStackFrame","stack","getCurrentStack","getStackAddendum","impl","ReactSharedInternals","warn","format","_len","arguments","length","args","Array","_key","printWarning","error","_len2","_key2","level","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","didWarnStateUpdateForUnmountedComponent","warnNoop","publicInstance","callerName","_constructor","constructor","componentName","displayName","name","warningKey","ReactNoopUpdateQueue","isMounted","enqueueForceUpdate","callback","enqueueReplaceState","completeState","enqueueSetState","partialState","assign","Object","emptyObject","Component","props","context","updater","this","refs","freeze","isReactComponent","setState","forceUpdate","deprecatedAPIs","replaceState","defineDeprecationWarning","methodName","info","defineProperty","get","fnName","hasOwnProperty","ComponentDummy","PureComponent","pureComponentPrototype","isPureReactComponent","isArrayImpl","isArray","a","testStringCoercion","value","checkKeyStringCoercion","e","willCoercionThrow","toStringTag","typeName","getContextName","type","getComponentNameFromType","tag","$$typeof","_context","outerType","innerType","wrapperName","functionName","getWrappedName","render","outerName","lazyComponent","payload","_payload","init","_init","x","specialPropKeyWarningShown","specialPropRefWarningShown","didWarnAboutStringRefs","RESERVED_PROPS","key","ref","__self","__source","hasValidRef","config","getter","getOwnPropertyDescriptor","isReactWarning","undefined","hasValidKey","defineKeyPropWarningGetter","warnAboutAccessingKey","configurable","defineRefPropWarningGetter","warnAboutAccessingRef","warnIfStringRefCannotBeAutoConverted","stateNode","ReactElement","self","source","owner","element","_owner","_store","enumerable","writable","createElement","children","propName","childrenLength","childArray","i","defaultProps","cloneElement","_self","_source","isValidElement","object","REACT_MODULE_REFERENCE","didWarnAboutMaps","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","replace","getElementKey","index","escaperLookup","match","toString","mapIntoArray","array","escapedPrefix","nameSoFar","oldElement","newKey","child","invokeCallback","_child","mappedChild","childKey","escapedChildKey","c","push","subtreeCount","nextNamePrefix","iteratorFn","iterableChildren","entries","step","ii","next","done","childrenString","keys","join","mapChildren","func","result","count","lazyInitializer","_status","thenable","ctor","_result","then","moduleObject","resolved","rejected","pending","default","isValidElementType","getModuleId","resolveDispatcher","dispatcher","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledDepth","disabledLog","__reactDisabledLog","prefix","ReactCurrentDispatcher$1","describeBuiltInComponentFrame","ownerFn","trim","componentFrameCache","reentry","PossiblyWeakMap","WeakMap","Map","describeNativeComponentFrame","fn","construct","control","frame","previousDispatcher","previousPrepareStackTrace","prepareStackTrace","log","group","groupCollapsed","groupEnd","defineProperties","disableLogs","Fake","set","Reflect","sample","sampleLines","split","controlLines","s","_frame","includes","reenableLogs","syntheticFrame","describeUnknownElementTypeFrameInDEV","shouldConstruct","propTypesMisspellWarningShown","loggedTypeFailures","ReactDebugCurrentFrame$1","setCurrentlyValidatingElement","setCurrentlyValidatingElement$1","getDeclarationErrorAddendum","getSourceInfoErrorAddendumForProps","elementProps","fileName","lineNumber","ownerHasKeyUseWarning","validateExplicitKey","parentType","validated","currentComponentErrorInfo","parentName","getCurrentComponentErrorInfo","childOwner","validateChildKeys","node","validatePropTypes","propTypes","typeSpecs","values","location","has","bind","typeSpecName","error$1","err","ex","message","checkPropTypes","PropTypes","getDefaultProps","isReactClassApproved","validateFragmentProps","fragment","createElementWithValidation","validType","typeString","sourceInfo","didWarnAboutDeprecatedCreateFactory","didWarnAboutMessageChannel","enqueueTaskImpl","actScopeDepth","didWarnNoAwaitAct","popActScope","prevActScopeDepth","recursivelyFlushAsyncActWork","returnValue","resolve","reject","queue","flushActQueue","task","requireString","Math","random","slice","nodeRequire","module","setImmediate","_err","MessageChannel","channel","port1","onmessage","port2","postMessage","enqueueTask","isFlushing","createElement$1","cloneElement$1","newElement","createFactory","validatedFactory","Children","forEach","forEachFunc","forEachContext","n","toArray","only","exports","Fragment","Profiler","StrictMode","Suspense","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","createContext","defaultValue","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","hasWarnedAboutUsingNestedContextConsumers","hasWarnedAboutUsingConsumerProvider","hasWarnedAboutDisplayNameOnConsumer","_Provider","_currentRenderer","_currentRenderer2","createRef","refObject","seal","forwardRef","ownName","elementType","lazy","lazyType","newDefaultProps","newPropTypes","memo","compare","startTransition","scope","options","prevTransition","currentTransition","_updatedFibers","Set","size","clear","unstable_act","prevIsBatchingLegacy","thenableResult","wasAwaited","Promise","_queue","useCallback","deps","useContext","Context","realContext","useDebugValue","formatterFn","useDeferredValue","useEffect","create","useId","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","reducer","initialArg","useRef","initialValue","useState","initialState","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","useTransition","version","registerInternalModuleStop"],"mappings":"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"}