{"version":3,"file":"handleScroll.js","sources":["../../../../../../node_modules/react-remove-scroll/dist/es2015/handleScroll.js"],"sourcesContent":["var alwaysContainsScroll = function (node) {\n    // textarea will always _contain_ scroll inside self. It only can be hidden\n    return node.tagName === 'TEXTAREA';\n};\nvar elementCanBeScrolled = function (node, overflow) {\n    var styles = window.getComputedStyle(node);\n    return (\n    // not-not-scrollable\n    styles[overflow] !== 'hidden' &&\n        // contains scroll inside self\n        !(styles.overflowY === styles.overflowX && !alwaysContainsScroll(node) && styles[overflow] === 'visible'));\n};\nvar elementCouldBeVScrolled = function (node) { return elementCanBeScrolled(node, 'overflowY'); };\nvar elementCouldBeHScrolled = function (node) { return elementCanBeScrolled(node, 'overflowX'); };\nexport var locationCouldBeScrolled = function (axis, node) {\n    var current = node;\n    do {\n        // Skip over shadow root\n        if (typeof ShadowRoot !== 'undefined' && current instanceof ShadowRoot) {\n            current = current.host;\n        }\n        var isScrollable = elementCouldBeScrolled(axis, current);\n        if (isScrollable) {\n            var _a = getScrollVariables(axis, current), s = _a[1], d = _a[2];\n            if (s > d) {\n                return true;\n            }\n        }\n        current = current.parentNode;\n    } while (current && current !== document.body);\n    return false;\n};\nvar getVScrollVariables = function (_a) {\n    var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;\n    return [\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n    ];\n};\nvar getHScrollVariables = function (_a) {\n    var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;\n    return [\n        scrollLeft,\n        scrollWidth,\n        clientWidth,\n    ];\n};\nvar elementCouldBeScrolled = function (axis, node) {\n    return axis === 'v' ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);\n};\nvar getScrollVariables = function (axis, node) {\n    return axis === 'v' ? getVScrollVariables(node) : getHScrollVariables(node);\n};\nvar getDirectionFactor = function (axis, direction) {\n    /**\n     * If the element's direction is rtl (right-to-left), then scrollLeft is 0 when the scrollbar is at its rightmost position,\n     * and then increasingly negative as you scroll towards the end of the content.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n     */\n    return axis === 'h' && direction === 'rtl' ? -1 : 1;\n};\nexport var handleScroll = function (axis, endTarget, event, sourceDelta, noOverscroll) {\n    var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);\n    var delta = directionFactor * sourceDelta;\n    // find scrollable target\n    var target = event.target;\n    var targetInLock = endTarget.contains(target);\n    var shouldCancelScroll = false;\n    var isDeltaPositive = delta > 0;\n    var availableScroll = 0;\n    var availableScrollTop = 0;\n    do {\n        var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];\n        var elementScroll = scroll_1 - capacity - directionFactor * position;\n        if (position || elementScroll) {\n            if (elementCouldBeScrolled(axis, target)) {\n                availableScroll += elementScroll;\n                availableScrollTop += position;\n            }\n        }\n        target = target.parentNode;\n    } while (\n    // portaled content\n    (!targetInLock && target !== document.body) ||\n        // self content\n        (targetInLock && (endTarget.contains(target) || endTarget === target)));\n    if (isDeltaPositive && ((noOverscroll && availableScroll === 0) || (!noOverscroll && delta > availableScroll))) {\n        shouldCancelScroll = true;\n    }\n    else if (!isDeltaPositive &&\n        ((noOverscroll && availableScrollTop === 0) || (!noOverscroll && -delta > availableScrollTop))) {\n        shouldCancelScroll = true;\n    }\n    return shouldCancelScroll;\n};\n"],"names":["elementCanBeScrolled","node","overflow","styles","window","getComputedStyle","overflowY","overflowX","tagName","alwaysContainsScroll","locationCouldBeScrolled","axis","current","ShadowRoot","host","elementCouldBeScrolled","_a","getScrollVariables","parentNode","document","body","elementCouldBeVScrolled","elementCouldBeHScrolled","scrollTop","scrollHeight","clientHeight","scrollLeft","scrollWidth","clientWidth","getHScrollVariables","handleScroll","endTarget","event","sourceDelta","noOverscroll","directionFactor","direction","getDirectionFactor","delta","target","targetInLock","contains","shouldCancelScroll","isDeltaPositive","availableScroll","availableScrollTop","position","elementScroll"],"mappings":"AAAA,IAIIA,EAAuB,SAAUC,EAAMC,GACvC,IAAIC,EAASC,OAAOC,iBAAiBJ,GACrC,MAEqB,WAArBE,EAAOD,MAEDC,EAAOG,YAAcH,EAAOI,YAVX,SAAUN,GAEjC,MAAwB,aAAjBA,EAAKO,OAChB,CAOoDC,CAAqBR,IAA8B,YAArBE,EAAOD,GACzF,EAGWQ,EAA0B,SAAUC,EAAMV,GACjD,IAAIW,EAAUX,EACd,EAAG,CAMC,GAJ0B,oBAAfY,YAA8BD,aAAmBC,aACxDD,EAAUA,EAAQE,MAEHC,EAAuBJ,EAAMC,GAC9B,CACd,IAAII,EAAKC,EAAmBN,EAAMC,GAClC,GADgDI,EAAG,GAAQA,EAAG,GAE1D,OAAO,CAEd,CACDJ,EAAUA,EAAQM,UACrB,OAAQN,GAAWA,IAAYO,SAASC,MACzC,OAAO,CACX,EAiBIL,EAAyB,SAAUJ,EAAMV,GACzC,MAAgB,MAATU,EArCmB,SAAUV,GAAQ,OAAOD,EAAqBC,EAAM,aAqCxDoB,CAAwBpB,GApCpB,SAAUA,GAAQ,OAAOD,EAAqBC,EAAM,aAoCxBqB,CAAwBrB,EAClF,EACIgB,EAAqB,SAAUN,EAAMV,GACrC,MAAgB,MAATU,EAlBA,EAFyBK,EAoBUf,GAnBvBsB,UAA0BP,EAAGQ,aAA6BR,EAAGS,cAO1D,SAAUT,GAEhC,MAAO,CADUA,EAAGU,WAA0BV,EAAGW,YAA2BX,EAAGY,YAMnF,CAKsDC,CAAoB5B,GApBhD,IAAUe,CAqBpC,EASWc,EAAe,SAAUnB,EAAMoB,EAAWC,EAAOC,EAAaC,GACrE,IAAIC,EATiB,SAAUxB,EAAMyB,GAMrC,MAAgB,MAATzB,GAA8B,QAAdyB,GAAuB,EAAI,CACtD,CAE0BC,CAAmB1B,EAAMP,OAAOC,iBAAiB0B,GAAWK,WAC9EE,EAAQH,EAAkBF,EAE1BM,EAASP,EAAMO,OACfC,EAAeT,EAAUU,SAASF,GAClCG,GAAqB,EACrBC,EAAkBL,EAAQ,EAC1BM,EAAkB,EAClBC,EAAqB,EACzB,EAAG,CACC,IAAI7B,EAAKC,EAAmBN,EAAM4B,GAASO,EAAW9B,EAAG,GACrD+B,EADoE/B,EAAG,GAAeA,EAAG,GACnDmB,EAAkBW,GACxDA,GAAYC,IACRhC,EAAuBJ,EAAM4B,KAC7BK,GAAmBG,EACnBF,GAAsBC,GAG9BP,EAASA,EAAOrB,UACnB,QAECsB,GAAgBD,IAAWpB,SAASC,MAEjCoB,IAAiBT,EAAUU,SAASF,IAAWR,IAAcQ,IAQlE,OAPII,IAAqBT,GAAoC,IAApBU,IAA4BV,GAAgBI,EAAQM,KAGnFD,IACJT,GAAuC,IAAvBW,IAA+BX,IAAiBI,EAAQO,MAH1EH,GAAqB,GAMlBA,CACX"}