{"version":3,"file":"random.js","sources":["../../../../../../../node_modules/@ctrl/tinycolor/dist/module/random.js"],"sourcesContent":["// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\nimport { TinyColor } from './index';\nexport function random(options) {\n    if (options === void 0) { options = {}; }\n    // Check if we need to generate multiple colors\n    if (options.count !== undefined &&\n        options.count !== null) {\n        var totalColors = options.count;\n        var colors = [];\n        options.count = undefined;\n        while (totalColors > colors.length) {\n            // Since we're generating multiple colors,\n            // incremement the seed. Otherwise we'd just\n            // generate the same color each time...\n            options.count = null;\n            if (options.seed) {\n                options.seed += 1;\n            }\n            colors.push(random(options));\n        }\n        options.count = totalColors;\n        return colors;\n    }\n    // First we pick a hue (H)\n    var h = pickHue(options.hue, options.seed);\n    // Then use H to determine saturation (S)\n    var s = pickSaturation(h, options);\n    // Then use S and H to determine brightness (B).\n    var v = pickBrightness(h, s, options);\n    var res = { h: h, s: s, v: v };\n    if (options.alpha !== undefined) {\n        res.a = options.alpha;\n    }\n    // Then we return the HSB color in the desired format\n    return new TinyColor(res);\n}\nfunction pickHue(hue, seed) {\n    var hueRange = getHueRange(hue);\n    var res = randomWithin(hueRange, seed);\n    // Instead of storing red as two seperate ranges,\n    // we group them, using negative numbers\n    if (res < 0) {\n        res = 360 + res;\n    }\n    return res;\n}\nfunction pickSaturation(hue, options) {\n    if (options.hue === 'monochrome') {\n        return 0;\n    }\n    if (options.luminosity === 'random') {\n        return randomWithin([0, 100], options.seed);\n    }\n    var saturationRange = getColorInfo(hue).saturationRange;\n    var sMin = saturationRange[0];\n    var sMax = saturationRange[1];\n    switch (options.luminosity) {\n        case 'bright':\n            sMin = 55;\n            break;\n        case 'dark':\n            sMin = sMax - 10;\n            break;\n        case 'light':\n            sMax = 55;\n            break;\n        default:\n            break;\n    }\n    return randomWithin([sMin, sMax], options.seed);\n}\nfunction pickBrightness(H, S, options) {\n    var bMin = getMinimumBrightness(H, S);\n    var bMax = 100;\n    switch (options.luminosity) {\n        case 'dark':\n            bMax = bMin + 20;\n            break;\n        case 'light':\n            bMin = (bMax + bMin) / 2;\n            break;\n        case 'random':\n            bMin = 0;\n            bMax = 100;\n            break;\n        default:\n            break;\n    }\n    return randomWithin([bMin, bMax], options.seed);\n}\nfunction getMinimumBrightness(H, S) {\n    var lowerBounds = getColorInfo(H).lowerBounds;\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n        var s1 = lowerBounds[i][0];\n        var v1 = lowerBounds[i][1];\n        var s2 = lowerBounds[i + 1][0];\n        var v2 = lowerBounds[i + 1][1];\n        if (S >= s1 && S <= s2) {\n            var m = (v2 - v1) / (s2 - s1);\n            var b = v1 - m * s1;\n            return m * S + b;\n        }\n    }\n    return 0;\n}\nfunction getHueRange(colorInput) {\n    var num = parseInt(colorInput, 10);\n    if (!Number.isNaN(num) && num < 360 && num > 0) {\n        return [num, num];\n    }\n    if (typeof colorInput === 'string') {\n        var namedColor = bounds.find(function (n) { return n.name === colorInput; });\n        if (namedColor) {\n            var color = defineColor(namedColor);\n            if (color.hueRange) {\n                return color.hueRange;\n            }\n        }\n        var parsed = new TinyColor(colorInput);\n        if (parsed.isValid) {\n            var hue = parsed.toHsv().h;\n            return [hue, hue];\n        }\n    }\n    return [0, 360];\n}\nfunction getColorInfo(hue) {\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n        hue -= 360;\n    }\n    for (var _i = 0, bounds_1 = bounds; _i < bounds_1.length; _i++) {\n        var bound = bounds_1[_i];\n        var color = defineColor(bound);\n        if (color.hueRange && hue >= color.hueRange[0] && hue <= color.hueRange[1]) {\n            return color;\n        }\n    }\n    throw Error('Color not found');\n}\nfunction randomWithin(range, seed) {\n    if (seed === undefined) {\n        return Math.floor(range[0] + Math.random() * (range[1] + 1 - range[0]));\n    }\n    // Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n    var max = range[1] || 1;\n    var min = range[0] || 0;\n    seed = (seed * 9301 + 49297) % 233280;\n    var rnd = seed / 233280.0;\n    return Math.floor(min + rnd * (max - min));\n}\nfunction defineColor(bound) {\n    var sMin = bound.lowerBounds[0][0];\n    var sMax = bound.lowerBounds[bound.lowerBounds.length - 1][0];\n    var bMin = bound.lowerBounds[bound.lowerBounds.length - 1][1];\n    var bMax = bound.lowerBounds[0][1];\n    return {\n        name: bound.name,\n        hueRange: bound.hueRange,\n        lowerBounds: bound.lowerBounds,\n        saturationRange: [sMin, sMax],\n        brightnessRange: [bMin, bMax],\n    };\n}\n/**\n * @hidden\n */\nexport var bounds = [\n    {\n        name: 'monochrome',\n        hueRange: null,\n        lowerBounds: [\n            [0, 0],\n            [100, 0],\n        ],\n    },\n    {\n        name: 'red',\n        hueRange: [-26, 18],\n        lowerBounds: [\n            [20, 100],\n            [30, 92],\n            [40, 89],\n            [50, 85],\n            [60, 78],\n            [70, 70],\n            [80, 60],\n            [90, 55],\n            [100, 50],\n        ],\n    },\n    {\n        name: 'orange',\n        hueRange: [19, 46],\n        lowerBounds: [\n            [20, 100],\n            [30, 93],\n            [40, 88],\n            [50, 86],\n            [60, 85],\n            [70, 70],\n            [100, 70],\n        ],\n    },\n    {\n        name: 'yellow',\n        hueRange: [47, 62],\n        lowerBounds: [\n            [25, 100],\n            [40, 94],\n            [50, 89],\n            [60, 86],\n            [70, 84],\n            [80, 82],\n            [90, 80],\n            [100, 75],\n        ],\n    },\n    {\n        name: 'green',\n        hueRange: [63, 178],\n        lowerBounds: [\n            [30, 100],\n            [40, 90],\n            [50, 85],\n            [60, 81],\n            [70, 74],\n            [80, 64],\n            [90, 50],\n            [100, 40],\n        ],\n    },\n    {\n        name: 'blue',\n        hueRange: [179, 257],\n        lowerBounds: [\n            [20, 100],\n            [30, 86],\n            [40, 80],\n            [50, 74],\n            [60, 60],\n            [70, 52],\n            [80, 44],\n            [90, 39],\n            [100, 35],\n        ],\n    },\n    {\n        name: 'purple',\n        hueRange: [258, 282],\n        lowerBounds: [\n            [20, 100],\n            [30, 87],\n            [40, 79],\n            [50, 70],\n            [60, 65],\n            [70, 59],\n            [80, 52],\n            [90, 45],\n            [100, 42],\n        ],\n    },\n    {\n        name: 'pink',\n        hueRange: [283, 334],\n        lowerBounds: [\n            [20, 100],\n            [30, 90],\n            [40, 86],\n            [60, 84],\n            [80, 80],\n            [90, 75],\n            [100, 73],\n        ],\n    },\n];\n"],"names":["getColorInfo","hue","_i","bounds_1","bounds","length","color","defineColor","hueRange","Error","randomWithin","range","seed","undefined","Math","floor","random","max","min","rnd","bound","sMin","lowerBounds","sMax","bMin","bMax","name","saturationRange","brightnessRange","options","count","totalColors","colors","push","h","res","colorInput","num","parseInt","Number","isNaN","namedColor","find","n","parsed","TinyColor","isValid","toHsv","getHueRange","pickHue","s","luminosity","pickSaturation","v","H","S","i","s1","v1","s2","v2","m","getMinimumBrightness","pickBrightness","alpha","a"],"mappings":"gGA+HA,SAASA,EAAaC,GAEdA,GAAO,KAAOA,GAAO,MACrBA,GAAO,KAEX,IAAK,IAAIC,EAAK,EAAGC,EAAWC,EAAQF,EAAKC,EAASE,OAAQH,IAAM,CAC5D,IACII,EAAQC,EADAJ,EAASD,IAErB,GAAII,EAAME,UAAYP,GAAOK,EAAME,SAAS,IAAMP,GAAOK,EAAME,SAAS,GACpE,OAAOF,CAEd,CACD,MAAMG,MAAM,kBAChB,CACA,SAASC,EAAaC,EAAOC,GACzB,QAAaC,IAATD,EACA,OAAOE,KAAKC,MAAMJ,EAAM,GAAKG,KAAKE,UAAYL,EAAM,GAAK,EAAIA,EAAM,KAGvE,IAAIM,EAAMN,EAAM,IAAM,EAClBO,EAAMP,EAAM,IAAM,EAElBQ,GADJP,GAAe,KAAPA,EAAc,OAAS,QACd,OACjB,OAAOE,KAAKC,MAAMG,EAAMC,GAAOF,EAAMC,GACzC,CACA,SAASX,EAAYa,GACjB,IAAIC,EAAOD,EAAME,YAAY,GAAG,GAC5BC,EAAOH,EAAME,YAAYF,EAAME,YAAYjB,OAAS,GAAG,GACvDmB,EAAOJ,EAAME,YAAYF,EAAME,YAAYjB,OAAS,GAAG,GACvDoB,EAAOL,EAAME,YAAY,GAAG,GAChC,MAAO,CACHI,KAAMN,EAAMM,KACZlB,SAAUY,EAAMZ,SAChBc,YAAaF,EAAME,YACnBK,gBAAiB,CAACN,EAAME,GACxBK,gBAAiB,CAACJ,EAAMC,GAEhC,CAIU,IAACrB,EAAS,CAChB,CACIsB,KAAM,aACNlB,SAAU,KACVc,YAAa,CACT,CAAC,EAAG,GACJ,CAAC,IAAK,KAGd,CACII,KAAM,MACNlB,SAAU,EAAE,GAAI,IAChBc,YAAa,CACT,CAAC,GAAI,KACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,IAAK,MAGd,CACII,KAAM,SACNlB,SAAU,CAAC,GAAI,IACfc,YAAa,CACT,CAAC,GAAI,KACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,IAAK,MAGd,CACII,KAAM,SACNlB,SAAU,CAAC,GAAI,IACfc,YAAa,CACT,CAAC,GAAI,KACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,IAAK,MAGd,CACII,KAAM,QACNlB,SAAU,CAAC,GAAI,KACfc,YAAa,CACT,CAAC,GAAI,KACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,IAAK,MAGd,CACII,KAAM,OACNlB,SAAU,CAAC,IAAK,KAChBc,YAAa,CACT,CAAC,GAAI,KACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,IAAK,MAGd,CACII,KAAM,SACNlB,SAAU,CAAC,IAAK,KAChBc,YAAa,CACT,CAAC,GAAI,KACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,IAAK,MAGd,CACII,KAAM,OACNlB,SAAU,CAAC,IAAK,KAChBc,YAAa,CACT,CAAC,GAAI,KACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,IAAK,uCA9QX,SAASN,EAAOa,GAGnB,QAFgB,IAAZA,IAAsBA,EAAU,CAAE,QAEhBhB,IAAlBgB,EAAQC,OACU,OAAlBD,EAAQC,MAAgB,CACxB,IAAIC,EAAcF,EAAQC,MACtBE,EAAS,GAEb,IADAH,EAAQC,WAAQjB,EACTkB,EAAcC,EAAO3B,QAIxBwB,EAAQC,MAAQ,KACZD,EAAQjB,OACRiB,EAAQjB,MAAQ,GAEpBoB,EAAOC,KAAKjB,EAAOa,IAGvB,OADAA,EAAQC,MAAQC,EACTC,CACV,CAED,IAAIE,EAYR,SAAiBjC,EAAKW,GAClB,IACIuB,EAAMzB,EAmEd,SAAqB0B,GACjB,IAAIC,EAAMC,SAASF,EAAY,IAC/B,IAAKG,OAAOC,MAAMH,IAAQA,EAAM,KAAOA,EAAM,EACzC,MAAO,CAACA,EAAKA,GAEjB,GAA0B,iBAAfD,EAAyB,CAChC,IAAIK,EAAarC,EAAOsC,MAAK,SAAUC,GAAK,OAAOA,EAAEjB,OAASU,CAAW,IACzE,GAAIK,EAAY,CACZ,IAAInC,EAAQC,EAAYkC,GACxB,GAAInC,EAAME,SACN,OAAOF,EAAME,QAEpB,CACD,IAAIoC,EAAS,IAAIC,YAAUT,GAC3B,GAAIQ,EAAOE,QAAS,CAChB,IAAI7C,EAAM2C,EAAOG,QAAQb,EACzB,MAAO,CAACjC,EAAKA,EAChB,CACJ,CACD,MAAO,CAAC,EAAG,IACf,CAxFmB+C,CAAY/C,GACMW,GAG7BuB,EAAM,IACNA,EAAM,IAAMA,GAEhB,OAAOA,CACX,CArBYc,CAAQpB,EAAQ5B,IAAK4B,EAAQjB,MAEjCsC,EAoBR,SAAwBjD,EAAK4B,GACzB,GAAoB,eAAhBA,EAAQ5B,IACR,OAAO,EAEX,GAA2B,WAAvB4B,EAAQsB,WACR,OAAOzC,EAAa,CAAC,EAAG,KAAMmB,EAAQjB,MAE1C,IAAIe,EAAkB3B,EAAaC,GAAK0B,gBACpCN,EAAOM,EAAgB,GACvBJ,EAAOI,EAAgB,GAC3B,OAAQE,EAAQsB,YACZ,IAAK,SACD9B,EAAO,GACP,MACJ,IAAK,OACDA,EAAOE,EAAO,GACd,MACJ,IAAK,QACDA,EAAO,GAKf,OAAOb,EAAa,CAACW,EAAME,GAAOM,EAAQjB,KAC9C,CA5CYwC,CAAelB,EAAGL,GAEtBwB,EA2CR,SAAwBC,EAAGC,EAAG1B,GAC1B,IAAIL,EAkBR,SAA8B8B,EAAGC,GAE7B,IADA,IAAIjC,EAActB,EAAasD,GAAGhC,YACzBkC,EAAI,EAAGA,EAAIlC,EAAYjB,OAAS,EAAGmD,IAAK,CAC7C,IAAIC,EAAKnC,EAAYkC,GAAG,GACpBE,EAAKpC,EAAYkC,GAAG,GACpBG,EAAKrC,EAAYkC,EAAI,GAAG,GACxBI,EAAKtC,EAAYkC,EAAI,GAAG,GAC5B,GAAID,GAAKE,GAAMF,GAAKI,EAAI,CACpB,IAAIE,GAAKD,EAAKF,IAAOC,EAAKF,GAE1B,OAAOI,EAAIN,GADHG,EAAKG,EAAIJ,EAEpB,CACJ,CACD,OAAO,CACX,CAhCeK,CAAqBR,EAAGC,GAC/B9B,EAAO,IACX,OAAQI,EAAQsB,YACZ,IAAK,OACD1B,EAAOD,EAAO,GACd,MACJ,IAAK,QACDA,GAAQC,EAAOD,GAAQ,EACvB,MACJ,IAAK,SACDA,EAAO,EACPC,EAAO,IAKf,OAAOf,EAAa,CAACc,EAAMC,GAAOI,EAAQjB,KAC9C,CA7DYmD,CAAe7B,EAAGgB,EAAGrB,GACzBM,EAAM,CAAED,EAAGA,EAAGgB,EAAGA,EAAGG,EAAGA,GAK3B,YAJsBxC,IAAlBgB,EAAQmC,QACR7B,EAAI8B,EAAIpC,EAAQmC,OAGb,IAAInB,EAAAA,UAAUV,EACzB"}