{"version":3,"file":"getOffsetParent.js","sources":["../../../../../../../node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js"],"sourcesContent":["import getWindow from \"./getWindow.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isHTMLElement, isShadowRoot } from \"./instanceOf.js\";\nimport isTableElement from \"./isTableElement.js\";\nimport getParentNode from \"./getParentNode.js\";\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;\n  var isIE = navigator.userAgent.indexOf('Trident') !== -1;\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nexport default function getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}"],"names":["getTrueOffsetParent","element","isHTMLElement","getComputedStyle","position","offsetParent","window","getWindow","isTableElement","getNodeName","isFirefox","navigator","userAgent","toLowerCase","indexOf","currentNode","getParentNode","isShadowRoot","host","css","transform","perspective","contain","willChange","filter","parentNode","getContainingBlock"],"mappings":"4MAOA,SAASA,EAAoBC,GAC3B,OAAKC,EAAaA,cAACD,IACoB,UAAvCE,EAAiBF,GAASG,SAInBH,EAAQI,aAHN,IAIX,gBAwCe,SAAyBJ,GAItC,IAHA,IAAIK,EAASC,EAAUN,GACnBI,EAAeL,EAAoBC,GAEhCI,GAAgBG,EAAeH,IAA6D,WAA5CF,EAAiBE,GAAcD,UACpFC,EAAeL,EAAoBK,GAGrC,OAAIA,IAA+C,SAA9BI,EAAYJ,IAA0D,SAA9BI,EAAYJ,IAAwE,WAA5CF,EAAiBE,GAAcD,UAC3HE,EAGFD,GAhDT,SAA4BJ,GAC1B,IAAIS,GAAsE,IAA1DC,UAAUC,UAAUC,cAAcC,QAAQ,WAG1D,IAFuD,IAA5CH,UAAUC,UAAUE,QAAQ,YAE3BZ,gBAAcD,IAII,UAFXE,EAAiBF,GAEnBG,SACb,OAAO,KAIX,IAAIW,EAAcC,EAAcf,GAMhC,IAJIgB,EAAAA,aAAaF,KACfA,EAAcA,EAAYG,MAGrBhB,gBAAca,IAAgB,CAAC,OAAQ,QAAQD,QAAQL,EAAYM,IAAgB,GAAG,CAC3F,IAAII,EAAMhB,EAAiBY,GAI3B,GAAsB,SAAlBI,EAAIC,WAA4C,SAApBD,EAAIE,aAA0C,UAAhBF,EAAIG,UAAiF,IAA1D,CAAC,YAAa,eAAeR,QAAQK,EAAII,aAAsBb,GAAgC,WAAnBS,EAAII,YAA2Bb,GAAaS,EAAIK,QAAyB,SAAfL,EAAIK,OACjO,OAAOT,EAEPA,EAAcA,EAAYU,UAE7B,CAED,OAAO,IACT,CAgByBC,CAAmBzB,IAAYK,CACxD"}