{"version":3,"file":"getClippingRect.js","sources":["../../../../../../../node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js"],"sourcesContent":["import { viewport } from \"../enums.js\";\nimport getViewportRect from \"./getViewportRect.js\";\nimport getDocumentRect from \"./getDocumentRect.js\";\nimport listScrollParents from \"./listScrollParents.js\";\nimport getOffsetParent from \"./getOffsetParent.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport contains from \"./contains.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport rectToClientRect from \"../utils/rectToClientRect.js\";\nimport { max, min } from \"../utils/math.js\";\n\nfunction getInnerBoundingClientRect(element) {\n  var rect = getBoundingClientRect(element);\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nexport default function getClippingRect(element, boundary, rootBoundary) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}"],"names":["getClientRectFromMixedType","element","clippingParent","viewport","rectToClientRect","getViewportRect","isElement","rect","getBoundingClientRect","top","clientTop","left","clientLeft","bottom","clientHeight","right","clientWidth","width","height","x","y","getInnerBoundingClientRect","getDocumentRect","getDocumentElement","boundary","rootBoundary","mainClippingParents","clippingParents","listScrollParents","getParentNode","clipperElement","indexOf","getComputedStyle","position","isHTMLElement","getOffsetParent","filter","contains","getNodeName","getClippingParents","concat","firstClippingParent","clippingRect","reduce","accRect","max","min"],"mappings":"keA4BA,SAASA,EAA2BC,EAASC,GAC3C,OAAOA,IAAmBC,EAAAA,SAAWC,EAAiBC,EAAgBJ,IAAYK,YAAUJ,GAd9F,SAAoCD,GAClC,IAAIM,EAAOC,EAAsBP,GASjC,OARAM,EAAKE,IAAMF,EAAKE,IAAMR,EAAQS,UAC9BH,EAAKI,KAAOJ,EAAKI,KAAOV,EAAQW,WAChCL,EAAKM,OAASN,EAAKE,IAAMR,EAAQa,aACjCP,EAAKQ,MAAQR,EAAKI,KAAOV,EAAQe,YACjCT,EAAKU,MAAQhB,EAAQe,YACrBT,EAAKW,OAASjB,EAAQa,aACtBP,EAAKY,EAAIZ,EAAKI,KACdJ,EAAKa,EAAIb,EAAKE,IACPF,CACT,CAGgHc,CAA2BnB,GAAkBE,EAAiBkB,EAAgBC,EAAmBtB,IACjN,gBAsBe,SAAyBA,EAASuB,EAAUC,GACzD,IAAIC,EAAmC,oBAAbF,EAlB5B,SAA4BvB,GAC1B,IAAI0B,EAAkBC,EAAkBC,EAAc5B,IAElD6B,EADoB,CAAC,WAAY,SAASC,QAAQC,EAAiB/B,GAASgC,WAAa,GACnDC,gBAAcjC,GAAWkC,EAAgBlC,GAAWA,EAE9F,OAAKK,EAAAA,UAAUwB,GAKRH,EAAgBS,QAAO,SAAUlC,GACtC,OAAOI,EAASA,UAACJ,IAAmBmC,EAASnC,EAAgB4B,IAAmD,SAAhCQ,EAAYpC,EAChG,IANW,EAOX,CAK6DqC,CAAmBtC,GAAW,GAAGuC,OAAOhB,GAC/FG,EAAkB,GAAGa,OAAOd,EAAqB,CAACD,IAClDgB,EAAsBd,EAAgB,GACtCe,EAAef,EAAgBgB,QAAO,SAAUC,EAAS1C,GAC3D,IAAIK,EAAOP,EAA2BC,EAASC,GAK/C,OAJA0C,EAAQnC,IAAMoC,MAAItC,EAAKE,IAAKmC,EAAQnC,KACpCmC,EAAQ7B,MAAQ+B,MAAIvC,EAAKQ,MAAO6B,EAAQ7B,OACxC6B,EAAQ/B,OAASiC,MAAIvC,EAAKM,OAAQ+B,EAAQ/B,QAC1C+B,EAAQjC,KAAOkC,MAAItC,EAAKI,KAAMiC,EAAQjC,MAC/BiC,CACR,GAAE5C,EAA2BC,EAASwC,IAKvC,OAJAC,EAAazB,MAAQyB,EAAa3B,MAAQ2B,EAAa/B,KACvD+B,EAAaxB,OAASwB,EAAa7B,OAAS6B,EAAajC,IACzDiC,EAAavB,EAAIuB,EAAa/B,KAC9B+B,EAAatB,EAAIsB,EAAajC,IACvBiC,CACT"}