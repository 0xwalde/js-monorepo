{"version":3,"file":"computeOffsets.js","sources":["../../../../../../../node_modules/@popperjs/core/lib/utils/computeOffsets.js"],"sourcesContent":["import getBasePlacement from \"./getBasePlacement.js\";\nimport getVariation from \"./getVariation.js\";\nimport getMainAxisFromPlacement from \"./getMainAxisFromPlacement.js\";\nimport { top, right, bottom, left, start, end } from \"../enums.js\";\nexport default function computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}"],"names":["_ref","offsets","reference","element","placement","basePlacement","getBasePlacement","variation","getVariation","commonX","x","width","commonY","y","height","top","bottom","right","left","mainAxis","getMainAxisFromPlacement","len","start","end"],"mappings":"sKAIe,SAAwBA,GACrC,IAOIC,EAPAC,EAAYF,EAAKE,UACjBC,EAAUH,EAAKG,QACfC,EAAYJ,EAAKI,UACjBC,EAAgBD,EAAYE,EAAiBF,GAAa,KAC1DG,EAAYH,EAAYI,EAAaJ,GAAa,KAClDK,EAAUP,EAAUQ,EAAIR,EAAUS,MAAQ,EAAIR,EAAQQ,MAAQ,EAC9DC,EAAUV,EAAUW,EAAIX,EAAUY,OAAS,EAAIX,EAAQW,OAAS,EAGpE,OAAQT,GACN,KAAKU,EAAGA,IACNd,EAAU,CACRS,EAAGD,EACHI,EAAGX,EAAUW,EAAIV,EAAQW,QAE3B,MAEF,KAAKE,EAAMA,OACTf,EAAU,CACRS,EAAGD,EACHI,EAAGX,EAAUW,EAAIX,EAAUY,QAE7B,MAEF,KAAKG,EAAKA,MACRhB,EAAU,CACRS,EAAGR,EAAUQ,EAAIR,EAAUS,MAC3BE,EAAGD,GAEL,MAEF,KAAKM,EAAIA,KACPjB,EAAU,CACRS,EAAGR,EAAUQ,EAAIP,EAAQQ,MACzBE,EAAGD,GAEL,MAEF,QACEX,EAAU,CACRS,EAAGR,EAAUQ,EACbG,EAAGX,EAAUW,GAInB,IAAIM,EAAWd,EAAgBe,EAAyBf,GAAiB,KAEzE,GAAgB,MAAZc,EAAkB,CACpB,IAAIE,EAAmB,MAAbF,EAAmB,SAAW,QAExC,OAAQZ,GACN,KAAKe,EAAKA,MACRrB,EAAQkB,GAAYlB,EAAQkB,IAAajB,EAAUmB,GAAO,EAAIlB,EAAQkB,GAAO,GAC7E,MAEF,KAAKE,EAAGA,IACNtB,EAAQkB,GAAYlB,EAAQkB,IAAajB,EAAUmB,GAAO,EAAIlB,EAAQkB,GAAO,GAKlF,CAED,OAAOpB,CACT"}