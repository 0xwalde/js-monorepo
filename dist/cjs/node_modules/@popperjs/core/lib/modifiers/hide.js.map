{"version":3,"file":"hide.js","sources":["../../../../../../../node_modules/@popperjs/core/lib/modifiers/hide.js"],"sourcesContent":["import { top, bottom, left, right } from \"../enums.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n};"],"names":["getSideOffsets","overflow","rect","preventedOffsets","x","y","top","height","right","width","bottom","left","isAnySideFullyClipped","some","side","hide$1","name","enabled","phase","requiresIfExists","fn","_ref","state","referenceRect","rects","reference","popperRect","popper","modifiersData","preventOverflow","referenceOverflow","detectOverflow","elementContext","popperAltOverflow","altBoundary","referenceClippingOffsets","popperEscapeOffsets","isReferenceHidden","hasPopperEscaped","attributes","Object","assign"],"mappings":"kFAGA,SAASA,EAAeC,EAAUC,EAAMC,GAQtC,YAPyB,IAArBA,IACFA,EAAmB,CACjBC,EAAG,EACHC,EAAG,IAIA,CACLC,IAAKL,EAASK,IAAMJ,EAAKK,OAASJ,EAAiBE,EACnDG,MAAOP,EAASO,MAAQN,EAAKO,MAAQN,EAAiBC,EACtDM,OAAQT,EAASS,OAASR,EAAKK,OAASJ,EAAiBE,EACzDM,KAAMV,EAASU,KAAOT,EAAKO,MAAQN,EAAiBC,EAExD,CAEA,SAASQ,EAAsBX,GAC7B,MAAO,CAACK,EAAGA,IAAEE,QAAOE,EAAAA,OAAQC,EAAAA,MAAME,MAAK,SAAUC,GAC/C,OAAOb,EAASa,IAAS,CAC7B,GACA,CA+BA,IAAeC,EAAA,CACbC,KAAM,OACNC,SAAS,EACTC,MAAO,OACPC,iBAAkB,CAAC,mBACnBC,GAlCF,SAAcC,GACZ,IAAIC,EAAQD,EAAKC,MACbN,EAAOK,EAAKL,KACZO,EAAgBD,EAAME,MAAMC,UAC5BC,EAAaJ,EAAME,MAAMG,OACzBxB,EAAmBmB,EAAMM,cAAcC,gBACvCC,EAAoBC,EAAeT,EAAO,CAC5CU,eAAgB,cAEdC,EAAoBF,EAAeT,EAAO,CAC5CY,aAAa,IAEXC,EAA2BnC,EAAe8B,EAAmBP,GAC7Da,EAAsBpC,EAAeiC,EAAmBP,EAAYvB,GACpEkC,EAAoBzB,EAAsBuB,GAC1CG,EAAmB1B,EAAsBwB,GAC7Cd,EAAMM,cAAcZ,GAAQ,CAC1BmB,yBAA0BA,EAC1BC,oBAAqBA,EACrBC,kBAAmBA,EACnBC,iBAAkBA,GAEpBhB,EAAMiB,WAAWZ,OAASa,OAAOC,OAAO,GAAInB,EAAMiB,WAAWZ,OAAQ,CACnE,+BAAgCU,EAChC,sBAAuBC,GAE3B"}