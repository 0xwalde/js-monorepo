{"version":3,"file":"index.js","sources":["../../../../../../node_modules/framesync/dist/es/index.js"],"sourcesContent":["import { onNextFrame, defaultTimestep } from './on-next-frame.js';\nimport { createRenderStep } from './create-render-step.js';\n\nvar maxElapsed = 40;\nvar useDefaultElapsed = true;\nvar runNextFrame = false;\nvar isProcessing = false;\nvar frame = {\n    delta: 0,\n    timestamp: 0\n};\nvar stepsOrder = [\"read\", \"update\", \"preRender\", \"render\", \"postRender\"];\nvar steps = /*#__PURE__*/stepsOrder.reduce(function (acc, key) {\n    acc[key] = createRenderStep(function () {\n        return runNextFrame = true;\n    });\n    return acc;\n}, {});\nvar sync = /*#__PURE__*/stepsOrder.reduce(function (acc, key) {\n    var step = steps[key];\n    acc[key] = function (process, keepAlive, immediate) {\n        if (keepAlive === void 0) {\n            keepAlive = false;\n        }\n        if (immediate === void 0) {\n            immediate = false;\n        }\n        if (!runNextFrame) startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nvar cancelSync = /*#__PURE__*/stepsOrder.reduce(function (acc, key) {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nvar flushSync = /*#__PURE__*/stepsOrder.reduce(function (acc, key) {\n    acc[key] = function () {\n        return steps[key].process(frame);\n    };\n    return acc;\n}, {});\nvar processStep = function (stepId) {\n    return steps[stepId].process(frame);\n};\nvar processFrame = function (timestamp) {\n    runNextFrame = false;\n    frame.delta = useDefaultElapsed ? defaultTimestep : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nvar startLoop = function () {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing) onNextFrame(processFrame);\n};\nvar getFrameData = function () {\n    return frame;\n};\n\nexport default sync;\nexport { cancelSync, flushSync, getFrameData };\n"],"names":["useDefaultElapsed","runNextFrame","isProcessing","frame","delta","timestamp","stepsOrder","steps","reduce","acc","key","createRenderStep","sync","step","process","keepAlive","immediate","startLoop","schedule","cancelSync","cancel","processStep","stepId","processFrame","defaultTimestep","Math","max","min","forEach","onNextFrame"],"mappings":"6IAIIA,GAAoB,EACpBC,GAAe,EACfC,GAAe,EACfC,EAAQ,CACRC,MAAO,EACPC,UAAW,GAEXC,EAAa,CAAC,OAAQ,SAAU,YAAa,SAAU,cACvDC,EAAqBD,EAAWE,QAAO,SAAUC,EAAKC,GAItD,OAHAD,EAAIC,GAAOC,EAAAA,kBAAiB,WACxB,OAAOV,GAAe,CAC9B,IACWQ,CACX,GAAG,CAAE,GACDG,EAAoBN,EAAWE,QAAO,SAAUC,EAAKC,GACrD,IAAIG,EAAON,EAAMG,GAWjB,OAVAD,EAAIC,GAAO,SAAUI,EAASC,EAAWC,GAQrC,YAPkB,IAAdD,IACAA,GAAY,QAEE,IAAdC,IACAA,GAAY,GAEXf,GAAcgB,IACZJ,EAAKK,SAASJ,EAASC,EAAWC,EACjD,EACWP,CACX,GAAG,IACCU,EAA0Bb,EAAWE,QAAO,SAAUC,EAAKC,GAE3D,OADAD,EAAIC,GAAOH,EAAMG,GAAKU,OACfX,CACX,GAAG,IAOCY,EAAc,SAAUC,GACxB,OAAOf,EAAMe,GAAQR,QAAQX,EACjC,EACIoB,EAAe,SAAUlB,GACzBJ,GAAe,EACfE,EAAMC,MAAQJ,EAAoBwB,EAAAA,gBAAkBC,KAAKC,IAAID,KAAKE,IAAItB,EAAYF,EAAME,UA5C3E,IA4CmG,GAChHF,EAAME,UAAYA,EAClBH,GAAe,EACfI,EAAWsB,QAAQP,GACnBnB,GAAe,EACXD,IACAD,GAAoB,EACpB6B,EAAWA,YAACN,GAEpB,EACIN,EAAY,WACZhB,GAAe,EACfD,GAAoB,EACfE,GAAc2B,cAAYN,EACnC,8DACmB,WACf,OAAOpB,CACX"}