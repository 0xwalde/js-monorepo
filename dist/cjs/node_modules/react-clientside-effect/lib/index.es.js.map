{"version":3,"file":"index.es.js","sources":["../../../../../node_modules/react-clientside-effect/lib/index.es.js"],"sourcesContent":["import _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport React, { PureComponent } from 'react';\n\nfunction withSideEffect(reducePropsToState, handleStateChangeOnClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof reducePropsToState !== 'function') {\n      throw new Error('Expected reducePropsToState to be a function.');\n    }\n\n    if (typeof handleStateChangeOnClient !== 'function') {\n      throw new Error('Expected handleStateChangeOnClient to be a function.');\n    }\n  }\n\n  function getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  }\n\n  return function wrap(WrappedComponent) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (typeof WrappedComponent !== 'function') {\n        throw new Error('Expected WrappedComponent to be a React component.');\n      }\n    }\n\n    var mountedInstances = [];\n    var state;\n\n    function emitChange() {\n      state = reducePropsToState(mountedInstances.map(function (instance) {\n        return instance.props;\n      }));\n      handleStateChangeOnClient(state);\n    }\n\n    var SideEffect = /*#__PURE__*/function (_PureComponent) {\n      _inheritsLoose(SideEffect, _PureComponent);\n\n      function SideEffect() {\n        return _PureComponent.apply(this, arguments) || this;\n      }\n\n      // Try to use displayName of wrapped component\n      SideEffect.peek = function peek() {\n        return state;\n      };\n\n      var _proto = SideEffect.prototype;\n\n      _proto.componentDidMount = function componentDidMount() {\n        mountedInstances.push(this);\n        emitChange();\n      };\n\n      _proto.componentDidUpdate = function componentDidUpdate() {\n        emitChange();\n      };\n\n      _proto.componentWillUnmount = function componentWillUnmount() {\n        var index = mountedInstances.indexOf(this);\n        mountedInstances.splice(index, 1);\n        emitChange();\n      };\n\n      _proto.render = function render() {\n        return /*#__PURE__*/React.createElement(WrappedComponent, this.props);\n      };\n\n      return SideEffect;\n    }(PureComponent);\n\n    _defineProperty(SideEffect, \"displayName\", \"SideEffect(\" + getDisplayName(WrappedComponent) + \")\");\n\n    return SideEffect;\n  };\n}\n\nexport default withSideEffect;\n"],"names":["reducePropsToState","handleStateChangeOnClient","process","env","NODE_ENV","Error","WrappedComponent","state","mountedInstances","emitChange","map","instance","props","SideEffect","_PureComponent","apply","this","arguments","_inheritsLoose","peek","_proto","prototype","componentDidMount","push","componentDidUpdate","componentWillUnmount","index","indexOf","splice","render","React","createElement","PureComponent","react","exports","_defineProperty","displayName","name","getDisplayName"],"mappings":"yOAIA,SAAwBA,EAAoBC,GAC1C,GAA6B,eAAzBC,QAAQC,IAAIC,SAA2B,CACzC,GAAkC,mBAAvBJ,EACT,MAAM,IAAIK,MAAM,iDAGlB,GAAyC,mBAA9BJ,EACT,MAAM,IAAII,MAAM,uDAEnB,CAMD,OAAO,SAAcC,GACnB,GAA6B,eAAzBJ,QAAQC,IAAIC,UACkB,mBAArBE,EACT,MAAM,IAAID,MAAM,sDAIpB,IACIE,EADAC,EAAmB,GAGvB,SAASC,IACPF,EAAQP,EAAmBQ,EAAiBE,KAAI,SAAUC,GACxD,OAAOA,EAASC,KACjB,KACDX,EAA0BM,EAC3B,CAED,IAAIM,EAA0B,SAAUC,GAGtC,SAASD,IACP,OAAOC,EAAeC,MAAMC,KAAMC,YAAcD,IACjD,CAJDE,EAAeL,EAAYC,GAO3BD,EAAWM,KAAO,WAChB,OAAOZ,CACf,EAEM,IAAIa,EAASP,EAAWQ,UAqBxB,OAnBAD,EAAOE,kBAAoB,WACzBd,EAAiBe,KAAKP,MACtBP,GACR,EAEMW,EAAOI,mBAAqB,WAC1Bf,GACR,EAEMW,EAAOK,qBAAuB,WAC5B,IAAIC,EAAQlB,EAAiBmB,QAAQX,MACrCR,EAAiBoB,OAAOF,EAAO,GAC/BjB,GACR,EAEMW,EAAOS,OAAS,WACd,OAAoBC,EAAMC,cAAczB,EAAkBU,KAAKJ,MACvE,EAEaC,CACR,CAlC6B,CAkC5BmB,EAAaC,MAAAC,QAAAF,eAIf,OAFAG,EAAgBtB,EAAY,cAAe,cAzD7C,SAAwBP,GACtB,OAAOA,EAAiB8B,aAAe9B,EAAiB+B,MAAQ,WACjE,CAuD4DC,CAAehC,GAAoB,KAEvFO,CACX,CACA"}