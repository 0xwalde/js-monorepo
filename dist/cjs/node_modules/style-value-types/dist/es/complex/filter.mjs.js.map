{"version":3,"file":"filter.mjs.js","sources":["../../../../../../../node_modules/style-value-types/dist/es/complex/filter.mjs"],"sourcesContent":["import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\nconst maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\nfunction applyDefaultFilter(v) {\n    let [name, value] = v.slice(0, -1).split('(');\n    if (name === 'drop-shadow')\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, '');\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + '(' + defaultValue + unit + ')';\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(' ') : v;\n    } });\n\nexport { filter };\n"],"names":["maxDefaults","Set","applyDefaultFilter","v","name","value","slice","split","number","match","floatRegex","unit","replace","defaultValue","has","functionRegex","filter","Object","assign","complex","getAnimatableNone","functions","map","join"],"mappings":"iIAGA,MAAMA,EAAc,IAAIC,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASC,EAAmBC,GACxB,IAAKC,EAAMC,GAASF,EAAEG,MAAM,GAAI,GAAGC,MAAM,KACzC,GAAa,gBAATH,EACA,OAAOD,EACX,MAAOK,GAAUH,EAAMI,MAAMC,EAAAA,aAAe,GAC5C,IAAKF,EACD,OAAOL,EACX,MAAMQ,EAAON,EAAMO,QAAQJ,EAAQ,IACnC,IAAIK,EAAeb,EAAYc,IAAIV,GAAQ,EAAI,EAG/C,OAFII,IAAWH,IACXQ,GAAgB,KACbT,EAAO,IAAMS,EAAeF,EAAO,GAC9C,CACA,MAAMI,EAAgB,oBAChBC,EAASC,OAAOC,OAAOD,OAAOC,OAAO,GAAIC,EAAAA,SAAU,CAAEC,kBAAoBjB,IACvE,MAAMkB,EAAYlB,EAAEM,MAAMM,GAC1B,OAAOM,EAAYA,EAAUC,IAAIpB,GAAoBqB,KAAK,KAAOpB,CAAC"}