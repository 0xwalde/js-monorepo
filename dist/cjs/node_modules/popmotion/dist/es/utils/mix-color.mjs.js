"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("./mix.mjs.js"),s=require("../../../../hey-listen/dist/hey-listen.es.js"),r=require("./hsla-to-rgba.mjs.js"),a=require("../../../../style-value-types/dist/es/color/hsla.mjs.js"),t=require("../../../../style-value-types/dist/es/color/rgba.mjs.js"),l=require("../../../../style-value-types/dist/es/color/hex.mjs.js");const i=(e,s,r)=>{const a=e*e,t=s*s;return Math.sqrt(Math.max(0,r*(t-a)+a))},o=[l.hex,t.rgba,a.hsla],n=e=>o.find((s=>s.test(e))),h=e=>`'${e}' is not an animatable color. Use the equivalent color code instead.`;exports.mixColor=(l,o)=>{let u=n(l),c=n(o);s.invariant(!!u,h(l)),s.invariant(!!c,h(o));let j=u.parse(l),p=c.parse(o);u===a.hsla&&(j=r.hslaToRgba(j),u=t.rgba),c===a.hsla&&(p=r.hslaToRgba(p),c=t.rgba);const m=Object.assign({},j);return s=>{for(const e in m)"alpha"!==e&&(m[e]=i(j[e],p[e],s));return m.alpha=e.mix(j.alpha,p.alpha,s),u.transform(m)}},exports.mixLinearColor=i;
//# sourceMappingURL=mix-color.mjs.js.map
