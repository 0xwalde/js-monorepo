{"version":3,"file":"MeasureLayout.mjs.js","sources":["../../../../../../../../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs"],"sourcesContent":["import { __extends, __assign, __read } from 'tslib';\nimport sync from 'framesync';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nvar MeasureLayoutWithContext = /** @class */ (function (_super) {\n    __extends(MeasureLayoutWithContext, _super);\n    function MeasureLayoutWithContext() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    MeasureLayoutWithContext.prototype.componentDidMount = function () {\n        var _this = this;\n        var _a = this.props, visualElement = _a.visualElement, layoutGroup = _a.layoutGroup, switchLayoutGroup = _a.switchLayoutGroup, layoutId = _a.layoutId;\n        var projection = visualElement.projection;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if ((switchLayoutGroup === null || switchLayoutGroup === void 0 ? void 0 : switchLayoutGroup.register) && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", function () {\n                _this.safeToRemove();\n            });\n            projection.setOptions(__assign(__assign({}, projection.options), { onExitComplete: function () { return _this.safeToRemove(); } }));\n        }\n        globalProjectionState.hasEverUpdated = true;\n    };\n    MeasureLayoutWithContext.prototype.getSnapshotBeforeUpdate = function (prevProps) {\n        var _this = this;\n        var _a = this.props, layoutDependency = _a.layoutDependency, visualElement = _a.visualElement, drag = _a.drag, isPresent = _a.isPresent;\n        var projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(function () {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        _this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    };\n    MeasureLayoutWithContext.prototype.componentDidUpdate = function () {\n        var projection = this.props.visualElement.projection;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    };\n    MeasureLayoutWithContext.prototype.componentWillUnmount = function () {\n        var _a = this.props, visualElement = _a.visualElement, layoutGroup = _a.layoutGroup, promoteContext = _a.switchLayoutGroup;\n        var projection = visualElement.projection;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    };\n    MeasureLayoutWithContext.prototype.safeToRemove = function () {\n        var safeToRemove = this.props.safeToRemove;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    };\n    MeasureLayoutWithContext.prototype.render = function () {\n        return null;\n    };\n    return MeasureLayoutWithContext;\n}(React__default.Component));\nfunction MeasureLayout(props) {\n    var _a = __read(usePresence(), 2), isPresent = _a[0], safeToRemove = _a[1];\n    var layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, __assign({}, props, { layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove })));\n}\nvar defaultScaleCorrectors = {\n    borderRadius: __assign(__assign({}, correctBorderRadius), { applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ] }),\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n"],"names":["MeasureLayoutWithContext","_super","apply","this","arguments","__extends","prototype","componentDidMount","_this","_a","props","visualElement","layoutGroup","switchLayoutGroup","layoutId","projection","addScaleCorrector","defaultScaleCorrectors","group","add","register","root","didUpdate","addEventListener","safeToRemove","setOptions","__assign","options","onExitComplete","globalProjectionState","hasEverUpdated","getSnapshotBeforeUpdate","prevProps","layoutDependency","drag","isPresent","undefined","willUpdate","promote","relegate","sync","postRender","getStack","members","length","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","render","React__default","Component","borderRadius","correctBorderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","correctBoxShadow","__read","usePresence","useContext","LayoutGroupContext","createElement","react","exports","SwitchLayoutGroupContext"],"mappings":"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"}