{"version":3,"file":"use-projection.mjs.js","sources":["../../../../../../../../node_modules/framer-motion/dist/es/motion/features/use-projection.mjs"],"sourcesContent":["import { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useContext } from 'react';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useProjection(projectionId, _a, visualElement, ProjectionNodeConstructor) {\n    var _b;\n    var layoutId = _a.layoutId, layout = _a.layout, drag = _a.drag, dragConstraints = _a.dragConstraints, layoutScroll = _a.layoutScroll;\n    var initialPromotionConfig = useContext(SwitchLayoutGroupContext);\n    if (!ProjectionNodeConstructor ||\n        !visualElement ||\n        (visualElement === null || visualElement === void 0 ? void 0 : visualElement.projection)) {\n        return;\n    }\n    visualElement.projection = new ProjectionNodeConstructor(projectionId, visualElement.getLatestValues(), (_b = visualElement.parent) === null || _b === void 0 ? void 0 : _b.projection);\n    visualElement.projection.setOptions({\n        layoutId: layoutId,\n        layout: layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement: visualElement,\n        scheduleRender: function () { return visualElement.scheduleRender(); },\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig: initialPromotionConfig,\n        layoutScroll: layoutScroll,\n    });\n}\n\nexport { useProjection };\n"],"names":["projectionId","_a","visualElement","ProjectionNodeConstructor","_b","layoutId","layout","drag","dragConstraints","layoutScroll","initialPromotionConfig","useContext","SwitchLayoutGroupContext","projection","getLatestValues","parent","setOptions","alwaysMeasureLayout","Boolean","isRefObject","scheduleRender","animationType"],"mappings":"qSAIA,SAAuBA,EAAcC,EAAIC,EAAeC,GACpD,IAAIC,EACAC,EAAWJ,EAAGI,SAAUC,EAASL,EAAGK,OAAQC,EAAON,EAAGM,KAAMC,EAAkBP,EAAGO,gBAAiBC,EAAeR,EAAGQ,aACpHC,EAAyBC,2BAAWC,EAAAA,0BACnCT,GACAD,KACAA,aAAqD,EAASA,EAAcW,cAGjFX,EAAcW,WAAa,IAAIV,EAA0BH,EAAcE,EAAcY,kBAAmD,QAA/BV,EAAKF,EAAca,cAA2B,IAAPX,OAAgB,EAASA,EAAGS,YAC5KX,EAAcW,WAAWG,WAAW,CAChCX,SAAUA,EACVC,OAAQA,EACRW,oBAAqBC,QAAQX,IAAUC,GAAmBW,EAAAA,YAAYX,GACtEN,cAAeA,EACfkB,eAAgB,WAAc,OAAOlB,EAAckB,gBAAmB,EAQtEC,cAAiC,iBAAXf,EAAsBA,EAAS,OACrDI,uBAAwBA,EACxBD,aAAcA,IAEtB"}