{"version":3,"file":"use-viewport.mjs.js","sources":["../../../../../../../../../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs"],"sourcesContent":["import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport(_a) {\n    var visualElement = _a.visualElement, whileInView = _a.whileInView, onViewportEnter = _a.onViewportEnter, onViewportLeave = _a.onViewportLeave, _b = _a.viewport, viewport = _b === void 0 ? {} : _b;\n    var state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    var shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    var useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nvar thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, _a) {\n    var root = _a.root, rootMargin = _a.margin, _b = _a.amount, amount = _b === void 0 ? \"some\" : _b, once = _a.once;\n    useEffect(function () {\n        if (!shouldObserve)\n            return;\n        var options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin: rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        var intersectionCallback = function (entry) {\n            var _a;\n            var isIntersecting = entry.isIntersecting;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.InView, isIntersecting);\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            var props = visualElement.getProps();\n            var callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback === null || callback === void 0 ? void 0 : callback(entry);\n        };\n        return observeIntersection(visualElement.getInstance(), options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, _a) {\n    var _b = _a.fallback, fallback = _b === void 0 ? true : _b;\n    useEffect(function () {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(function () {\n            var _a;\n            state.hasEnteredView = true;\n            var onViewportEnter = visualElement.getProps().onViewportEnter;\n            onViewportEnter === null || onViewportEnter === void 0 ? void 0 : onViewportEnter(null);\n            (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.InView, true);\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n"],"names":["thresholdNames","some","all","useIntersectionObserver","shouldObserve","state","visualElement","_a","root","rootMargin","margin","_b","amount","once","useEffect","options","current","threshold","observeIntersection","getInstance","entry","isIntersecting","isInView","hasEnteredView","animationState","setActive","AnimationType","InView","props","getProps","callback","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","env","warnOnce","requestAnimationFrame","whileInView","viewport","useRef","Boolean","IntersectionObserver"],"mappings":"oVAoBA,IAAIA,EAAiB,CACjBC,KAAM,EACNC,IAAK,GAET,SAASC,EAAwBC,EAAeC,EAAOC,EAAeC,GAClE,IAAIC,EAAOD,EAAGC,KAAMC,EAAaF,EAAGG,OAAQC,EAAKJ,EAAGK,OAAQA,OAAgB,IAAPD,EAAgB,OAASA,EAAIE,EAAON,EAAGM,KAC5GC,EAAAA,MAAAA,QAAAA,WAAU,WACN,GAAKV,EAAL,CAEA,IAAIW,EAAU,CACVP,KAAMA,aAAmC,EAASA,EAAKQ,QACvDP,WAAYA,EACZQ,UAA6B,iBAAXL,EAAsBA,EAASZ,EAAeY,IAgCpE,OAAOM,EAAAA,oBAAoBZ,EAAca,cAAeJ,GA9B7B,SAAUK,GACjC,IAAIb,EACAc,EAAiBD,EAAMC,eAI3B,GAAIhB,EAAMiB,WAAaD,IAEvBhB,EAAMiB,SAAWD,GAKbR,GAASQ,IAAkBhB,EAAMkB,gBAArC,CAGSF,IACLhB,EAAMkB,gBAAiB,GAEa,QAAvChB,EAAKD,EAAckB,sBAAmC,IAAPjB,GAAyBA,EAAGkB,UAAUC,EAAaA,cAACC,OAAQN,GAK5G,IAAIO,EAAQtB,EAAcuB,WACtBC,EAAWT,EACTO,EAAMG,gBACNH,EAAMI,gBACZF,SAAoDA,EAASV,EAV5D,CAWb,GAnCmB,CAqCd,GAAE,CAAChB,EAAeI,EAAMC,EAAYG,GACzC,CAMA,SAASqB,EAA+B7B,EAAeC,EAAOC,EAAeC,GACzE,IAAII,EAAKJ,EAAG2B,SAAUA,OAAkB,IAAPvB,GAAuBA,EACxDG,EAAAA,MAAAA,QAAAA,WAAU,WACDV,GAAkB8B,IAEX,eAARC,EAAAA,KACAC,YAAS,EAAO,oGAUpBC,uBAAsB,WAClB,IAAI9B,EACJF,EAAMkB,gBAAiB,EACvB,IAAIQ,EAAkBzB,EAAcuB,WAAWE,gBAC/CA,SAAkEA,EAAgB,MAC1C,QAAvCxB,EAAKD,EAAckB,sBAAmC,IAAPjB,GAAyBA,EAAGkB,UAAUC,EAAaA,cAACC,QAAQ,EACxH,IACA,GAAO,CAACvB,GACR,qBA1FA,SAAqBG,GACjB,IAAID,EAAgBC,EAAGD,cAAegC,EAAc/B,EAAG+B,YAAaP,EAAkBxB,EAAGwB,gBAAiBC,EAAkBzB,EAAGyB,gBAAiBrB,EAAKJ,EAAGgC,SAAUA,OAAkB,IAAP5B,EAAgB,CAAE,EAAGA,EAC9LN,EAAQmC,EAAAA,MAAAA,QAAAA,OAAO,CACfjB,gBAAgB,EAChBD,UAAU,IAEVlB,EAAgBqC,QAAQH,GAAeP,GAAmBC,GAC1DO,EAAS1B,MAAQR,EAAMW,QAAQO,iBAC/BnB,GAAgB,IAC8B,oBAAzBsC,qBACnBT,EACA9B,GACMC,EAAeC,EAAMW,QAASV,EAAeiC,EAC7D"}