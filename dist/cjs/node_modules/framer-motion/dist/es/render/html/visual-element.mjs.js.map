{"version":3,"file":"visual-element.mjs.js","sources":["../../../../../../../../node_modules/framer-motion/dist/es/render/html/visual-element.mjs"],"sourcesContent":["import { __rest, __assign } from 'tslib';\nimport { visualElement } from '../index.mjs';\nimport { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { parseDomVariant } from '../dom/utils/parse-dom-variant.mjs';\nimport { isTransformProp } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nvar htmlConfig = {\n    treeType: \"dom\",\n    readValueFromInstance: function (domElement, key) {\n        if (isTransformProp(key)) {\n            var defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            var computedStyle = getComputedStyle(domElement);\n            return ((isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0);\n        }\n    },\n    sortNodePosition: function (a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    },\n    getBaseTarget: function (props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    },\n    measureViewportBox: function (element, _a) {\n        var transformPagePoint = _a.transformPagePoint;\n        return measureViewportBox(element, transformPagePoint);\n    },\n    /**\n     * Reset the transform on the current Element. This is called as part\n     * of a batched process across the entire layout tree. To remove this write\n     * cycle it'd be interesting to see if it's possible to \"undo\" all the current\n     * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\n     * works\n     */\n    resetTransform: function (element, domElement, props) {\n        var transformTemplate = props.transformTemplate;\n        domElement.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        // Ensure that whatever happens next, we restore our transform on the next frame\n        element.scheduleRender();\n    },\n    restoreTransform: function (instance, mutableState) {\n        instance.style.transform = mutableState.style.transform;\n    },\n    removeValueFromRenderState: function (key, _a) {\n        var vars = _a.vars, style = _a.style;\n        delete vars[key];\n        delete style[key];\n    },\n    /**\n     * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\n     * can be animated by Motion.\n     */\n    makeTargetAnimatable: function (element, _a, _b, isMounted) {\n        var transformValues = _b.transformValues;\n        if (isMounted === void 0) { isMounted = true; }\n        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, [\"transition\", \"transitionEnd\"]);\n        var origin = getOrigin(target, transition || {}, element);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(element, target, origin);\n            var parsed = parseDomVariant(element, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return __assign({ transition: transition, transitionEnd: transitionEnd }, target);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    build: function (element, renderState, latestValues, options, props) {\n        if (element.isVisible !== undefined) {\n            renderState.style.visibility = element.isVisible\n                ? \"visible\"\n                : \"hidden\";\n        }\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    },\n    render: renderHTML,\n};\nvar htmlVisualElement = visualElement(htmlConfig);\n\nexport { getComputedStyle, htmlConfig, htmlVisualElement };\n"],"names":["getComputedStyle","element","window","htmlConfig","treeType","readValueFromInstance","domElement","key","isTransformProp","defaultType","getDefaultValueType","default","computedStyle","isCSSVariable","getPropertyValue","sortNodePosition","a","b","compareDocumentPosition","getBaseTarget","props","_a","style","measureViewportBox","transformPagePoint","resetTransform","transformTemplate","transform","scheduleRender","restoreTransform","instance","mutableState","removeValueFromRenderState","vars","makeTargetAnimatable","_b","isMounted","transformValues","transition","transitionEnd","target","__rest","origin","getOrigin","checkTargetForNewValues","parsed","parseDomVariant","__assign","scrapeMotionValuesFromProps","build","renderState","latestValues","options","undefined","isVisible","visibility","buildHTMLStyles","render","renderHTML","htmlVisualElement","visualElement"],"mappings":"miBAYA,SAASA,EAAiBC,GACtB,OAAOC,OAAOF,iBAAiBC,EACnC,CACG,IAACE,EAAa,CACbC,SAAU,MACVC,sBAAuB,SAAUC,EAAYC,GACzC,GAAIC,EAAAA,gBAAgBD,GAAM,CACtB,IAAIE,EAAcC,sBAAoBH,GACtC,OAAOE,GAAcA,EAAYE,SAAe,CACnD,CAEG,IAAIC,EAAgBZ,EAAiBM,GACrC,OAASO,EAAaA,cAACN,GACjBK,EAAcE,iBAAiBP,GAC/BK,EAAcL,KAAS,CAEpC,EACDQ,iBAAkB,SAAUC,EAAGC,GAM3B,OAAsC,EAA/BD,EAAEE,wBAAwBD,GAAS,GAAK,CAClD,EACDE,cAAe,SAAUC,EAAOb,GAC5B,IAAIc,EACJ,OAA8B,QAAtBA,EAAKD,EAAME,aAA0B,IAAPD,OAAgB,EAASA,EAAGd,EACrE,EACDgB,mBAAoB,SAAUtB,EAASoB,GACnC,IAAIG,EAAqBH,EAAGG,mBAC5B,OAAOD,EAAkBA,mBAACtB,EAASuB,EACtC,EAQDC,eAAgB,SAAUxB,EAASK,EAAYc,GAC3C,IAAIM,EAAoBN,EAAMM,kBAC9BpB,EAAWgB,MAAMK,UAAYD,EACvBA,EAAkB,CAAE,EAAE,IACtB,OAENzB,EAAQ2B,gBACX,EACDC,iBAAkB,SAAUC,EAAUC,GAClCD,EAASR,MAAMK,UAAYI,EAAaT,MAAMK,SACjD,EACDK,2BAA4B,SAAUzB,EAAKc,GACvC,IAAIY,EAAOZ,EAAGY,KAAMX,EAAQD,EAAGC,aACxBW,EAAK1B,UACLe,EAAMf,EAChB,EAKD2B,qBAAsB,SAAUjC,EAASoB,EAAIc,EAAIC,GAC7C,IAAIC,EAAkBF,EAAGE,qBACP,IAAdD,IAAwBA,GAAY,GACxC,IAAIE,EAAajB,EAAGiB,WAAYC,EAAgBlB,EAAGkB,cAAeC,EAASC,EAAMA,OAACpB,EAAI,CAAC,aAAc,kBACjGqB,EAASC,EAAAA,UAAUH,EAAQF,GAAc,CAAA,EAAIrC,GAYjD,GARIoC,IACIE,IACAA,EAAgBF,EAAgBE,IAChCC,IACAA,EAASH,EAAgBG,IACzBE,IACAA,EAASL,EAAgBK,KAE7BN,EAAW,CACXQ,EAAAA,wBAAwB3C,EAASuC,EAAQE,GACzC,IAAIG,EAASC,EAAAA,gBAAgB7C,EAASuC,EAAQE,EAAQH,GACtDA,EAAgBM,EAAON,cACvBC,EAASK,EAAOL,MACnB,CACD,OAAOO,EAAAA,SAAS,CAAET,WAAYA,EAAYC,cAAeA,GAAiBC,EAC7E,EACDQ,4BAA6BA,EAA2BA,4BACxDC,MAAO,SAAUhD,EAASiD,EAAaC,EAAcC,EAAShC,QAChCiC,IAAtBpD,EAAQqD,YACRJ,EAAY5B,MAAMiC,WAAatD,EAAQqD,UACjC,UACA,UAEVE,EAAeA,gBAACN,EAAaC,EAAcC,EAAShC,EAAMM,kBAC7D,EACD+B,OAAQC,EAAUA,YAElBC,EAAoBC,EAAaA,cAACzD"}