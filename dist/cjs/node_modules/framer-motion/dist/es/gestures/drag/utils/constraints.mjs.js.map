{"version":3,"file":"constraints.mjs.js","sources":["../../../../../../../../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs"],"sourcesContent":["import { __read } from 'tslib';\nimport { clamp, mix, progress } from 'popmotion';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, _a, elastic) {\n    var min = _a.min, max = _a.max;\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, _a) {\n    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    var _a;\n    var min = constraintsAxis.min - layoutAxis.min;\n    var max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        _a = __read([max, min], 2), min = _a[0], max = _a[1];\n    }\n    return { min: min, max: max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    var origin = 0.5;\n    var sourceLength = calcLength(source);\n    var targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    var relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nvar defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic) {\n    if (dragElastic === void 0) { dragElastic = defaultElastic; }\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n"],"names":["calcRelativeAxisConstraints","axis","min","max","undefined","calcViewportAxisConstraints","layoutAxis","constraintsAxis","_a","__read","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","point","elastic","mix","Math","source","target","origin","sourceLength","calcLength","targetLength","progress","clamp","layoutBox","top","left","bottom","right","x","y","constraintsBox","layout","constraints","relativeConstraints"],"mappings":"mYA0BA,SAASA,EAA4BC,EAAMC,EAAKC,GAC5C,MAAO,CACHD,SAAaE,IAARF,EAAoBD,EAAKC,IAAMA,OAAME,EAC1CD,SAAaC,IAARD,EACCF,EAAKE,IAAMA,GAAOF,EAAKE,IAAMF,EAAKC,UAClCE,EAEd,CAeA,SAASC,EAA4BC,EAAYC,GAC7C,IAAIC,EACAN,EAAMK,EAAgBL,IAAMI,EAAWJ,IACvCC,EAAMI,EAAgBJ,IAAMG,EAAWH,IAO3C,OAJII,EAAgBJ,IAAMI,EAAgBL,IACtCI,EAAWH,IAAMG,EAAWJ,MACAA,GAA5BM,EAAKC,EAAAA,OAAO,CAACN,EAAKD,GAAM,IAAa,GAAIC,EAAMK,EAAG,IAE/C,CAAEN,IAAKA,EAAKC,IAAKA,EAC5B,CAwDA,SAASO,EAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHX,IAAKY,EAAoBH,EAAaC,GACtCT,IAAKW,EAAoBH,EAAaE,GAE9C,CACA,SAASC,EAAoBH,EAAaI,GACtC,IAAIP,EACJ,MAA8B,iBAAhBG,EACRA,EAC8B,QAA7BH,EAAKG,EAAYI,UAA2B,IAAPP,EAAgBA,EAAK,CACrE,0BArHA,SAA0BQ,EAAOR,EAAIS,GACjC,IAAIf,EAAMM,EAAGN,IAAKC,EAAMK,EAAGL,IAS3B,YARYC,IAARF,GAAqBc,EAAQd,EAE7Bc,EAAQC,EAAUC,MAAIhB,EAAKc,EAAOC,EAAQf,KAAOiB,KAAKhB,IAAIa,EAAOd,QAEpDE,IAARD,GAAqBa,EAAQb,IAElCa,EAAQC,EAAUC,MAAIf,EAAKa,EAAOC,EAAQd,KAAOgB,KAAKjB,IAAIc,EAAOb,IAE9Da,CACX,qBAqDA,SAAoBI,EAAQC,GACxB,IAAIC,EAAS,GACTC,EAAeC,aAAWJ,GAC1BK,EAAeD,aAAWH,GAO9B,OANII,EAAeF,EACfD,EAASI,EAAAA,SAASL,EAAOnB,IAAKmB,EAAOlB,IAAMoB,EAAcH,EAAOlB,KAE3DqB,EAAeE,IACpBH,EAASI,EAAAA,SAASN,EAAOlB,IAAKkB,EAAOjB,IAAMsB,EAAcJ,EAAOnB,MAE7DyB,QAAM,EAAG,EAAGL,EACvB,wEA9CA,SAAiCM,EAAWpB,GACxC,IAAIqB,EAAMrB,EAAGqB,IAAKC,EAAOtB,EAAGsB,KAAMC,EAASvB,EAAGuB,OAAQC,EAAQxB,EAAGwB,MACjE,MAAO,CACHC,EAAGjC,EAA4B4B,EAAUK,EAAGH,EAAME,GAClDE,EAAGlC,EAA4B4B,EAAUM,EAAGL,EAAKE,GAEzD,wEAmBA,SAAiCH,EAAWO,GACxC,MAAO,CACHF,EAAG5B,EAA4BuB,EAAUK,EAAGE,EAAeF,GAC3DC,EAAG7B,EAA4BuB,EAAUM,EAAGC,EAAeD,GAEnE,yBA8BqB,kCAVrB,SAA+BE,EAAQC,GACnC,IAAIC,EAAsB,CAAA,EAO1B,YANwBlC,IAApBiC,EAAYnC,MACZoC,EAAoBpC,IAAMmC,EAAYnC,IAAMkC,EAAOlC,UAE/BE,IAApBiC,EAAYlC,MACZmC,EAAoBnC,IAAMkC,EAAYlC,IAAMiC,EAAOlC,KAEhDoC,CACX,0DAKA,SAA4B3B,GAQxB,YAPoB,IAAhBA,IAA0BA,EALb,MAMG,IAAhBA,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAVa,KAYV,CACHsB,EAAGvB,EAAmBC,EAAa,OAAQ,SAC3CuB,EAAGxB,EAAmBC,EAAa,MAAO,UAElD"}