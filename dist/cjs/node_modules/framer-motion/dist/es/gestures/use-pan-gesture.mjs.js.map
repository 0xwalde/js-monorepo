{"version":3,"file":"use-pan-gesture.mjs.js","sources":["../../../../../../../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs"],"sourcesContent":["import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture(_a) {\n    var onPan = _a.onPan, onPanStart = _a.onPanStart, onPanEnd = _a.onPanEnd, onPanSessionStart = _a.onPanSessionStart, visualElement = _a.visualElement;\n    var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    var panSession = useRef(null);\n    var transformPagePoint = useContext(MotionConfigContext).transformPagePoint;\n    var handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: function (event, info) {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(function () {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint: transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(function () { return panSession.current && panSession.current.end(); });\n}\n\nexport { usePanGesture };\n"],"names":["_a","onPan","onPanStart","onPanEnd","onPanSessionStart","visualElement","hasPanEvents","panSession","useRef","transformPagePoint","useContext","MotionConfigContext","handlers","onSessionStart","onStart","onMove","onEnd","event","info","current","useEffect","updateHandlers","usePointerEvent","PanSession","useUnmountEffect","end"],"mappings":"sWAkBA,SAAuBA,GACnB,IAAIC,EAAQD,EAAGC,MAAOC,EAAaF,EAAGE,WAAYC,EAAWH,EAAGG,SAAUC,EAAoBJ,EAAGI,kBAAmBC,EAAgBL,EAAGK,cACnIC,EAAeL,GAASC,GAAcC,GAAYC,EAClDG,EAAaC,uBAAO,MACpBC,EAAqBC,EAAAA,MAAAA,QAAAA,WAAWC,EAAmBA,qBAAEF,mBACrDG,EAAW,CACXC,eAAgBT,EAChBU,QAASZ,EACTa,OAAQd,EACRe,MAAO,SAAUC,EAAOC,GACpBX,EAAWY,QAAU,KACrBhB,GAAYA,EAASc,EAAOC,EAC/B,GAELE,EAAAA,MAAAA,QAAAA,WAAU,WACqB,OAAvBb,EAAWY,SACXZ,EAAWY,QAAQE,eAAeT,EAE9C,IAMIU,EAAAA,gBAAgBjB,EAAe,cAAeC,GAL9C,SAAuBW,GACnBV,EAAWY,QAAU,IAAII,aAAWN,EAAOL,EAAU,CACjDH,mBAAoBA,GAE3B,GAEDe,oBAAiB,WAAc,OAAOjB,EAAWY,SAAWZ,EAAWY,QAAQM,KAAM,GACzF"}