{"version":3,"file":"chakra-ui-focus-lock.esm.js","sources":["../../../../../../node_modules/@chakra-ui/focus-lock/dist/chakra-ui-focus-lock.esm.js"],"sourcesContent":["import * as React from 'react';\nimport ReactFocusLock from 'react-focus-lock';\nimport { getAllFocusable, focus, __DEV__ } from '@chakra-ui/utils';\n\nvar FocusLock = function FocusLock(props) {\n  var initialFocusRef = props.initialFocusRef,\n      finalFocusRef = props.finalFocusRef,\n      contentRef = props.contentRef,\n      restoreFocus = props.restoreFocus,\n      children = props.children,\n      isDisabled = props.isDisabled,\n      autoFocus = props.autoFocus,\n      persistentFocus = props.persistentFocus,\n      lockFocusAcrossFrames = props.lockFocusAcrossFrames;\n  var onActivation = React.useCallback(function () {\n    if (initialFocusRef != null && initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    } else if (contentRef != null && contentRef.current) {\n      var focusables = getAllFocusable(contentRef.current);\n\n      if (focusables.length === 0) {\n        focus(contentRef.current, {\n          nextTick: true\n        });\n      }\n    }\n  }, [initialFocusRef, contentRef]);\n  var onDeactivation = React.useCallback(function () {\n    var _finalFocusRef$curren;\n\n    finalFocusRef == null ? void 0 : (_finalFocusRef$curren = finalFocusRef.current) == null ? void 0 : _finalFocusRef$curren.focus();\n  }, [finalFocusRef]);\n  var returnFocus = restoreFocus && !finalFocusRef;\n  return /*#__PURE__*/React.createElement(ReactFocusLock, {\n    crossFrame: lockFocusAcrossFrames,\n    persistentFocus: persistentFocus,\n    autoFocus: autoFocus,\n    disabled: isDisabled,\n    onActivation: onActivation,\n    onDeactivation: onDeactivation,\n    returnFocus: returnFocus\n  }, children);\n};\n\nif (__DEV__) {\n  FocusLock.displayName = \"FocusLock\";\n}\n\nexport { FocusLock, FocusLock as default };\n"],"names":["FocusLock","props","initialFocusRef","finalFocusRef","contentRef","restoreFocus","children","isDisabled","autoFocus","persistentFocus","lockFocusAcrossFrames","onActivation","React.useCallback","current","focus","getAllFocusable","length","nextTick","onDeactivation","_finalFocusRef$curren","returnFocus","React.createElement","ReactFocusLock","crossFrame","disabled","__DEV__","displayName"],"mappings":"qlBAIIA,EAAY,SAAmBC,GACjC,IAAIC,EAAkBD,EAAMC,gBACxBC,EAAgBF,EAAME,cACtBC,EAAaH,EAAMG,WACnBC,EAAeJ,EAAMI,aACrBC,EAAWL,EAAMK,SACjBC,EAAaN,EAAMM,WACnBC,EAAYP,EAAMO,UAClBC,EAAkBR,EAAMQ,gBACxBC,EAAwBT,EAAMS,sBAC9BC,EAAeC,EAAAA,MAAAA,QAAAA,aAAkB,WACnC,GAAuB,MAAnBV,GAA2BA,EAAgBW,QAC7CX,EAAgBW,QAAQC,aACnB,GAAkB,MAAdV,GAAsBA,EAAWS,QAAS,CAGzB,IAFTE,EAAAA,gBAAgBX,EAAWS,SAE7BG,QACbF,EAAKA,MAACV,EAAWS,QAAS,CACxBI,UAAU,GAGf,CACL,GAAK,CAACf,EAAiBE,IACjBc,EAAiBN,EAAAA,MAAAA,QAAAA,aAAkB,WACrC,IAAIO,EAEa,MAAjBhB,GAAoF,OAAlDgB,EAAwBhB,EAAcU,UAA4BM,EAAsBL,OAC9H,GAAK,CAACX,IACAiB,EAAcf,IAAiBF,EACnC,OAAoBkB,EAAAA,MAAAA,QAAAA,cAAoBC,EAAgB,CACtDC,WAAYb,EACZD,gBAAiBA,EACjBD,UAAWA,EACXgB,SAAUjB,EACVI,aAAcA,EACdO,eAAgBA,EAChBE,YAAaA,GACZd,EACL,EAEImB,YACFzB,EAAU0B,YAAc"}