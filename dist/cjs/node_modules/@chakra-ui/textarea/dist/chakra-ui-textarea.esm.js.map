{"version":3,"file":"chakra-ui-textarea.esm.js","sources":["../../../../../../node_modules/@chakra-ui/textarea/dist/chakra-ui-textarea.esm.js"],"sourcesContent":["import { useFormControl } from '@chakra-ui/form-control';\nimport { forwardRef, useStyleConfig, omitThemingProps, chakra } from '@chakra-ui/system';\nimport { omit, cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"className\", \"rows\"];\nvar omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\n\n/**\n * Textarea is used to enter an amount of text that's longer than a single line\n * @see Docs https://chakra-ui.com/textarea\n */\nvar Textarea = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Textarea\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      rows = _omitThemingProps.rows,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var textareaProps = useFormControl(rest);\n  var textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /*#__PURE__*/React.createElement(chakra.textarea, _extends({\n    ref: ref,\n    rows: rows\n  }, textareaProps, {\n    className: cx(\"chakra-textarea\", className),\n    __css: textareaStyles\n  }));\n});\n\nif (__DEV__) {\n  Textarea.displayName = \"Textarea\";\n}\n\nexport { Textarea };\n"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_excluded","omitted","Textarea","forwardRef","props","ref","styles","useStyleConfig","_omitThemingProps","omitThemingProps","className","rows","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","textareaProps","useFormControl","textareaStyles","omit","React.createElement","chakra","textarea","cx","__css","__DEV__","displayName"],"mappings":"yUAKA,SAASA,IAcP,OAbAA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAC1D,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVP,OAAOS,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,GAG1B,CAED,OAAOL,CACX,EACSJ,EAASa,MAAMC,KAAMR,UAC9B,CAiBA,IAAIS,EAAY,CAAC,YAAa,QAC1BC,EAAU,CAAC,IAAK,OAAQ,SAAU,aAMlCC,EAAwBC,EAAUA,YAAC,SAAUC,EAAOC,GACtD,IAAIC,EAASC,EAAAA,eAAe,WAAYH,GAEpCI,EAAoBC,EAAgBA,iBAACL,GACrCM,EAAYF,EAAkBE,UAC9BC,EAAOH,EAAkBG,KACzBC,EA5BN,SAAuCnB,EAAQoB,GAC7C,GAAc,MAAVpB,EAAgB,MAAO,GAC3B,IAEIC,EAAKJ,EAFLD,EAAS,CAAA,EACTyB,EAAa5B,OAAO6B,KAAKtB,GAG7B,IAAKH,EAAI,EAAGA,EAAIwB,EAAWtB,OAAQF,IACjCI,EAAMoB,EAAWxB,GACbuB,EAASG,QAAQtB,IAAQ,IAC7BL,EAAOK,GAAOD,EAAOC,IAGvB,OAAOL,CACT,CAea4B,CAA8BT,EAAmBR,GAExDkB,EAAgBC,iBAAeP,GAC/BQ,EAAiBT,EAAOU,EAAAA,KAAKf,EAAQL,GAAWK,EACpD,OAAoBgB,8BAAoBC,EAAAA,OAAOC,SAAUvC,EAAS,CAChEoB,IAAKA,EACLM,KAAMA,GACLO,EAAe,CAChBR,UAAWe,EAAAA,GAAG,kBAAmBf,GACjCgB,MAAON,IAEX,IAEIO,YACFzB,EAAS0B,YAAc"}