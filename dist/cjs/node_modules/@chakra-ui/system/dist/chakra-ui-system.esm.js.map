{"version":3,"file":"chakra-ui-system.esm.js","sources":["../../../../../../node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js"],"sourcesContent":["import { useColorMode } from '@chakra-ui/color-mode';\nexport * from '@chakra-ui/color-mode';\nimport { toCSSVar, css, propNames, isStyleProp, resolveStyleConfig } from '@chakra-ui/styled-system';\nexport * from '@chakra-ui/styled-system';\nimport { ThemeProvider as ThemeProvider$1, Global, ThemeContext } from '@emotion/react';\nexport { keyframes } from '@emotion/react';\nimport { memoizedGet, runIfFn, omit, objectFilter, filterUndefined, mergeWith } from '@chakra-ui/utils';\nimport { createContext } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport { useRef } from 'react';\nimport _styled from '@emotion/styled';\nimport isEqual from 'react-fast-compare';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar ThemeProvider = function ThemeProvider(props) {\n  var cssVarsRoot = props.cssVarsRoot,\n      theme = props.theme,\n      children = props.children;\n  var computedTheme = React.useMemo(function () {\n    return toCSSVar(theme);\n  }, [theme]);\n  return /*#__PURE__*/React.createElement(ThemeProvider$1, {\n    theme: computedTheme\n  }, /*#__PURE__*/React.createElement(CSSVars, {\n    root: cssVarsRoot\n  }), children);\n};\nvar CSSVars = function CSSVars(_ref) {\n  var _ref$root = _ref.root,\n      root = _ref$root === void 0 ? \":host, :root\" : _ref$root;\n\n  /**\n   * Append color mode selector to allow semantic tokens to change according to the color mode\n   */\n  var selector = [root, \"[data-theme]\"].join(\",\");\n  return /*#__PURE__*/React.createElement(Global, {\n    styles: function styles(theme) {\n      var _ref2;\n\n      return _ref2 = {}, _ref2[selector] = theme.__cssVars, _ref2;\n    }\n  });\n};\nfunction useTheme() {\n  var theme = React.useContext(ThemeContext);\n\n  if (!theme) {\n    throw Error(\"useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />` or `<ThemeProvider />`\");\n  }\n\n  return theme;\n}\n/**\n * @deprecated - Prefer to use `createStylesContext` to provide better error messages\n *\n * @example\n *\n * ```jsx\n * import { createStylesContext } from \"@chakra-ui/react\"\n *\n * const [StylesProvider, useStyles] = createStylesContext(\"Component\")\n * ```\n */\n\nvar _createContext = createContext({\n  name: \"StylesContext\",\n  errorMessage: \"useStyles: `styles` is undefined. Seems you forgot to wrap the components in `<StylesProvider />` \"\n}),\n    StylesProvider = _createContext[0],\n    useStyles = _createContext[1];\n/**\n * Helper function that creates context with a standardized errorMessage related to the component\n * @param componentName\n * @returns [StylesProvider, useStyles]\n */\n\nvar createStylesContext = function createStylesContext(componentName) {\n  return createContext({\n    name: componentName + \"StylesContext\",\n    errorMessage: \"useStyles: \\\"styles\\\" is undefined. Seems you forgot to wrap the components in \\\"<\" + componentName + \" />\\\" \"\n  });\n};\n/**\n * Applies styles defined in `theme.styles.global` globally\n * using emotion's `Global` component\n */\n\nvar GlobalStyle = function GlobalStyle() {\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  return /*#__PURE__*/React.createElement(Global, {\n    styles: function styles(theme) {\n      var styleObjectOrFn = memoizedGet(theme, \"styles.global\");\n      var globalStyles = runIfFn(styleObjectOrFn, {\n        theme: theme,\n        colorMode: colorMode\n      });\n      if (!globalStyles) return undefined;\n      var styles = css(globalStyles)(theme);\n      return styles;\n    }\n  });\n};\n\nfunction useChakra() {\n  var colorModeResult = useColorMode();\n  var theme = useTheme();\n  return _extends({}, colorModeResult, {\n    theme: theme\n  });\n}\n\nfunction getBreakpointValue(theme, value, fallback) {\n  var _ref, _getValue;\n\n  if (value == null) return value;\n\n  var getValue = function getValue(val) {\n    var _theme$__breakpoints, _theme$__breakpoints$;\n\n    return (_theme$__breakpoints = theme.__breakpoints) == null ? void 0 : (_theme$__breakpoints$ = _theme$__breakpoints.asArray) == null ? void 0 : _theme$__breakpoints$[val];\n  };\n\n  return (_ref = (_getValue = getValue(value)) != null ? _getValue : getValue(fallback)) != null ? _ref : fallback;\n}\n\nfunction getTokenValue(theme, value, fallback) {\n  var _ref2, _getValue2;\n\n  if (value == null) return value;\n\n  var getValue = function getValue(val) {\n    var _theme$__cssMap, _theme$__cssMap$val;\n\n    return (_theme$__cssMap = theme.__cssMap) == null ? void 0 : (_theme$__cssMap$val = _theme$__cssMap[val]) == null ? void 0 : _theme$__cssMap$val.value;\n  };\n\n  return (_ref2 = (_getValue2 = getValue(value)) != null ? _getValue2 : getValue(fallback)) != null ? _ref2 : fallback;\n}\n\nfunction useToken(scale, token, fallback) {\n  var theme = useTheme();\n  return getToken(scale, token, fallback)(theme);\n}\nfunction getToken(scale, token, fallback) {\n  var _token = Array.isArray(token) ? token : [token];\n\n  var _fallback = Array.isArray(fallback) ? fallback : [fallback];\n\n  return function (theme) {\n    var fallbackArr = _fallback.filter(Boolean);\n\n    var result = _token.map(function (token, index) {\n      var _fallbackArr$index2;\n\n      if (scale === \"breakpoints\") {\n        var _fallbackArr$index;\n\n        return getBreakpointValue(theme, token, (_fallbackArr$index = fallbackArr[index]) != null ? _fallbackArr$index : token);\n      }\n\n      var path = scale + \".\" + token;\n      return getTokenValue(theme, path, (_fallbackArr$index2 = fallbackArr[index]) != null ? _fallbackArr$index2 : token);\n    });\n\n    return Array.isArray(token) ? result : result[0];\n  };\n}\n\nfunction omitThemingProps(props) {\n  return omit(props, [\"styleConfig\", \"size\", \"variant\", \"colorScheme\"]);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\n/**\n * List of props for emotion to omit from DOM.\n * It mostly consists of Chakra props\n */\n\nvar allPropNames = new Set([].concat(propNames, [\"textStyle\", \"layerStyle\", \"apply\", \"noOfLines\", \"focusBorderColor\", \"errorBorderColor\", \"as\", \"__css\", \"css\", \"sx\"]));\n/**\n * htmlWidth and htmlHeight is used in the <Image />\n * component to support the native `width` and `height` attributes\n *\n * https://github.com/chakra-ui/chakra-ui/issues/149\n */\n\nvar validHTMLProps = new Set([\"htmlWidth\", \"htmlHeight\", \"htmlSize\"]);\nvar shouldForwardProp = function shouldForwardProp(prop) {\n  return validHTMLProps.has(prop) || !allPropNames.has(prop);\n};\n\nvar _excluded$1 = [\"theme\", \"css\", \"__css\", \"sx\"],\n    _excluded2 = [\"baseStyle\"];\n\n/**\n * Style resolver function that manages how style props are merged\n * in combination with other possible ways of defining styles.\n *\n * For example, take a component defined this way:\n * ```jsx\n * <Box fontSize=\"24px\" sx={{ fontSize: \"40px\" }}></Box>\n * ```\n *\n * We want to manage the priority of the styles properly to prevent unwanted\n * behaviors. Right now, the `sx` prop has the highest priority so the resolved\n * fontSize will be `40px`\n */\nvar toCSSObject = function toCSSObject(_ref) {\n  var baseStyle = _ref.baseStyle;\n  return function (props) {\n    props.theme;\n        var cssProp = props.css,\n        __css = props.__css,\n        sx = props.sx,\n        rest = _objectWithoutPropertiesLoose(props, _excluded$1);\n\n    var styleProps = objectFilter(rest, function (_, prop) {\n      return isStyleProp(prop);\n    });\n    var finalBaseStyle = runIfFn(baseStyle, props);\n    var finalStyles = Object.assign({}, __css, finalBaseStyle, filterUndefined(styleProps), sx);\n    var computedCSS = css(finalStyles)(props.theme);\n    return cssProp ? [computedCSS, cssProp] : computedCSS;\n  };\n};\nfunction styled(component, options) {\n  var _ref2 = options != null ? options : {},\n      baseStyle = _ref2.baseStyle,\n      styledOptions = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n  if (!styledOptions.shouldForwardProp) {\n    styledOptions.shouldForwardProp = shouldForwardProp;\n  }\n\n  var styleObject = toCSSObject({\n    baseStyle: baseStyle\n  });\n  return _styled(component, styledOptions)(styleObject);\n}\n\n/**\n * All credit goes to Chance (Reach UI), Haz (Reakit) and (fluentui)\n * for creating the base type definitions upon which we improved on\n */\nfunction forwardRef(component) {\n  return /*#__PURE__*/React.forwardRef(component);\n}\n\nvar _excluded = [\"styleConfig\"];\n\nfunction useStyleConfigImpl(themeKey, props) {\n  var _styleConfig$defaultP;\n\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      styleConfigProp = _props.styleConfig,\n      rest = _objectWithoutPropertiesLoose(_props, _excluded);\n\n  var _useChakra = useChakra(),\n      theme = _useChakra.theme,\n      colorMode = _useChakra.colorMode;\n\n  var themeStyleConfig = memoizedGet(theme, \"components.\" + themeKey);\n  var styleConfig = styleConfigProp || themeStyleConfig;\n  var mergedProps = mergeWith({\n    theme: theme,\n    colorMode: colorMode\n  }, (_styleConfig$defaultP = styleConfig == null ? void 0 : styleConfig.defaultProps) != null ? _styleConfig$defaultP : {}, filterUndefined(omit(rest, [\"children\"])));\n  /**\n   * Store the computed styles in a `ref` to avoid unneeded re-computation\n   */\n\n  var stylesRef = useRef({});\n\n  if (styleConfig) {\n    var getStyles = resolveStyleConfig(styleConfig);\n    var styles = getStyles(mergedProps);\n    var isStyleEqual = isEqual(stylesRef.current, styles);\n\n    if (!isStyleEqual) {\n      stylesRef.current = styles;\n    }\n  }\n\n  return stylesRef.current;\n}\n\nfunction useStyleConfig(themeKey, props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  return useStyleConfigImpl(themeKey, props);\n}\nfunction useMultiStyleConfig(themeKey, props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  return useStyleConfigImpl(themeKey, props);\n}\n\nfunction factory() {\n  var cache = new Map();\n  return new Proxy(styled, {\n    /**\n     * @example\n     * const Div = chakra(\"div\")\n     * const WithChakra = chakra(AnotherComponent)\n     */\n    apply: function apply(target, thisArg, argArray) {\n      return styled.apply(void 0, argArray);\n    },\n\n    /**\n     * @example\n     * <chakra.div />\n     */\n    get: function get(_, element) {\n      if (!cache.has(element)) {\n        cache.set(element, styled(element));\n      }\n\n      return cache.get(element);\n    }\n  });\n}\n\nvar chakra = factory();\n\nexport { CSSVars, GlobalStyle, StylesProvider, ThemeProvider, chakra, createStylesContext, forwardRef, getToken, omitThemingProps, shouldForwardProp, styled, toCSSObject, useChakra, useMultiStyleConfig, useStyleConfig, useStyles, useTheme, useToken };\n"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","useTheme","theme","React.useContext","ThemeContext","Error","createContext","name","errorMessage","useChakra","useColorMode","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","allPropNames","Set","concat","propNames","validHTMLProps","shouldForwardProp","prop","has","_excluded$1","_excluded2","toCSSObject","_ref","baseStyle","props","cssProp","css","__css","sx","rest","styleProps","objectFilter","_","isStyleProp","finalBaseStyle","runIfFn","finalStyles","filterUndefined","computedCSS","styled","component","options","_ref2","styledOptions","styleObject","_styled","_excluded","useStyleConfigImpl","themeKey","_styleConfig$defaultP","_props","styleConfigProp","styleConfig","_useChakra","colorMode","themeStyleConfig","memoizedGet","mergedProps","mergeWith","defaultProps","omit","stylesRef","useRef","styles","resolveStyleConfig","getStyles","isEqual","current","cache","chakra","Map","Proxy","thisArg","argArray","get","element","set","componentName","React.forwardRef","scale","token","fallback","_token","Array","isArray","_fallback","fallbackArr","filter","Boolean","result","map","index","_fallbackArr$index2","_fallbackArr$index","value","_getValue","getValue","val","_theme$__breakpoints","_theme$__breakpoints$","__breakpoints","asArray","getBreakpointValue","_getValue2","_theme$__cssMap","_theme$__cssMap$val","__cssMap","getTokenValue"],"mappings":"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"}