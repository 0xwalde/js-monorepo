"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),require("../../icon/dist/chakra-ui-icon.esm.js");var e=require("../../system/dist/chakra-ui-system.esm.js"),n=require("../../transition/dist/chakra-ui-transition.esm.js"),o=require("../../utils/dist/chakra-ui-utils.esm.js"),r=require("../../react-utils/dist/chakra-ui-react-utils.esm.js");require("../../../react/index.js");var t=require("../../descendant/dist/chakra-ui-descendant.esm.js"),a=require("../../hooks/dist/chakra-ui-hooks.esm.js"),s=require("../../../../_virtual/index.js");function i(){return i=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var o=arguments[n];for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(e[r]=o[r])}return e},i.apply(this,arguments)}function c(e,n){if(null==e)return{};var o,r,t={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],n.indexOf(o)>=0||(t[o]=e[o]);return t}var l=["onChange","defaultIndex","index","allowMultiple","allowToggle"],d=["isDisabled","isFocusable","id"],u=t.createDescendantContext(),p=u[0],f=u[2],m=u[3];function x(e){var n=e.onChange,r=e.defaultIndex,t=e.index,i=e.allowMultiple,d=e.allowToggle,u=c(e,l);!function(e){var n=e.index||e.defaultIndex,r=!o.isUndefined(n)&&!o.isArray(n)&&e.allowMultiple;o.warn({condition:!!r,message:"If 'allowMultiple' is passed, then 'index' or 'defaultIndex' must be an array. You passed: "+typeof n+","})}(e),function(e){o.warn({condition:!(!e.allowMultiple||!e.allowToggle),message:"If 'allowMultiple' is passed, 'allowToggle' will be ignored. Either remove 'allowToggle' or 'allowMultiple' depending on whether you want multiple accordions visible or not"})}(e);var p=f(),m=s.react.exports.useState(-1),x=m[0],v=m[1];a.useUnmountEffect((function(){v(-1)}));var h=a.useControllableState({value:t,defaultValue:function(){return i?null!=r?r:[]:null!=r?r:-1},onChange:n}),b=h[0],g=h[1];return{index:b,setIndex:g,htmlProps:u,getAccordionItemProps:function(e){var n=!1;null!==e&&(n=o.isArray(b)?b.includes(e):b===e);return{isOpen:n,onChange:function(n){if(null!==e)if(i&&o.isArray(b)){var r=n?o.addItem(b,e):o.removeItem(b,e);g(r)}else n?g(e):d&&g(-1)}}},focusedIndex:x,setFocusedIndex:v,descendants:p}}var v=r.createContext({name:"AccordionContext",errorMessage:"useAccordionContext: `context` is undefined. Seems you forgot to wrap the accordion components in `<Accordion />`"}),h=v[0],b=v[1];function g(e){var n=e.isDisabled,t=e.isFocusable,l=e.id,u=c(e,d),p=b(),f=p.getAccordionItemProps,x=p.setFocusedIndex,v=s.react.exports.useRef(null),h=a.useIds(l,"accordion-button","accordion-panel"),g=h[0],w=h[1];!function(e){o.warn({condition:!(!e.isFocusable||e.isDisabled),message:"Using only 'isFocusable', this prop is reserved for situations where you pass 'isDisabled' but you still want the element to receive focus (A11y). Either remove it or pass 'isDisabled' as well.\n    "})}(e);var A=m({disabled:n&&!t}),_=A.register,y=A.index,C=A.descendants,k=f(-1===y?null:y),E=k.isOpen,I=k.onChange;!function(e){o.warn({condition:e.isOpen&&!!e.isDisabled,message:"Cannot open a disabled accordion item"})}({isOpen:E,isDisabled:n});var D=s.react.exports.useCallback((function(){null==I||I(!E),x(y)}),[y,x,E,I]),P=s.react.exports.useCallback((function(e){var n={ArrowDown:function(){var e=C.nextEnabled(y);e&&o.focus(e.node)},ArrowUp:function(){var e=C.prevEnabled(y);e&&o.focus(e.node)},Home:function(){var e=C.firstEnabled();e&&o.focus(e.node)},End:function(){var e=C.lastEnabled();e&&o.focus(e.node)}}[o.normalizeEventKey(e)];n&&(e.preventDefault(),n(e))}),[C,y]),M=s.react.exports.useCallback((function(){x(y)}),[x,y]),O=s.react.exports.useCallback((function(e,t){return void 0===e&&(e={}),void 0===t&&(t=null),i({},e,{type:"button",ref:r.mergeRefs(_,v,t),id:g,disabled:!!n,"aria-expanded":!!E,"aria-controls":w,onClick:o.callAllHandlers(e.onClick,D),onFocus:o.callAllHandlers(e.onFocus,M),onKeyDown:o.callAllHandlers(e.onKeyDown,P)})}),[g,n,E,D,M,P,w,_]),j=s.react.exports.useCallback((function(e,n){return void 0===e&&(e={}),void 0===n&&(n=null),i({},e,{ref:n,role:"region",id:w,"aria-labelledby":g,hidden:!E})}),[g,E,w]);return{isOpen:E,isDisabled:n,isFocusable:t,onOpen:function(){null==I||I(!0)},onClose:function(){null==I||I(!1)},getButtonProps:O,getPanelProps:j,htmlProps:u}}var w=["children","reduceMotion"],A=["htmlProps","descendants"],_=["htmlProps"],y=e.createStylesContext("Accordion"),C=y[0],k=y[1],E=e.forwardRef((function(n,r){var t=n.children,a=n.reduceMotion,l=c(n,w),d=e.useMultiStyleConfig("Accordion",l),u=x(e.omitThemingProps(l)),f=u.htmlProps,m=u.descendants,v=c(u,A),b=s.react.exports.useMemo((function(){return i({},v,{reduceMotion:!!a})}),[v,a]);return s.react.exports.createElement(p,{value:m},s.react.exports.createElement(h,{value:b},s.react.exports.createElement(C,{value:d},s.react.exports.createElement(e.chakra.div,i({ref:r},f,{className:o.cx("chakra-accordion",l.className),__css:d.root}),t))))}));o.__DEV__&&(E.displayName="Accordion");var I=r.createContext({name:"AccordionItemContext",errorMessage:"useAccordionItemContext: `context` is undefined. Seems you forgot to wrap the accordion item parts in `<AccordionItem />` "}),D=I[0],P=I[1],M=e.forwardRef((function(n,r){var t=n.children,a=n.className,l=g(n),d=l.htmlProps,u=c(l,_),p=i({},k().container,{overflowAnchor:"none"}),f=s.react.exports.useMemo((function(){return u}),[u]);return s.react.exports.createElement(D,{value:f},s.react.exports.createElement(e.chakra.div,i({ref:r},d,{className:o.cx("chakra-accordion__item",a),__css:p}),o.runIfFn(t,{isExpanded:!!u.isOpen,isDisabled:!!u.isDisabled})))}));o.__DEV__&&(M.displayName="AccordionItem");var O=e.forwardRef((function(n,r){var t=(0,P().getButtonProps)(n,r),a=i({display:"flex",alignItems:"center",width:"100%",outline:0},k().button);return s.react.exports.createElement(e.chakra.button,i({},t,{className:o.cx("chakra-accordion__button",n.className),__css:a}))}));o.__DEV__&&(O.displayName="AccordionButton");var j=e.forwardRef((function(r,t){var a=b().reduceMotion,c=P(),l=c.getPanelProps,d=c.isOpen,u=l(r,t),p=o.cx("chakra-accordion__panel",r.className),f=k();a||delete u.hidden;var m=s.react.exports.createElement(e.chakra.div,i({},u,{__css:f.panel,className:p}));return a?m:s.react.exports.createElement(n.Collapse,{in:d},m)}));o.__DEV__&&(j.displayName="AccordionPanel"),exports.Accordion=E,exports.AccordionButton=O,exports.AccordionDescendantsProvider=p,exports.AccordionItem=M,exports.AccordionPanel=j,exports.AccordionProvider=h,exports.useAccordion=x,exports.useAccordionContext=b,exports.useAccordionDescendant=m,exports.useAccordionDescendants=f,exports.useAccordionItem=g;
//# sourceMappingURL=chakra-ui-accordion.esm.js.map
